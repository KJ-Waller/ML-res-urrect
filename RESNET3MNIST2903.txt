Script started on Thu 28 Mar 2019 03:20:59 PM UTC
]0;harditsinghmarwah@fastai-instance-2: ~/ML-res-urrect[01;32mharditsinghmarwah@fastai-instance-2[00m:[01;34m~/ML-res-urrect[00m$ python3 RESNQ[KET-2[K3_MNIST.py 
cuda:0
Traceback (most recent call last):
  File "RESNET-3_MNIST.py", line 126, in <module>
    model.load_state_dict(torch.load('./resnet3-final.pt'))
  File "/opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 769, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for CIFARNET:
	size mismatch for reslayer1.0.weight: copying a param with shape torch.Size([16, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([16, 1, 3, 3]).
]0;harditsinghmarwah@fastai-instance-2: ~/ML-res-urrect[01;32mharditsinghmarwah@fastai-instance-2[00m:[01;34m~/ML-res-urrect[00m$ vim[K[K[Kpython3 RESNET-3_MNIST.py exit[Kpython3 NET-3_MNIST.py [4Pvim[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[4@python3[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[4Pvim[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[4@python3[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[4Pvim[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
[?1000h[?1049h[?1h=[2;1Hâ–½[6n[2;1H  [1;1H]11;?[1;41r[?12;25h[?12l[?25h[27m[23m[m[H[2J[?25l[41;1H"NET-3_MNIST.py" 151L, 4776C[>c[1;5H[38;5;130mdef[m [36m__init__[m(self, num_classes=[31m10[m):[2;9H[36msuper[m(CIFARNET, self).__init__()[4;9Hself.reslayer1 = nn.Sequential([5;13Hnn.Conv2d([31m1[m, [31m16[m, [31m3[m, [31m1[m, [31m1[m), [34m# 32 output[m[6;13Hnn.BatchNorm2d([31m16[m),[7;13Hnn.ReLU(),[8;13HResBlock1([31m16[m, [31m32[m),[9;13HResBlock([31m32[m, [31m32[m),[10;13Hnn.BatchNorm2d([31m32[m),[11;13HResBlock1([31m32[m, [31m64[m),[12;13HResBlock([31m64[m, [31m64[m),[13;13HResBlock1([31m64[m, [31m128[m),[14;13HResBlock([31m128[m, [31m128[m),[15;13Hnn.BatchNorm2d([31m128[m),[16;13Hnn.ReLU(),[17;13Hnn.AvgPool2d([31m8[m,[31m1[m,[31m1[m)[18;9H)[20;9Hself.fc1 = nn.Linear([31m27[m*[31m27[m*[31m128[m, num_classes)[22;5H[38;5;130mdef[m [36mforward[m(self, x):[23;9Hx = self.reslayer1(x)[24;9Hx = x.reshape(x.size([31m0[m), -[31m1[m)[25;9Hx = self.fc1(x)[26;9H[38;5;130mreturn[m x

model = CIFARNET(num_classes).to(device)

train_loader = torch.utils.data.DataLoader(dataset=train_set, batch_size=batch_size, shuffle=[36mTrue[m)
test_loader = torch.utils.data.DataLoader(dataset=test_set, batch_size=batch_size, shuffle=[36mFalse[m)

criterion = nn.CrossEntropyLoss()
optimizer = torch.optim.Adam(model.parameters(), lr=learning_rate)

total_step = [36mlen[m(train_loader)

model.train()
[38;5;130mfor[m epoch [38;5;130min[m [36mrange[m(num_epochs):
    [38;5;130mfor[m i, (images, labels) [38;5;130min[m [36menumerate[m(train_loader):[41;130H98,34[9C70%[20;34H[?12l[?25h[?1000l[?1002hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[1;40r[1;1H[3L[1;41r[2;1H[38;5;130mclass[m [36mCIFARNET[m(nn.Module):[41;1H[K[41;130H98,34[9C67%[23;34H[?12l[?25h[?25l[1;40r[1;1H[3L[1;41r[1;9Hx = self.layer1(F.relu(x))[3;9H[38;5;130mreturn[m x[41;130H[K[41;130H98,34[9C64%[26;34H[?12l[?25h[?25l[1;40r[1;1H[3L[1;41r[1;13Hself.shrink = nn.Sequential()[3;5H[38;5;130mdef[m [36mforward[m(self, x):[41;130H[K[41;130H98,34[9C62%[29;34H[?12l[?25h[?25l[1;40r[1;1H[3L[1;41r[1;17Hnn.Conv2d(in_channels, out_channels, [31m1[m, stride)[2;13H)[3;9H[38;5;130melse[m:[41;130H[K[41;130H98,34[9C59%[32;34H[?12l[?25h[?25l[1;40r[1;1H[3L[1;41r[2;9H[38;5;130mif[m stride != [31m1[m [38;5;130mor[m in_channels != out_channels:[3;13Hself.shrink = nn.Sequential([41;130H[K[41;130H98,34[9C56%[35;34H[?12l[?25h[?25l[1;40r[1;1H[3L[1;41r[1;13Hnn.ReLU(),[2;13Hnn.Conv2d(out_channels, out_channels, [31m3[m, stride, [31m1[m),[3;9H)[35;25H[106m([5C)[m[41;130H[K[41;130H95,31[9C54%[35;31H[?12l[?25h[?25l[1;40r[1;1H[3L[1;41r[1;9Hself.layer1 = nn.Sequential([2;13Hnn.Conv2d(in_channels, out_channels, [31m3[m, stride, [31m1[m),[3;13Hnn.BatchNorm2d(out_channels),[38;25H([5C)[41;130H[K[41;130H92,31[9C51%[35;31H[?12l[?25h[?25l[1;40r[1;1H[3L[1;41r[1;5H[38;5;130mdef[m [36m__init__[m(self, in_channels, out_channels, stride=[31m1[m):[2;9H[36msuper[m(ResBlock1, self).__init__()[41;130H[K[41;130H89,30[9C48%[35;30H[?12l[?25h[?25l[1;40r[1;1H[3L[1;41r[3;1H[38;5;130mclass[m [36mResBlock1[m(nn.Module):[41;130H[K[41;130H86,30[9C45%[35;30H[?12l[?25h[?25l[1;40r[1;1H[3M[1;41r[38;13HResBlock([31m128[m, [31m128[m),[39;13Hnn.BatchNorm2d([31m128[m),[40;13Hnn.ReLU(),[41;130H[K[41;130H86,30[9C48%[32;30H[?12l[?25h[?25l[1;40r[1;1H[3L[1;41r[3;1H[38;5;130mclass[m [36mResBlock1[m(nn.Module):[41;130H[K[41;130H86,30[9C45%[35;30H[?12l[?25h[?25l[1;40r[1;1H[3L[1;41r[1;9Hx = self.layer1(x)[3;9H[38;5;130mreturn[m x[41;130H[K[41;130H83,34[9C43%[35;34H[?12l[?25h[?25l[1;40r[1;1H[3L[1;41r[2;5H[38;5;130mdef[m [36mforward[m(self, x):[41;130H[K[41;130H80,34[9C40%[35;34H[?12l[?25h[?25l[1;40r[1;1H[3L[1;41r[1;13H)[2;9H[38;5;130melse[m:[3;13Hself.shrink = nn.Sequential()[41;130H[K[41;130H77,26[9C37%[35;26H[?12l[?25h[?25l[1;40r[1;1H[3L[1;41r[1;9H[38;5;130mif[m stride != [31m1[m [38;5;130mor[m in_channels != out_channels:[2;13Hself.shrink = nn.Sequential([3;17Hnn.Conv2d(in_channels, out_channels, [31m1[m, stride)[41;130H[K[41;130H74,8[10C35%[35;8H[?12l[?25h[?25l[1;40r[1;1H[3L[1;41r[1;13Hnn.Conv2d(out_channels, out_channels, [31m3[m, stride, [31m1[m),[2;9H)[41;130H[K[41;130H71,4[10C32%[35;4H[?12l[?25h[?25l[1;40r[1;1H[3L[1;41r[1;13Hnn.Conv2d(in_channels, out_channels, [31m3[m, stride, [31m1[m),[2;13Hnn.BatchNorm2d(out_channels),[3;13Hnn.ReLU(),[33;40H[106m([35;13H)[m[41;130H[K[41;130H68,13[9C29%[35;13H[?12l[?25h[?25l[1;40r[1;1H[3L[1;41r[1;9Hself.layer1 = nn.Sequential([2;13Hnn.BatchNorm2d(in_channels),[3;13Hnn.ReLU(),[36;40H([38;13H)[41;130H[K[41;130H65,34[9C27%[35;34H[?12l[?25h[?25l[1;40r[1;1H[3L[1;41r[1;5H[38;5;130mdef[m [36m__init__[m(self, in_channels, out_channels, stride=[31m1[m):[2;9H[36msuper[m(ResBlock, self).__init__()[41;130H[K[41;130H62,34[9C24%[35;34H[?12l[?25h[?25l[1;40r[1;1H[3L[1;41r[1;1H[34m# learning_rate = 0.0001 #61%[m

[38;5;130mclass[m [36mResBlock[m(nn.Module):[41;130H[K[41;130H59,34[9C21%[35;34H[?12l[?25h[?25l[1;40r[1;1H[3L[1;41r[1;1Hbatch_size = [31m50[m
num_classes = [31m10[m
learning_rate = [31m0.0005[m [34m#68%[m[41;130H[K[41;130H56,34[9C18%[35;34H[?12l[?25h[?25l[1;40r[1;1H[3L[1;41r[1;1Htest_set = torchvision.datasets.MNIST([31m'../data/'[m, train=[36mFalse[m, transform=transform)

num_epochs = [31m200[m[41;130H[K[41;130H53,4[10C16%[35;4H[?12l[?25h[?25l[1;40r[1;1H[3L[1;41r[1;1H[34m# train_set = torchvision.datasets.CIFAR10('../data/', train=True, transform=transform, download=True)
# test_set = torchvision.datasets.CIFAR10('../data/', train=False, transform=transform)[m
train_set = torchvision.datasets.MNIST([31m'../data/'[m, train=[36mTrue[m, transform=transform, download=[36mTrue[m)[41;130H[K[41;130H50,8[10C13%[35;8H[?12l[?25h[?25l[1;40r[1;1H[3L[1;41r[1;5Htorchvision.transforms.RandomCrop([31m32[m),
    torchvision.transforms.ToTensor()])[41;130H[K[41;130H47,25[9C10%[35;25H[?12l[?25h[?25l[1;40r[1;1H[3L[1;41r[1;1Htransform = torchvision.transforms.Compose([
    torchvision.transforms.Pad([31m4[m),
    torchvision.transforms.RandomHorizontalFlip(),[41;130H[K[41;130H44,13[10C8%[35;13H[?12l[?25h[?25l[1;40r[1;1H[3L[1;41r[1;1H[36mprint[m(device)

[34m# Image preprocessing modules[m[41;130H[K[41;130H41,34[10C5%[35;34H[?12l[?25h[?25l[1;40r[1;1H[3L[1;41r[1;1H[35mimport[m torchvision

device = torch.device([31m'cuda:0'[m [38;5;130mif[m torch.cuda.is_available() [38;5;130melse[m [31m'cpu'[m)[28;36H[106m([35;9H)[m[41;130H[K[41;130H38,9[11C2%[35;9H[?12l[?25h[?25l[1;40r[1;1H[3L[1;41r[1;1H[35mimport[m torch
[35mimport[m torch.nn [38;5;130mas[m nn
[35mimport[m torch.nn.functional [38;5;130mas[m F[31;36H([38;9H)[41;130H[K[41;130H35,34[9CTop[35;34H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[1;40r[1;1H[3M[1;41r[38;13Hself.shrink = nn.Sequential([39;17Hnn.Conv2d(in_channels, out_channels, [31m1[m, stride)[40;13H)[41;130H[K[41;130H35,34[10C2%[32;34H[?12l[?25h[?25l[41;120H^[[32;34H[41;120H  [32;34H[41;120H^[[32;34H[41;120H  [32;34H[?12l[?25h[?25l[41;120H:[32;34H[41;120H[K[41;1H:[?12l[?25hw[?25l[?12l[?25hq[?25l[?12l[?25h[?25l[?1002l"NET-3_MNIST.py" 151L, 4776C written
[?1l>[?12l[?25h[?1049l]0;harditsinghmarwah@fastai-instance-2: ~/ML-res-urrect[01;32mharditsinghmarwah@fastai-instance-2[00m:[01;34m~/ML-res-urrect[00m$ vim NET-3_MNIST.py [7@python3 RES[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cexit[Kpython3 NET-3_MNIST.py [4Pvim[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[4@python3[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[4Pvim[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[4@python3[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cexit[Kpython3 RESNET-3_MNIST.py [7Pvim [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Kvim NET-3_MNIST.py [7@python3 RES[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cexit[Kpython3 NET-3_MNIST.py [C[C[1@R[1@E[1@S
cuda:0
Traceback (most recent call last):
  File "RESNET-3_MNIST.py", line 126, in <module>
    model.load_state_dict(torch.load('./resnet3-final.pt'))
  File "/opt/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 769, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for CIFARNET:
	size mismatch for reslayer1.0.weight: copying a param with shape torch.Size([16, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([16, 1, 3, 3]).
]0;harditsinghmarwah@fastai-instance-2: ~/ML-res-urrect[01;32mharditsinghmarwah@fastai-instance-2[00m:[01;34m~/ML-res-urrect[00m$ python3 RESNET-3_MNIST.py [1P[1P[1P[1P[1P[1P[1P[1@v[1@i[1@m
[?1000h[?1049h[?1h=[2;1Hâ–½[6n[2;1H  [1;1H]11;?[1;41r[?12;25h[?12l[?25h[27m[23m[m[H[2J[?25l[41;1H"RESNET-3_MNIST.py" 163L, 5051C[>c[1;1H[35mimport[m torch
[35mimport[m torch.nn [38;5;130mas[m nn
[35mimport[m torch.nn.functional [38;5;130mas[m F
[35mimport[m torchvision

device = torch.device([31m'cuda:0'[m [38;5;130mif[m torch.cuda.is_available() [38;5;130melse[m [31m'cpu'[m)
[36mprint[m(device)

[34m# Image preprocessing modules[m
transform = torchvision.transforms.Compose([
    torchvision.transforms.Pad([31m4[m),
    torchvision.transforms.RandomHorizontalFlip(),
    torchvision.transforms.RandomCrop([31m32[m),
    torchvision.transforms.ToTensor()])

[34m# train_set = torchvision.datasets.CIFAR10('../data/', train=True, transform=transform, download=True)
# test_set = torchvision.datasets.CIFAR10('../data/', train=False, transform=transform)[m
train_set = torchvision.datasets.MNIST([31m'../data/'[m, train=[36mTrue[m, transform=transform, download=[36mTrue[m)
test_set = torchvision.datasets.MNIST([31m'../data/'[m, train=[36mFalse[m, transform=transform)

num_epochs = [31m200[m
batch_size = [31m50[m
num_classes = [31m10[m
learning_rate = [31m0.0005[m [34m#68%
# learning_rate = 0.0001 #61%[m

[38;5;130mclass[m [36mResBlock[m(nn.Module):
    [38;5;130mdef[m [36m__init__[m(self, in_channels, out_channels, stride=[31m1[m):[29;9H[36msuper[m(ResBlock, self).__init__()[31;9Hself.layer1 = nn.Sequential([32;13Hnn.BatchNorm2d(in_channels),[33;13Hnn.ReLU(),[34;13Hnn.Conv2d(in_channels, out_channels, [31m3[m, stride, [31m1[m),[35;13Hnn.BatchNorm2d(out_channels),[36;13Hnn.ReLU(),[37;13Hnn.Conv2d(out_channels, out_channels, [31m3[m, stride, [31m1[m),[38;9H)[40;9H[38;5;130mif[m stride != [31m1[m [38;5;130mor[m in_channels != out_channels:[41;130H1,12[10CTop[1;12H[?12l[?25h[?1000l[?1002hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[41;120Ha[1;12H[41;120H [1;13H[41;1H[1m-- INSERT --[m[41;13H[K[41;130H1,13[10CTop[1;13H[?12l[?25h[?25l[41;130H2[2;13H[?12l[?25h[?25l[41;130H3[3;13H[?12l[?25h[?25l[41;130H4[4;13H[?12l[?25h[?25l[41;130H5,1 [5;1H[?12l[?25h[?25l[41;130H6,13[6;13H[?12l[?25h[?25l[7;6H[106m([mdevice[106m)[m[41;130H7[7;13H[?12l[?25h[?25l[7;6H(device)[41;130H8,1 [8;1H[?12l[?25h[?25l[41;130H9,13[9;13H[?12l[?25h[?25l[41;130H10,13[10;13H[?12l[?25h[?25l[41;131H1[11;13H[?12l[?25h[?25l[41;131H3[13;13H[?12l[?25h[?25l[41;131H4[14;13H[?12l[?25h[?25l[41;131H5,1 [15;1H[?12l[?25h[?25l[41;131H6,13[16;13H[?12l[?25h[?25l[41;131H7[17;13H[?12l[?25h[?25l[41;131H8[18;13H[?12l[?25h[?25l[41;131H9[19;13H[?12l[?25h[?25l[41;130H20,1 [20;1H[?12l[?25h[?25l[41;131H1,13[21;13H[?12l[?25h[?25l[41;131H2[22;13H[?12l[?25h[?25l[41;131H3[23;13H[?12l[?25h[?25l[41;131H4[24;13H[?12l[?25h[?25l[41;131H6,1 [26;1H[?12l[?25h[?25l[41;131H7,13[27;13H[?12l[?25h[?25l[41;131H8[28;13H[?12l[?25h[?25l[41;131H9[29;13H[?12l[?25h[?25l[41;130H30,9 [30;9H[?12l[?25h[?25l[41;131H1,13[31;13H[?12l[?25h[?25l[41;131H2[32;13H[?12l[?25h[?25l[41;131H3[33;13H[?12l[?25h[?25l[41;131H4[34;13H[?12l[?25h[?25l[41;131H5[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;13Hself.shrink = nn.Sequential([41;130H[K[41;130H36,13[10C0%[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;17Hnn.Conv2d(in_channels, out_channels, [31m1[m, stride)[41;130H[K[41;130H37,13[10C1%[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;13H)[41;130H[K[41;130H38,10[10C2%[28;36H[106m([35;9H)[?12l[?25h[?25l[1;40r[m[40;1H
[1;41r[40;9H[38;5;130melse[m:[41;130H[K[41;130H39,9[11C3%[27;36H([34;9H)[35;9H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;13Hself.shrink = nn.Sequential()[41;130H[K[41;130H40,13[10C4%[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[41;130H[K[41;130H41,13[10C4%[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;5H[38;5;130mdef[m [36mforward[m(self, x):[41;130H[K[41;130H42,13[10C5%[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;9Hresidual = x[41;130H[K[41;130H43,13[10C6%[33;40H[106m([35;13H)[?12l[?25h[?25l[1;40r[m[40;1H
[1;41r[41;130H[K[41;130H44,13[10C7%[32;40H([34;13H)[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;9Hresidual = self.shrink(x)[41;130H[K[41;130H45,13[10C8%[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[41;130H[K[41;130H46,5[11C8%[35;5H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;9Hx = self.layer1(x)[41;130H[K[41;130H47,13[10C9%[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;9Hx += residual[41;130H[K[41;130H48,13[9C10%[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[41;130H[K[41;130H49,9[10C11%[35;9H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;9H[38;5;130mreturn[m x[41;130H[K[41;130H50,13[9C12%[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[41;130H[K[41;130H51,13[9C13%[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[41;130H[K[41;130H52,13[9C13%[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;1H[38;5;130mclass[m [36mResBlock1[m(nn.Module):[41;130H[K[41;130H53,13[9C14%[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;5H[38;5;130mdef[m [36m__init__[m(self, in_channels, out_channels, stride=[31m1[m):[41;130H[K[41;130H54,9[10C15%[35;9H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;9H[36msuper[m(ResBlock1, self).__init__()[41;130H[K[41;130H55,13[9C16%[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[41;130H[K[41;130H56,9[10C17%[35;9H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;9Hself.layer1 = nn.Sequential([41;130H[K[41;130H57,5[10C17%[35;5H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;13Hnn.Conv2d(in_channels, out_channels, [31m3[m, stride, [31m1[m),[41;130H[K[41;130H58,13[9C18%[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;13Hnn.BatchNorm2d(out_channels),[41;130H[K[41;130H59,13[9C19%[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;13Hnn.ReLU(),[41;130H[K[41;130H60,13[9C20%[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;13Hnn.Conv2d(out_channels, out_channels, [31m3[m, stride, [31m1[m),[41;130H[K[41;130H61,9[10C21%[35;9H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;9H)[41;130H[K[41;130H62,13[9C21%[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[41;130H[K[41;130H63,13[9C22%[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;9H[38;5;130mif[m stride != [31m1[m [38;5;130mor[m in_channels != out_channels:[41;130H[K[41;130H64,13[9C23%[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;13Hself.shrink = nn.Sequential([41;130H[K[41;130H65,13[9C24%[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;17Hnn.Conv2d(in_channels, out_channels, [31m1[m, stride)[41;130H[K[41;130H66,13[9C25%[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;13H)[41;130H[K[41;130H67,10[9C26%[30;36H[106m([35;9H)[?12l[?25h[?25l[1;40r[m[40;1H
[1;41r[40;9H[38;5;130melse[m:[41;130H[K[41;130H68,9[10C26%[29;36H([34;9H)[35;9H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;13Hself.shrink = nn.Sequential()[41;130H[K[41;130H69,13[9C27%[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[41;130H[K[41;130H70,13[9C28%[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;5H[38;5;130mdef[m [36mforward[m(self, x):[41;130H[K[41;130H71,13[9C29%[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;9Hx = F.relu(x)[41;130H[K[41;130H72,13[9C30%[33;40H[106m([35;13H)[?12l[?25h[?25l[1;40r[m[40;1H
[1;41r[40;9Hresidual = x[41;130H[K[41;130H73,13[9C30%[32;40H([34;13H)[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[41;130H[K[41;130H74,13[9C31%[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;9Hresidual = self.shrink(x)[41;130H[K[41;130H75,5[10C32%[35;5H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[41;130H[K[41;130H76,13[9C33%[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;9Hx = self.layer1(x)[41;130H[K[41;130H77,13[9C34%[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;9Hx += residual[41;130H[K[41;130H78,13[9C34%[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[41;130H[K[41;130H79,9[10C35%[35;9H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;9H[38;5;130mreturn[m x[41;130H[K[41;130H80,13[9C36%[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[41;130H[K[41;130H81,13[9C37%[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;1H[38;5;130mclass[m [36mCIFARNET[m(nn.Module):[41;130H[K[41;130H82,13[9C38%[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[41;130H[K[41;130H83,13[9C39%[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;5H[38;5;130mdef[m [36m__init__[m(self, num_classes=[31m10[m):[41;130H[K[41;130H84,9[10C39%[35;9H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;9H[36msuper[m(CIFARNET, self).__init__()[41;130H[K[41;130H85,13[9C40%[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[41;130H[K[41;130H86,5[10C41%[35;5H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;9Hself.reslayer1 = nn.Sequential([41;130H[K[41;130H87,13[9C42%[35;13H[?12l[?25h[?25l[1;40r[1;1H[2M[1;41r[39;13Hnn.Conv2d([31m1[m, [31m16[m, [31m3[m, [31m1[m, [31m1[m), [34m# 32 output[m[40;13Hnn.BatchNorm2d([31m16[m),[41;130H[K[41;130H89,13[9C43%[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;13Hnn.ReLU(),[41;130H[K[41;130H90,13[9C44%[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;13HResBlock1([31m16[m, [31m32[m),[41;130H[K[41;130H91,9[10C45%[35;9H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;13HResBlock([31m32[m, [31m32[m),[41;130H[K[41;130H92,13[9C46%[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;13Hnn.BatchNorm2d([31m32[m),[41;130H[K[41;130H93,13[9C47%[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;13HResBlock1([31m32[m, [31m64[m),[41;130H[K[41;130H94,13[9C47%[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;13HResBlock([31m64[m, [31m64[m),[41;130H[K[41;130H95,13[9C48%[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;13HResBlock1([31m64[m, [31m128[m),[41;130H[K[41;130H96,13[9C49%[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;13HResBlock([31m128[m, [31m128[m),[41;130H[K[41;130H97,13[9C50%[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;13Hnn.BatchNorm2d([31m128[m),[41;130H[K[41;130H98,13[9C51%[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;13Hnn.ReLU(),[41;130H[K[41;130H99,13[9C52%[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;13Hnn.AvgPool2d([31m8[m,[31m1[m,[31m1[m)[41;130H[K[41;130H100,13[8C52%[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;9H)[41;130H[K[41;130H101,13[8C53%[35;13H[?12l[?25h[?25l[1;40r[1;1H[2M[1;41r[40;9Hself.fc1 = nn.Linear([31m27[m*[31m27[m*[31m128[m, num_classes)[41;130H[K[41;130H103,13[8C55%[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[41;130H[K[41;130H104,13[8C56%[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;5H[38;5;130mdef[m [36mforward[m(self, x):[41;130H[K[41;130H105,13[8C56%[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;9Hx = self.reslayer1(x)[41;130H[K[41;130H106,10[8C57%[21;39H[106m([35;9H)[?12l[?25h[?25l[1;40r[m[40;1H
[1;41r[40;9Hx = x.reshape(x.size([31m0[m), -[31m1[m)[41;130H[K[41;130H107,9[9C58%[20;39H([34;9H)[35;9H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;9Hx = self.fc1(x)[41;130H[K[41;130H108,13[8C59%[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;9H[38;5;130mreturn[m x[41;130H[K[41;130H109,9[9C60%[35;9H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[41;130H[K[41;130H110,13[8C60%[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;1Hmodel = CIFARNET(num_classes).to(device)[41;130H[K[41;130H111,13[8C61%[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[41;130H[K[41;130H112,13[8C62%[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;1Htrain_loader = torch.utils.data.DataLoader(dataset=train_set, batch_size=batch_size, shuffle=[36mTrue[m)[41;130H[K[41;130H113,13[8C63%[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;1Htest_loader = torch.utils.data.DataLoader(dataset=test_set, batch_size=batch_size, shuffle=[36mFalse[m)[41;130H[K[41;130H114,13[8C64%[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[41;130H[K[41;130H115,5[9C65%[35;5H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;1Hcriterion = nn.CrossEntropyLoss()[41;130H[K[41;130H116,13[8C65%[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;1Hoptimizer = torch.optim.Adam(model.parameters(), lr=learning_rate)[41;130H[K[41;130H117,1[9C66%[35;1H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[41;130H[K[41;130H118,13[8C67%[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;1Htotal_step = [36mlen[m(train_loader)[41;130H[K[41;130H119,13[8C68%[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[41;130H[K[41;130H120,1[9C69%[35;1H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;1Hmodel.load_state_dict(torch.load([31m'./resnet3-final.pt'[m))[41;130H[K[41;130H121,13[8C69%[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[41;130H[K[41;130H122,13[8C70%[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;1H[34m#model.train()[m[41;130H[K[41;130H123,1[9C71%[35;1H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;1H[34m#for epoch in range(num_epochs):[m[41;130H[K[41;130H124,13[8C72%[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;1H[34m#    for i, (images, labels) in enumerate(train_loader):[m[41;130H[K[41;130H125,1[9C73%[35;1H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;1H[34m#        images = images.to(device)[m[41;130H[K[41;130H126,13[8C73%[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;1H[34m#        labels = labels.to(device)[m[41;130H[K[41;130H127,1[9C74%[35;1H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;1H[34m#        [m[41;130H[K[41;130H128,13[8C75%[35;13H[34m[106m()[?12l[?25h[?25l[1;40r[m[40;1H
[1;41r[40;1H[34m#        # Forward[m[41;130H[K[41;130H129,13[8C76%[34;13H[34m()[35;13H[?12l[?25h[?25l[1;40r[m[40;1H
[1;41r[40;1H[34m#        output = model(images)[m[41;130H[K[41;130H130,13[8C77%[35;13H[34m[106m([14C)[35;13H[?12l[?25h[?25l[1;40r[m[40;1H
[1;41r[40;1H[34m#        loss = criterion(output, labels)[m[41;130H[K[41;130H131,13[8C78%[34;13H[34m([14C)[35;13H[?12l[?25h[?25l[1;40r[m[40;1H
[1;41r[40;1H[34m#        [m[41;130H[K[41;130H132,13[8C78%[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;1H[34m#        # Backprop and Gradient Descent[m[41;130H[K[41;130H133,10[8C79%[35;10H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;1H[34m#        optimizer.zero_grad()[m[41;130H[K[41;130H134,13[8C80%[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;1H[34m#        loss.backward()[m[41;130H[K[41;130H135,13[8C81%[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;1H[34m#        optimizer.step()[m[41;130H[K[41;130H136,13[8C82%[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;1H[34m#        [m[41;130H[K[41;130H137,10[8C82%[35;10H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;1H[34m#        # Print out current progress of training[m[41;130H[K[41;130H138,13[8C83%[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;1H[34m#        if (i+1) % 100 == 0:[m[41;130H[K[41;130H139,13[8C84%[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;1H[34m#            print('Epoch [{}/{}], Step [{}/{}], Loss: {:.4f}'.format(epoch+1, num_epochs, i+1, total_step, loss.item()))[m[41;130H[K[41;130H140,13[8C85%[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;1H[34m#[m[41;130H[K[41;130H141,13[8C86%[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;1H[34m# Test the model[m[41;130H[K[41;130H142,10[8C86%[35;10H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;1Hmodel.eval()  [34m# eval mode [m[41;130H[K[41;130H143,13[8C87%[35;13H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;1H[38;5;130mwith[m torch.no_grad():[41;130H[K[41;130H144,13[8C88%[35;13H[34m[106m([3C)[?12l[?25h[?25l[1;40r[m[40;1H
[1;41r[40;5Hcorrect = [31m0[m[41;130H[K[41;130H145,13[8C89%[34;13H[34m(i+1)[35;13H[?12l[?25h[?25l[1;40r[m[40;1H
[1;41r[40;5Htotal = [31m0[m[41;130H[K[41;130H146,2[9C90%[35;2H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;5H[38;5;130mfor[m images, labels [38;5;130min[m test_loader:[41;130H[K[41;130H147,13[8C91%[35;13H[?12l[?25h[?25l[41;132H6,2 [34;2H[?12l[?25h[?25l[41;132H5,13[33;13H[?12l[?25h[?25l[32;13H[34m[106m([3C)[m[41;132H4[32;13H[?12l[?25h[?25l[34m(i+1)[m[41;132H3[31;13H[?12l[?25h[?25l[41;132H2,10[30;10H[?12l[?25h[?25l[41;132H1,13[29;13H[?12l[?25h[?25l[41;132H0[28;13H[?12l[?25h[?25l[41;131H39[27;13H[?12l[?25h[?25l[41;132H8[26;13H[?12l[?25h[?25l[41;132H7,10[25;10H[?12l[?25h[?25l[41;132H6,13[24;13H[?12l[?25h[?25l[41;132H5[23;13H[?12l[?25h[?25l[41;132H4[22;13H[?12l[?25h[?25l[41;132H3,10[21;10H[?12l[?25h[?25l[41;132H2,13[20;13H[?12l[?25h[?25l[41;132H1[19;13H[?12l[?25h[?25l[18;13H[34m[106m([14C)[m[41;132H0[18;13H[?12l[?25h[?25l[34m([14C)[m[41;131H29[17;13H[?12l[?25h[?25l[16;13H[34m[106m()[m[41;132H8[16;13H[?12l[?25h[?25l[34m()[m[41;132H7,1 [15;1H[?12l[?25h[?25l[16;13H[34m[106m()[m[41;132H8,13[16;13H[?12l[?25h[41;1H[K[?25l[16;13H[34m()[m[41;130H128,12[8C91%[16;12H[?12l[?25h[?25l[41;120H/[16;12H[41;120H[K[41;1H/[?12l[?25h [?25l[16;12H[41;130H128,12[8C91%[16;12H[?12l[?25h[?25l[41;120H~@k[16;12H[41;120H   [16;11H[41;135H1[16;11H[?12l[?25h[?25l[41;120H~@k[16;11H[41;120H   [16;10H[41;135H0[16;10H[?12l[?25h[?25l[41;120H~@k[16;10H[41;120H   [16;9H[41;134H9 [16;9H[?12l[?25h[?25l[41;120H~@k[16;9H[41;120H   [16;8H[41;134H8[16;8H[?12l[?25h[?25l[41;120H~@k[16;8H[41;120H   [16;7H[41;134H7[16;7H[?12l[?25h[?25l[41;120H~@k[16;7H[41;120H   [16;6H[41;134H6[16;6H[?12l[?25h[?25l[41;120H~@k[16;6H[41;120H   [16;5H[41;134H5[16;5H[?12l[?25h[?25l[41;120H~@k[16;5H[41;120H   [16;4H[41;134H4[16;4H[?12l[?25h[?25l[41;120H~@k[16;4H[41;120H   [16;3H[41;134H3[16;3H[?12l[?25h[?25l[41;120H~@k[16;3H[41;120H   [16;2H[41;134H2[16;2H[?12l[?25h[?25l[41;120H~@k[16;2H[41;120H   [16;1H[41;134H1[16;1H[?12l[?25h[?25l[41;120H~@k[16;1H[41;120H   [15;1H[41;132H7,0-1[15;1H[?12l[?25h[?25l[41;120H~@k[15;1H[41;120H   [16;1H[41;132H8,1  [16;1H[?12l[?25h[?25l[41;120H~@k[16;1H[41;120H   [16;2H[41;134H2[16;2H[?12l[?25h[?25l[41;120H~@k[16;2H[41;120H   [16;1H[41;134H1[16;1H[?12l[?25h[?25l[41;120H~@k[16;1H[41;120H   [16;2H[41;134H2[16;2H[?12l[?25h[?25l[41;120Ha[16;2H[41;120H [16;3H[41;1H[1m-- INSERT --[m[41;130H[K[41;130H128,3[9C91%[16;3H[?12l[?25h[?25l[41;134H2[16;2H[?12l[?25h[?25lmodel.train()[16;14H[K[41;134H1[16;1H[?12l[?25h[?25l[41;132H9[17;1H[?12l[?25h[?25l[41;134H2[17;2H[?12l[?25h[?25l[38;5;130mfor[m epoch [38;5;130min[m [36mrange[m(num_epochs):[17;32H[K[41;134H1[17;1H[?12l[?25h[?25l[41;131H30[18;1H[?12l[?25h[?25l[41;134H2[18;2H[?12l[?25h[?25l    [38;5;130mfor[m i, (images, labels) [38;5;130min[m [36menumerate[m(train_loader):[18;56H[K[41;134H1[18;1H[?12l[?25h[?25l[41;132H1[19;1H[?12l[?25h[?25l[41;134H2[19;2H[?12l[?25h[?25l        images = images.to(device)[19;35H[K[41;134H1[19;1H[?12l[?25h[?25l[41;132H2[20;1H[?12l[?25h[?25l        labels = labels.to(device)[20;35H[K[20;1H[?12l[?25h[?25l[27m[23m[m[H[2J[1;5Htotal = [31m0[m
    [38;5;130mfor[m images, labels [38;5;130min[m test_loader:[3;9Himages = images.to(device)[4;9Hlabels = labels.to(device)[5;9Houtputs = model(images)[6;9H_, predicted = torch.max(outputs.data, [31m1[m)[7;9Htotal += labels.size([31m0[m)[8;9Hcorrect += (predicted == labels).sum().item()[10;5H[36mprint[m([31m'Test Accuracy of the model on the 10000 test images: {} %'[m.format([31m100[m * correct / total))

[34m#torch.save(model.state_dict(), './resnet3-final.pt')
#model.load_state_dict(torch.load('./resnet3-final.pt'))[m
[94m~                                                                                                                                                  [15;1H~                                                                                                                                                  [16;1H~                                                                                                                                                  [17;1H~                                                                                                                                                  [18;1H~                                                                                                                                                  [19;1H~                                                                                                                                                  [20;1H~                                                                                                                                                  [21;1H~                                                                                                                                                  [22;1H~                                                                                                                                                  [23;1H~                                                                                                                                                  [24;1H~                                                                                                                                                  [25;1H~                                                                                                                                                  [26;1H~                                                                                                                                                  [27;1H~                                                                                                                                                  [28;1H~                                                                                                                                                  [29;1H~                                                                                                                                                  [30;1H~                                                                                                                                                  [31;1H~                                                                                                                                                  [32;1H~                                                                                                                                                  [33;1H~                                                                                                                                                  [34;1H~                                                                                                                                                  [35;1H~                                                                                                                                                  [36;1H~                                                                                                                                                  [37;1H~                                                                                                                                                  [38;1H~                                                                                                                                                  [39;1H~                                                                                                                                                  [40;1H~                                                                                                                                                  [m[41;1H[1m-- INSERT --[m[117C156,9[9CBot[6;9H[?12l[?25h[?25l, predicted = torch.max(outputs.data, [31m1[m)[6;49H[K[6;9H[?12l[?25h[41;1H[K[?25l[41;130H156,8[9CBot[6;8H[?12l[?25h[?25l[41;120Hz[6;8H[?12l[?25h[?25l[41;120H [6;8H[?12l[?25h[?25l[41;120Hz[6;8H[?12l[?25h[?25l[41;120H [6;8H[?12l[?25h[?25l[41;120Hz[6;8H[?12l[?25h[?25l[41;121H^[[6;8H[41;121H  [6;8H[41;121H^[[6;8H[41;120H   [6;8H[?12l[?25h[?25l[41;120H:[6;8H[41;120H[K[41;1H:[?12l[?25hq[?25l[?12l[?25h![?25l[?12l[?25h[?25l[?1002l[41;1H[K[41;1H[?1l>[?12l[?25h[?1049l]0;harditsinghmarwah@fastai-instance-2: ~/ML-res-urrect[01;32mharditsinghmarwah@fastai-instance-2[00m:[01;34m~/ML-res-urrect[00m$ vim RESNET-3_MNIST.py 
[?1000h[?1049h[?1h=[2;1Hâ–½[6n[2;1H  [1;1H]11;?[1;41r[?12;25h[?12l[?25h[27m[23m[m[H[2J[?25l[41;1H"RESNET-3_MNIST.py" 163L, 5051C[>c[1;1Htotal_step = [36mlen[m(train_loader)

model.load_state_dict(torch.load([31m'./resnet3-final.pt'[m))

[34m#model.train()
#for epoch in range(num_epochs):
#    for i, (images, labels) in enumerate(train_loader):
#        images = images.to(device)
#        labels = labels.to(device)
#        
#        # Forward
#        output = model(images)
#        loss = criterion(output, labels)
#        
#        # Backprop and Gradient Descent
#        optimizer.zero_grad()
#        loss.backward()
#        optimizer.step()
#        
#        # Print out current progress of training
#        if (i+1) % 100 == 0:
#            print('Epoch [{}/{}], Step [{}/{}], Loss: {:.4f}'.format(epoch+1, num_epochs, i+1, total_step, loss.item()))
#
# Test the model[m
model.eval()  [34m# eval mode [m
[38;5;130mwith[m torch.no_grad():
    correct = [31m0[m
    total = [31m0[m
    [38;5;130mfor[m images, labels [38;5;130min[m test_loader:[30;9Himages = images.to(device)[31;9Hlabels = labels.to(device)[32;9Houtputs = model(images)[33;9H_, predicted = torch.max(outputs.data, [31m1[m)[34;9Htotal += labels.size([31m0[m)[35;9Hcorrect += (predicted == labels).sum().item()[37;5H[36mprint[m([31m'Test Accuracy of the model on the 10000 test images: {} %'[m.format([31m100[m * correct / total))

[34m#torch.save(model.state_dict(), './resnet3-final.pt')
#model.load_state_dict(torch.load('./resnet3-final.pt'))[m[41;130H156,8[9CBot[33;8H[?12l[?25h[?1000l[?1002hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[41;120H~@k[33;8H[41;120H   [32;8H[41;132H5[32;8H[?12l[?25h[?25l[41;120H~@k[32;8H[41;120H   [31;8H[41;132H4[31;8H[?12l[?25h[?25l[41;120H~@k[31;8H[41;120H   [30;8H[41;132H3[30;8H[?12l[?25h[?25l[41;120H~@k[30;8H[41;120H   [29;8H[41;132H2[29;8H[?12l[?25h[?25l[41;120H~@k[29;8H[41;120H   [28;8H[41;132H1[28;8H[?12l[?25h[?25l[41;120H~@k[28;8H[41;120H   [27;8H[41;132H0[27;8H[?12l[?25h[?25l[41;120H~@k[27;8H[41;120H   [26;8H[41;131H49[26;8H[?12l[?25h[?25l[41;120H~@k[26;8H[41;120H   [25;8H[41;132H8[25;8H[?12l[?25h[?25l[41;120H~@k[25;8H[41;120H   [24;8H[41;132H7[24;8H[?12l[?25h[?25l[41;120H~@k[24;8H[41;120H   [23;1H[41;132H6,1[23;1H[?12l[?25h[?25l[41;120H~@k[23;1H[41;120H   [22;8H[41;132H5,8[22;8H[?12l[?25h[?25l[41;120H~@k[22;8H[41;120H   [21;8H[41;132H4[21;8H[?12l[?25h[?25l[41;120H~@k[21;8H[41;120H   [20;8H[41;132H3[20;8H[?12l[?25h[?25l[41;120H~@k[20;8H[41;120H   [21;8H[41;132H4[21;8H[?12l[?25h[?25l[41;120H~@k[21;8H[41;120H   [22;8H[41;132H5[22;8H[?12l[?25h[?25l[41;120H~@k[22;8H[41;120H   [23;1H[41;132H6,1[23;1H[?12l[?25h[?25l[41;120H~@k[23;1H[41;120H   [24;8H[41;132H7,8[24;8H[?12l[?25h[?25l[41;120H~@k[24;8H[41;120H   [23;1H[41;132H6,1[23;1H[?12l[?25h[?25l[41;120Ha[23;1H[41;120H [23;2H[41;1H[1m-- INSERT --[m[41;13H[K[41;130H146,2[9CBot[23;2H[?12l[?25h[?25l[23;40r[40;1H
[1;41r[23;2H[34m# Test the model[m[40;1H[94m~                                                                                                                                                  [m[41;130H[K[41;130H146,2[9CBot[23;2H[?12l[?25h[?25l[34m Test the model[m[23;17H[K[41;134H1[23;1H[?12l[?25h[?25l[24;40r[24;1H[L[1;41r[23;1H[K[24;1H[34m# Test the model[m[41;130H[K[41;130H147,1[9CBot[24;1H[?12l[?25h[?25l[41;132H8[25;1H[?12l[?25h[?25l[41;132H7[24;1H[?12l[?25h[?25l[41;132H6[23;1H[?12l[?25h[?25l[41;132H5[22;1H[?12l[?25h[?25l[41;134H2[22;2H[?12l[?25h[?25l            [36mprint[m([31m'Epoch [{}/{}], Step [{}/{}], Loss: {:.4f}'[m.format(epoch+[31m1[m, num_epochs, i+[31m1[m, total_step, loss.item()))[22;121H[K[41;134H1[22;1H[?12l[?25h[?25l[41;132H4[21;1H[?12l[?25h[?25l[41;134H2[21;2H[?12l[?25h[?25l        [38;5;130mif[m (i+[31m1[m) % [31m100[m == [31m0[m:[21;29H[K[41;134H1[21;1H[?12l[?25h[?25l[41;132H3[20;1H[?12l[?25h[?25l[41;134H2[20;2H[?12l[?25h[?25l        [34m# Print out current progress of training[m[20;49H[K[41;134H1[20;1H[?12l[?25h[?25l[41;132H2[19;1H[?12l[?25h[?25l[41;134H2[19;2H[?12l[?25h[?25l        [19;9H[K[41;134H1[19;1H[?12l[?25h[?25l[41;132H1[18;1H[?12l[?25h[?25l[41;134H2[18;2H[?12l[?25h[?25l        optimizer.step()[18;25H[K[41;134H1[18;1H[?12l[?25h[?25l[41;132H0[17;1H[?12l[?25h[?25l[41;134H2[17;2H[?12l[?25h[?25l        loss.backward()[17;24H[K[41;134H1[17;1H[?12l[?25h[?25l[41;131H39[16;1H[?12l[?25h[?25l[41;134H2[16;2H[?12l[?25h[?25l        optimizer.zero_grad()[16;30H[K[41;134H1[16;1H[?12l[?25h[?25l[41;132H8[15;1H[?12l[?25h[?25l[41;134H2[15;2H[?12l[?25h[?25l        [34m# Backprop and Gradient Descent[m[15;40H[K[41;134H1[15;1H[?12l[?25h[?25l[41;132H7[14;1H[?12l[?25h[?25l[41;134H2[14;2H[?12l[?25h[?25l        [14;9H[K[41;134H1[14;1H[?12l[?25h[?25l[41;132H6[13;1H[?12l[?25h[?25l[41;134H2[13;2H[?12l[?25h[?25l        loss = criterion(output, labels)[13;41H[K[41;134H1[13;1H[?12l[?25h[?25l[41;132H5[12;1H[?12l[?25h[?25l[41;134H2[12;2H[?12l[?25h[?25l        output = model(images)[12;31H[K[41;134H1[12;1H[?12l[?25h[?25l[41;132H4[11;1H[?12l[?25h[?25l[41;134H2[11;2H[?12l[?25h[?25l        [34m# Forward[m[11;18H[K[41;134H1[11;1H[?12l[?25h[?25l[41;132H3[10;1H[?12l[?25h[?25l[9;40r[40;1H
[1;41r[9;10H[34mlabels = labels.to(device)#        [m[40;1H[94m~                                                                                                                                                  [m[41;130H[K[41;130H132,36[8CBot[9;28H[34m[106m([6C)[?12l[?25h[?25l[m[9;28H[34m(device)[m[41;135H7[9;37H[?12l[?25h[?25l[9;28H[34m[106m([6C)[m[41;135H6[9;36H[?12l[?25h[?25l[9;28H[34m(device)[m[41;135H7[9;37H[?12l[?25h[?25l[10;40r[10;1H[L[1;41r[9;37H[K[41;130H[K[41;130H133,1[9CBot[10;1H[?12l[?25h[?25l[9;40r[40;1H
[1;41r[9;1H[34m#        labels = labels.to(device)#[m[40;1H[94m~                                                                                                                                                  [m[41;130H[K[41;130H132,37[8CBot[9;37H[?12l[?25h[?25l[9;36H[K[9;28H[34m[106m([6C)[m[41;135H6[9;36H[?12l[?25h[?25l[10;40r[10;1H[L[1;41r[41;130H[K[41;130H133,1[9CBot[9;28H[34m(device)
[?12l[?25h[?25l[m[41;132H2[9;1H[?12l[?25h[?25l[41;134H2[9;2H[?12l[?25h[?25l        labels = labels.to(device)[9;35H[K[41;134H1[9;1H[?12l[?25h[?25l[41;132H3[10;1H[?12l[?25h[?25l[41;132H2[9;1H[?12l[?25h[?25l[41;134H2[9;2H[?12l[?25h[?25l[41;132H1[8;2H[?12l[?25h[?25l        images = images.to(device)[8;35H[K[41;134H1[8;1H[?12l[?25h[?25l[41;132H0[7;1H[?12l[?25h[?25l[41;134H2[7;2H[?12l[?25h[?25l    [38;5;130mfor[m i, (images, labels) [38;5;130min[m [36menumerate[m(train_loader):[7;56H[K[41;134H1[7;1H[?12l[?25h[?25l[41;131H29[6;1H[?12l[?25h[?25l[41;134H2[6;2H[?12l[?25h[?25l[38;5;130mfor[m epoch [38;5;130min[m [36mrange[m(num_epochs):[6;32H[K[41;134H1[6;1H[?12l[?25h[?25l[1;40r[1;1H[L[1;41r[41;130H[K[41;130H128,1[9C99%[6;1H[?12l[?25h[?25l[41;134H2[6;2H[?12l[?25h[?25lmodel.train()[6;14H[K[41;134H1[6;1H[?12l[?25h[?25l[41;132H9[7;1H[?12l[?25h[?25l[41;131H32[10;1H[?12l[?25h[?25l[41;132H3[11;1H[?12l[?25h[?25l[41;132H4[12;1H[?12l[?25h[?25l[41;132H5[13;1H[?12l[?25h[?25l[41;131H41[19;1H[?12l[?25h[?25l[41;132H2[20;1H[?12l[?25h[?25l[41;132H6[24;1H[?12l[?25h[?25l[41;131H50[28;1H[?12l[?25h[?25l[41;131H49[27;1H[?12l[?25h[?25l[41;132H6[24;1H[?12l[?25h[?25l[41;132H5[23;1H[?12l[?25h[?25l[41;132H1[19;1H[?12l[?25h[?25l[41;131H37[15;1H[?12l[?25h[?25l[41;132H6[14;1H[?12l[?25h[?25l[41;132H5[13;1H[?12l[?25h[?25l[41;132H1[9;1H[?12l[?25h[?25l[41;132H0[8;1H[?12l[?25h[?25l[1;40r[1;1H[2L[1;41r[1;1Hcriterion = nn.CrossEntropyLoss()
optimizer = torch.optim.Adam(model.parameters(), lr=learning_rate)[41;130H[K[41;130H126,1[9C97%[6;1H[?12l[?25h[?25l[1;40r[1;1H[L[1;41r[41;130H[K[41;130H125,1[9C96%[6;1H[?12l[?25h[?25l[1;40r[1;1H[L[1;41r[1;1Htest_loader = torch.utils.data.DataLoader(dataset=test_set, batch_size=batch_size, shuffle=[36mFalse[m)[41;130H[K[41;130H124,1[9C95%[6;1H[?12l[?25h[?25l[1;40r[1;1H[L[1;41r[1;1Htrain_loader = torch.utils.data.DataLoader(dataset=train_set, batch_size=batch_size, shuffle=[36mTrue[m)[41;130H[K[41;130H123,1[9C95%[6;1H[?12l[?25h[?25l[1;40r[1;1H[L[1;41r[41;130H[K[41;130H122,1[9C94%[6;1H[?12l[?25h[?25l[1;40r[1;1H[L[1;41r[1;1Hmodel = CIFARNET(num_classes).to(device)[41;130H[K[41;130H121,1[9C93%[6;1H[?12l[?25h[?25l[1;40r[1;1H[L[1;41r[41;130H[K[41;130H120,1[9C92%[6;1H[?12l[?25h[?25l[1;40r[1;1H[L[1;41r[1;9H[38;5;130mreturn[m x[41;130H[K[41;130H119,1[9C91%[6;1H[?12l[?25h[?25l[1;40r[1;1H[L[1;41r[1;9Hx = self.fc1(x)[41;130H[K[41;130H118,1[9C91%[6;1H[?12l[?25h[?25l[1;40r[1;1H[L[1;41r[1;9Hx = x.reshape(x.size([31m0[m), -[31m1[m)[41;130H[K[41;130H117,1[9C90%[6;1H[?12l[?25h[?25l[1;40r[1;1H[L[1;41r[1;9Hx = self.reslayer1(x)[41;130H[K[41;130H116,1[9C89%[6;1H[?12l[?25h[?25l[1;40r[1;1H[L[1;41r[1;5H[38;5;130mdef[m [36mforward[m(self, x):[41;130H[K[41;130H115,1[9C88%[6;1H[?12l[?25h[?25l[41;132H6[7;1H[?12l[?25h[?25l[41;132H7[8;1H[?12l[?25h[?25l[41;132H9[10;1H[?12l[?25h[?25l[41;131H20[11;1H[?12l[?25h[?25l[41;132H1[12;1H[?12l[?25h[?25l[41;132H2[13;1H[?12l[?25h[?25l[41;132H3[14;1H[?12l[?25h[?25l[41;132H4[15;1H[?12l[?25h[?25l[41;132H5[16;1H[?12l[?25h[?25l[41;132H6[17;1H[?12l[?25h[?25l[41;132H7[18;1H[?12l[?25h[?25l[41;132H8[19;1H[?12l[?25h[?25l[41;132H9[20;1H[?12l[?25h[?25l[41;131H30[21;1H[?12l[?25h[?25l[41;132H1[22;1H[?12l[?25h[?25l[41;132H2[23;1H[?12l[?25h[?25l[41;132H3[24;1H[?12l[?25h[?25l[41;132H4[25;1H[?12l[?25h[?25l[41;132H5[26;1H[?12l[?25h[?25l[41;132H6[27;1H[?12l[?25h[?25l[41;132H7[28;1H[?12l[?25h[?25l[41;132H8[29;1H[?12l[?25h[?25l[41;132H9[30;1H[?12l[?25h[?25l[41;131H40[31;1H[?12l[?25h[?25l[41;132H1[32;1H[?12l[?25h[?25l[41;132H2[33;1H[?12l[?25h[?25l[41;132H3[34;1H[?12l[?25h[?25l[41;132H4[35;1H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;5Hcorrect = [31m0[m[41;130H[K[41;130H145,1[9C89%[35;1H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;5Htotal = [31m0[m[41;130H[K[41;130H146,1[9C90%[35;1H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;5H[38;5;130mfor[m images, labels [38;5;130min[m test_loader:[41;130H[K[41;130H147,1[9C91%[35;1H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;9Himages = images.to(device)[41;130H[K[41;130H148,1[9C91%[35;1H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;9Hlabels = labels.to(device)[41;130H[K[41;130H149,1[9C92%[35;1H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;9Houtputs = model(images)[41;130H[K[41;130H150,1[9C93%[35;1H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;9H_, predicted = torch.max(outputs.data, [31m1[m)[41;130H[K[41;130H151,1[9C94%[35;1H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;9Htotal += labels.size([31m0[m)[41;130H[K[41;130H152,1[9C95%[35;1H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;9Hcorrect += (predicted == labels).sum().item()[41;130H[K[41;130H153,1[9C95%[35;1H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[41;130H[K[41;130H154,1[9C96%[35;1H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;5H[36mprint[m([31m'Test Accuracy of the model on the 10000 test images: {} %'[m.format([31m100[m * correct / total))[41;130H[K[41;130H155,1[9C97%[35;1H[?12l[?25h[?25l[1;40r[1;1H[2M[1;41r[40;1H[34m#torch.save(model.state_dict(), './resnet3-final.pt')[m[41;130H[K[41;130H157,1[9C99%[35;1H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;1H[34m#model.load_state_dict(torch.load('./resnet3-final.pt'))[m[41;130H[K[41;130H158,1[9CBot[35;1H[?12l[?25h[?25l[41;132H9[36;1H[?12l[?25h[?25l[41;131H60[37;1H[?12l[?25h[?25l[41;132H1[38;1H[?12l[?25h[?25l[41;132H2[39;1H[?12l[?25h[?25l[41;132H3[40;1H[?12l[?25h[?25l[41;132H2[39;1H[?12l[?25h[?25l[41;132H1[38;1H[?12l[?25h[?25l[41;132H0[37;1H[?12l[?25h[?25l[41;131H59[36;1H[?12l[?25h[?25l[41;132H8[35;1H[?12l[?25h[?25l[41;132H7[34;1H[?12l[?25h[?25l[41;132H6[33;1H[?12l[?25h[?25l[41;132H5[32;1H[?12l[?25h[?25l[41;132H4[31;1H[?12l[?25h[?25l[41;132H3[30;1H[?12l[?25h[?25l[41;132H2[29;1H[?12l[?25h[?25l[41;132H1[28;1H[?12l[?25h[?25l[41;132H0[27;1H[?12l[?25h[?25l[41;131H49[26;1H[?12l[?25h[?25l[41;132H8[25;1H[?12l[?25h[?25l[41;132H7[24;1H[?12l[?25h[?25l[41;132H6[23;1H[?12l[?25h[?25l[41;132H5[22;1H[?12l[?25h[?25l[41;132H4[21;1H[?12l[?25h[?25l[41;132H3[20;1H[?12l[?25h[?25l[41;132H2[19;1H[?12l[?25h[?25l[41;132H1[18;1H[?12l[?25h[?25l[41;132H0[17;1H[?12l[?25h[?25l[41;131H38[15;1H[?12l[?25h[?25l[41;132H7[14;1H[?12l[?25h[?25l[41;132H6[13;1H[?12l[?25h[?25l[41;132H5[12;1H[?12l[?25h[?25l[41;132H4[11;1H[?12l[?25h[?25l[41;132H3[10;1H[?12l[?25h[?25l[41;132H2[9;1H[?12l[?25h[?25l[41;132H1[8;1H[?12l[?25h[?25l[41;132H0[7;1H[?12l[?25h[?25l[41;131H29[6;1H[?12l[?25h[?25l[1;40r[1;1H[L[1;41r[41;130H[K[41;130H128,1[9C99%[6;1H[?12l[?25h[?25l[1;40r[1;1H[L[1;41r[1;1Hoptimizer = torch.optim.Adam(model.parameters(), lr=learning_rate)[41;130H[K[41;130H127,1[9C98%[6;1H[?12l[?25h[?25l[1;40r[1;1H[L[1;41r[1;1Hcriterion = nn.CrossEntropyLoss()[41;130H[K[41;130H126,1[9C97%[6;1H[?12l[?25h[?25l[34m#model.load_state_dict(torch.load('./resnet3-final.pt'))[m[41;134H2[6;2H[?12l[?25h[?25l[41;132H7,1[7;1H[?12l[?25h[?25l[41;132H9,2[9;2H[?12l[?25h[?25l[41;131H30[10;2H[?12l[?25h[?25l[41;132H1[11;2H[?12l[?25h[?25l[41;132H2[12;2H[?12l[?25h[?25l[41;132H3,1[13;1H[?12l[?25h[?25l[41;132H4,2[14;2H[?12l[?25h[?25l[41;132H5[15;2H[?12l[?25h[?25l[41;132H6[16;2H[?12l[?25h[?25l[41;132H7[17;2H[?12l[?25h[?25l[41;132H9[19;2H[?12l[?25h[?25l[41;131H40[20;2H[?12l[?25h[?25l[41;132H1[21;2H[?12l[?25h[?25l[41;132H2[22;2H[?12l[?25h[?25l[41;132H3[23;2H[?12l[?25h[?25l[41;132H4[24;2H[?12l[?25h[?25l[41;132H5[25;2H[?12l[?25h[?25l[41;132H6,1[26;1H[?12l[?25h[?25l[41;132H7,2[27;2H[?12l[?25h[?25l[41;132H8[28;2H[?12l[?25h[?25l[41;132H9[29;2H[?12l[?25h[?25l[41;131H50[30;2H[?12l[?25h[?25l[41;132H1[31;2H[?12l[?25h[?25l[41;132H2[32;2H[?12l[?25h[?25l[41;132H3[33;2H[?12l[?25h[?25l[41;132H4[34;2H[?12l[?25h[?25l[41;132H5[35;2H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[41;130H[K[41;130H156,2[9C98%[35;2H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;1H[34m#torch.save(model.state_dict(), './resnet3-final.pt')[m[41;130H[K[41;130H157,2[9C99%[35;2H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;1H[34m#model.load_state_dict(torch.load('./resnet3-final.pt'))[m[41;130H[K[41;130H158,2[9CBot[35;2H[?12l[?25h[?25l[41;132H9,1[36;1H[?12l[?25h[?25l[41;131H60,2[37;2H[?12l[?25h[?25l[41;132H1,1[38;1H[?12l[?25h[?25l[41;132H2,2[39;2H[?12l[?25h[?25l[41;132H3[40;2H[?12l[?25h[?25l[41;132H2[39;2H[?12l[?25h[?25ltorch.save(model.state_dict(), [31m'./resnet3-final.pt'[m)[39;53H[K[41;134H1[39;1H[?12l[?25h[?25l[41;132H3[40;1H[?12l[?25h[?25l[41;134H2[40;2H[?12l[?25h[?25lmodel.load_state_dict(torch.load([31m'./resnet3-final.pt'[m))[40;56H[K[41;134H1[40;1H[?12l[?25h[?25l[41;132H2[39;1H[?12l[?25h[?25l[41;134H2[39;2H[?12l[?25h[?25l[41;134H3[39;3H[?12l[?25h[?25l[41;134H5[39;5H[?12l[?25h[?25l[41;134H6[39;6H[?12l[?25h[?25l[41;134H7[39;7H[?12l[?25h[?25l[41;134H8[39;8H[?12l[?25h[?25l[41;134H9[39;9H[?12l[?25h[?25l[41;134H10[39;10H[?12l[?25h[?25le[106m([40C)[m[41;135H1[39;11H[?12l[?25h[?25l([40C)[41;135H3[39;13H[?12l[?25h[?25l[41;135H4[39;14H[?12l[?25h[?25l[41;135H5[39;15H[?12l[?25h[?25l[41;135H6[39;16H[?12l[?25h[?25l[41;135H7[39;17H[?12l[?25h[?25l[41;135H8[39;18H[?12l[?25h[?25l[41;135H9[39;19H[?12l[?25h[?25l[41;134H20[39;20H[?12l[?25h[?25l[41;135H1[39;21H[?12l[?25h[?25l[41;135H2[39;22H[?12l[?25h[?25l[41;135H3[39;23H[?12l[?25h[?25l[41;135H4[39;24H[?12l[?25h[?25l[41;135H5[39;25H[?12l[?25h[?25l[41;135H6[39;26H[?12l[?25h[?25l[41;135H7[39;27H[?12l[?25h[?25lt[106m()[m[41;135H8[39;28H[?12l[?25h[?25l[41;135H9[39;29H[?12l[?25h[?25l[41;134H30[39;30H[?12l[?25h[?25l()[41;135H1[39;31H[?12l[?25h[?25l[41;135H2[39;32H[?12l[?25h[?25l[41;135H4[39;34H[?12l[?25h[?25l[41;135H5[39;35H[?12l[?25h[?25l[41;135H6[39;36H[?12l[?25h[?25l[41;135H7[39;37H[?12l[?25h[?25l[41;135H8[39;38H[?12l[?25h[?25l[41;135H9[39;39H[?12l[?25h[?25l[41;134H40[39;40H[?12l[?25h[?25l[41;135H1[39;41H[?12l[?25h[?25l[41;135H2[39;42H[?12l[?25h[?25l[41;135H3[39;43H[?12l[?25h[?25l[41;135H4[39;44H[?12l[?25h[?25l[41;135H5[39;45H[?12l[?25h[?25l[41;135H6[39;46H[?12l[?25h[?25l[41;135H7[39;47H[?12l[?25h[?25l[41;135H8[39;48H[?12l[?25h[?25l[41;135H9[39;49H[?12l[?25h[?25l[41;135H8[39;48H[?12l[?25h[?25l[31m.pt'[m)[39;52H[K[41;135H7[39;47H[?12l[?25h[?25l[31m.pt'[m)[39;51H[K[41;135H6[39;46H[?12l[?25h[?25l[31m.pt'[m)[39;50H[K[41;135H5[39;45H[?12l[?25h[?25l[31m.pt'[m)[39;49H[K[41;135H4[39;44H[?12l[?25h[?25l[31m.pt'[m)[39;48H[K[41;135H3[39;43H[?12l[?25h[?25l[31mM.pt'[m)[41;135H4[39;44H[?12l[?25h[?25l[31mN.pt'[m)[41;135H5[39;45H[?12l[?25h[?25l[31mI.pt'[m)[41;135H6[39;46H[?12l[?25h[?25l[31mS.pt'[m)[41;135H7[39;47H[?12l[?25h[?25l[31mT.pt'[m)[41;135H8[39;48H[?12l[?25h[?25l[31m2.pt'[m)[41;135H9[39;49H[?12l[?25h[?25l[31m9.pt'[m)[41;134H50[39;50H[?12l[?25h[?25l[31m0.pt'[m)[41;135H1[39;51H[?12l[?25h[?25l[31m3.pt'[m)[41;135H2[39;52H[?12l[?25h[?25l[41;132H3[40;52H[?12l[?25h[?25l[41;135H1[40;51H[?12l[?25h[?25l[41;135H0[40;50H[?12l[?25h[?25l[31m.pt'[m)[40;55H[K[41;134H49[40;49H[?12l[?25h[?25l[31m.pt'[m)[40;54H[K[41;135H8[40;48H[?12l[?25h[?25l[31m.pt'[m)[40;53H[K[41;135H7[40;47H[?12l[?25h[?25l[31m.pt'[m)[40;52H[K[41;135H6[40;46H[?12l[?25h[?25l[31m.pt'[m)[40;51H[K[41;135H5[40;45H[?12l[?25h[?25l[31mM.pt'[m))[41;135H6[40;46H[?12l[?25h[?25l[31mN.pt'[m))[41;135H7[40;47H[?12l[?25h[?25l[31mI.pt'[m))[41;135H8[40;48H[?12l[?25h[?25l[31mS.pt'[m))[41;135H9[40;49H[?12l[?25h[?25l[31mT.pt'[m))[41;134H50[40;50H[?12l[?25h[?25l[31m2.pt'[m))[41;135H1[40;51H[?12l[?25h[?25l[31m9.pt'[m))[41;135H2[40;52H[?12l[?25h[?25l[31m0.pt'[m))[41;135H3[40;53H[?12l[?25h[?25l[31m3.pt'[m))[41;135H4[40;54H[?12l[?25h[41;1H[K[40;53H[?25l[41;120H^[[40;53H[41;120H  [40;54H[41;130H163,53[8CBot[40;53H[?12l[?25h[?25l[41;120H:[40;53H[41;120H[K[41;1H:[?12l[?25hw[?25l[?12l[?25hq[?25l[?12l[?25h[?25l[?1002l"RESNET-3_MNIST.py" 163L, 5031C written
[?1l>[?12l[?25h[?1049l]0;harditsinghmarwah@fastai-instance-2: ~/ML-res-urrect[01;32mharditsinghmarwah@fastai-instance-2[00m:[01;34m~/ML-res-urrect[00m$ ls
log1.txt           net3log280319.txt  NET3MNISTlog2903.txt  NET-3.py          RESNET3 Log 28032019.rtf  RESNET-3_MNIST.py  RESNET-TEST.ipynb
modelmk3.pt        net3log.txt        NET-3_MNIST.py        README.md         RESNET3 Log.rtf           RESNET-3.py        RESNET-TEST.py
net3-final2803.pt  net3-MNIST2903.pt  net3.pt               resnet3-final.pt  RESNET3MNIST2903.txt      RESNET.py
]0;harditsinghmarwah@fastai-instance-2: ~/ML-res-urrect[01;32mharditsinghmarwah@fastai-instance-2[00m:[01;34m~/ML-res-urrect[00m$ python3 REs[KSNET-3
RESNET-3_MNIST.py  RESNET-3.py        
]0;harditsinghmarwah@fastai-instance-2: ~/ML-res-urrect[01;32mharditsinghmarwah@fastai-instance-2[00m:[01;34m~/ML-res-urrect[00m$ python3 RESNET-3_MNIST.py 
cuda:0
Epoch [1/200], Step [100/1200], Loss: 0.3001
Epoch [1/200], Step [200/1200], Loss: 0.2982
Epoch [1/200], Step [300/1200], Loss: 0.4891
Epoch [1/200], Step [400/1200], Loss: 0.2906
Epoch [1/200], Step [500/1200], Loss: 0.1559
Epoch [1/200], Step [600/1200], Loss: 0.1354
Epoch [1/200], Step [700/1200], Loss: 0.1010
Epoch [1/200], Step [800/1200], Loss: 0.1799
Epoch [1/200], Step [900/1200], Loss: 0.4328
Epoch [1/200], Step [1000/1200], Loss: 0.6080
Epoch [1/200], Step [1100/1200], Loss: 0.1633
Epoch [1/200], Step [1200/1200], Loss: 0.0983
Epoch [2/200], Step [100/1200], Loss: 0.0661
Epoch [2/200], Step [200/1200], Loss: 0.0268
Epoch [2/200], Step [300/1200], Loss: 0.2014
Epoch [2/200], Step [400/1200], Loss: 0.1385
Epoch [2/200], Step [500/1200], Loss: 0.1124
Epoch [2/200], Step [600/1200], Loss: 0.0902
Epoch [2/200], Step [700/1200], Loss: 0.0242
Epoch [2/200], Step [800/1200], Loss: 0.0542
Epoch [2/200], Step [900/1200], Loss: 0.1499
Epoch [2/200], Step [1000/1200], Loss: 0.0238
Epoch [2/200], Step [1100/1200], Loss: 0.3252
Epoch [2/200], Step [1200/1200], Loss: 0.1841
Epoch [3/200], Step [100/1200], Loss: 0.1067
Epoch [3/200], Step [200/1200], Loss: 0.0982
Epoch [3/200], Step [300/1200], Loss: 0.0567
Epoch [3/200], Step [400/1200], Loss: 0.1129
Epoch [3/200], Step [500/1200], Loss: 0.2021
Epoch [3/200], Step [600/1200], Loss: 0.1031
Epoch [3/200], Step [700/1200], Loss: 0.0142
Epoch [3/200], Step [800/1200], Loss: 0.0161
Epoch [3/200], Step [900/1200], Loss: 0.0307
Epoch [3/200], Step [1000/1200], Loss: 0.0763
^CTraceback (most recent call last):
  File "RESNET-3_MNIST.py", line 140, in <module>
    loss.backward()
  File "/opt/anaconda3/lib/python3.7/site-packages/torch/tensor.py", line 102, in backward
    torch.autograd.backward(self, gradient, retain_graph, create_graph)
  File "/opt/anaconda3/lib/python3.7/site-packages/torch/autograd/__init__.py", line 90, in backward
    allow_unreachable=True)  # allow_unreachable flag
KeyboardInterrupt
]0;harditsinghmarwah@fastai-instance-2: ~/ML-res-urrect[01;32mharditsinghmarwah@fastai-instance-2[00m:[01;34m~/ML-res-urrect[00m$ python3 RESNET-3_MNIST.py ls[Kvim RESNET-3_MNIST.py ls[Kpython3 RESNET-3_MNIST.py [Kscript resnet-[K3-MNISTlog2903.txt
Script started, file is resnet3-MNISTlog2903.txt
]0;harditsinghmarwah@fastai-instance-2: ~/ML-res-urrect[01;32mharditsinghmarwah@fastai-instance-2[00m:[01;34m~/ML-res-urrect[00m$ exitpython3 NET-3_MNIST.py [4Pvim[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[4@python3[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[4Pvim[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[4@python3[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cexit[K[Kexitpython3 NET-3_MNIST.py [4Pvim[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[4@python3[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[4Pvim[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[4@python3[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[4Pvim[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[4@python3[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[4Pvim[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[4@python3[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[4Pvim[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[4@python3[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[4Pvim[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[4@python3[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[4Pvim[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[4@python3[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cexit[K[Kexitpython3 NET-3_MNIST.py exit[K[Kexitpython3 NET-3_MNIST.py [1@R[1@E[1@S
cuda:0
Epoch [1/200], Step [100/1200], Loss: 0.5572
Epoch [1/200], Step [200/1200], Loss: 0.3121
Epoch [1/200], Step [300/1200], Loss: 0.3105
Epoch [1/200], Step [400/1200], Loss: 0.2583
Epoch [1/200], Step [500/1200], Loss: 0.3146
Epoch [1/200], Step [600/1200], Loss: 0.1868
Epoch [1/200], Step [700/1200], Loss: 0.1581
Epoch [1/200], Step [800/1200], Loss: 0.3985
Epoch [1/200], Step [900/1200], Loss: 0.1326
Epoch [1/200], Step [1000/1200], Loss: 0.3197
Epoch [1/200], Step [1100/1200], Loss: 0.3685
Epoch [1/200], Step [1200/1200], Loss: 0.2841
Epoch [2/200], Step [100/1200], Loss: 0.0286
Epoch [2/200], Step [200/1200], Loss: 0.1653
Epoch [2/200], Step [300/1200], Loss: 0.4457
Epoch [2/200], Step [400/1200], Loss: 0.2053
Epoch [2/200], Step [500/1200], Loss: 0.0329
Epoch [2/200], Step [600/1200], Loss: 0.0115
Epoch [2/200], Step [700/1200], Loss: 0.2055
Epoch [2/200], Step [800/1200], Loss: 0.0143
Epoch [2/200], Step [900/1200], Loss: 0.0767
Epoch [2/200], Step [1000/1200], Loss: 0.1569
Epoch [2/200], Step [1100/1200], Loss: 0.0330
Epoch [2/200], Step [1200/1200], Loss: 0.2934
Epoch [3/200], Step [100/1200], Loss: 0.1282
Epoch [3/200], Step [200/1200], Loss: 0.2169
Epoch [3/200], Step [300/1200], Loss: 0.0353
Epoch [3/200], Step [400/1200], Loss: 0.1413
Epoch [3/200], Step [500/1200], Loss: 0.0365
Epoch [3/200], Step [600/1200], Loss: 0.1182
Epoch [3/200], Step [700/1200], Loss: 0.1484
Epoch [3/200], Step [800/1200], Loss: 0.0045
Epoch [3/200], Step [900/1200], Loss: 0.1028
Epoch [3/200], Step [1000/1200], Loss: 0.0825
Epoch [3/200], Step [1100/1200], Loss: 0.1304
Epoch [3/200], Step [1200/1200], Loss: 0.0755
Epoch [4/200], Step [100/1200], Loss: 0.0518
Epoch [4/200], Step [200/1200], Loss: 0.2271
Epoch [4/200], Step [300/1200], Loss: 0.0781
Epoch [4/200], Step [400/1200], Loss: 0.0490
Epoch [4/200], Step [500/1200], Loss: 0.0714
Epoch [4/200], Step [600/1200], Loss: 0.0083
Epoch [4/200], Step [700/1200], Loss: 0.0287
Epoch [4/200], Step [800/1200], Loss: 0.1933
Epoch [4/200], Step [900/1200], Loss: 0.1626
Epoch [4/200], Step [1000/1200], Loss: 0.1046
Epoch [4/200], Step [1100/1200], Loss: 0.0617
Epoch [4/200], Step [1200/1200], Loss: 0.0314
Epoch [5/200], Step [100/1200], Loss: 0.0624
Epoch [5/200], Step [200/1200], Loss: 0.0196
Epoch [5/200], Step [300/1200], Loss: 0.0650
Epoch [5/200], Step [400/1200], Loss: 0.0889
Epoch [5/200], Step [500/1200], Loss: 0.0150
Epoch [5/200], Step [600/1200], Loss: 0.0118
Epoch [5/200], Step [700/1200], Loss: 0.1266
Epoch [5/200], Step [800/1200], Loss: 0.0910
Epoch [5/200], Step [900/1200], Loss: 0.0174
Epoch [5/200], Step [1000/1200], Loss: 0.0306
Epoch [5/200], Step [1100/1200], Loss: 0.0795
Epoch [5/200], Step [1200/1200], Loss: 0.1039
Epoch [6/200], Step [100/1200], Loss: 0.0275
Epoch [6/200], Step [200/1200], Loss: 0.0830
Epoch [6/200], Step [300/1200], Loss: 0.0335
Epoch [6/200], Step [400/1200], Loss: 0.0800
Epoch [6/200], Step [500/1200], Loss: 0.0465
Epoch [6/200], Step [600/1200], Loss: 0.1068
Epoch [6/200], Step [700/1200], Loss: 0.0213
Epoch [6/200], Step [800/1200], Loss: 0.0060
Epoch [6/200], Step [900/1200], Loss: 0.0236
Epoch [6/200], Step [1000/1200], Loss: 0.1276
Epoch [6/200], Step [1100/1200], Loss: 0.1448
Epoch [6/200], Step [1200/1200], Loss: 0.0321
Epoch [7/200], Step [100/1200], Loss: 0.0127
Epoch [7/200], Step [200/1200], Loss: 0.0009
Epoch [7/200], Step [300/1200], Loss: 0.0276
Epoch [7/200], Step [400/1200], Loss: 0.0931
Epoch [7/200], Step [500/1200], Loss: 0.0050
Epoch [7/200], Step [600/1200], Loss: 0.1007
Epoch [7/200], Step [700/1200], Loss: 0.0139
Epoch [7/200], Step [800/1200], Loss: 0.0152
Epoch [7/200], Step [900/1200], Loss: 0.0757
Epoch [7/200], Step [1000/1200], Loss: 0.0323
Epoch [7/200], Step [1100/1200], Loss: 0.0147
Epoch [7/200], Step [1200/1200], Loss: 0.0298
Epoch [8/200], Step [100/1200], Loss: 0.0474
Epoch [8/200], Step [200/1200], Loss: 0.0047
Epoch [8/200], Step [300/1200], Loss: 0.0503
Epoch [8/200], Step [400/1200], Loss: 0.0903
Epoch [8/200], Step [500/1200], Loss: 0.0209
Epoch [8/200], Step [600/1200], Loss: 0.0447
Epoch [8/200], Step [700/1200], Loss: 0.1393
Epoch [8/200], Step [800/1200], Loss: 0.0318
Epoch [8/200], Step [900/1200], Loss: 0.0199
Epoch [8/200], Step [1000/1200], Loss: 0.0681
Epoch [8/200], Step [1100/1200], Loss: 0.0876
Epoch [8/200], Step [1200/1200], Loss: 0.0647
Epoch [9/200], Step [100/1200], Loss: 0.0523
Epoch [9/200], Step [200/1200], Loss: 0.0217
Epoch [9/200], Step [300/1200], Loss: 0.0036
Epoch [9/200], Step [400/1200], Loss: 0.0722
Epoch [9/200], Step [500/1200], Loss: 0.1225
Epoch [9/200], Step [600/1200], Loss: 0.1627
Epoch [9/200], Step [700/1200], Loss: 0.0776
Epoch [9/200], Step [800/1200], Loss: 0.0099
Epoch [9/200], Step [900/1200], Loss: 0.0292
Epoch [9/200], Step [1000/1200], Loss: 0.1073
Epoch [9/200], Step [1100/1200], Loss: 0.0127
Epoch [9/200], Step [1200/1200], Loss: 0.0187
Epoch [10/200], Step [100/1200], Loss: 0.0366
Epoch [10/200], Step [200/1200], Loss: 0.0064
Epoch [10/200], Step [300/1200], Loss: 0.0165
Epoch [10/200], Step [400/1200], Loss: 0.0048
Epoch [10/200], Step [500/1200], Loss: 0.0667
Epoch [10/200], Step [600/1200], Loss: 0.0482
Epoch [10/200], Step [700/1200], Loss: 0.0980
Epoch [10/200], Step [800/1200], Loss: 0.0506
Epoch [10/200], Step [900/1200], Loss: 0.0311
Epoch [10/200], Step [1000/1200], Loss: 0.0676
Epoch [10/200], Step [1100/1200], Loss: 0.1192
Epoch [10/200], Step [1200/1200], Loss: 0.0368
Epoch [11/200], Step [100/1200], Loss: 0.0017
Epoch [11/200], Step [200/1200], Loss: 0.1449
Epoch [11/200], Step [300/1200], Loss: 0.0211
Epoch [11/200], Step [400/1200], Loss: 0.0220
Epoch [11/200], Step [500/1200], Loss: 0.0092
Epoch [11/200], Step [600/1200], Loss: 0.0168
Epoch [11/200], Step [700/1200], Loss: 0.0029
Epoch [11/200], Step [800/1200], Loss: 0.0048
Epoch [11/200], Step [900/1200], Loss: 0.0967
Epoch [11/200], Step [1000/1200], Loss: 0.2910
Epoch [11/200], Step [1100/1200], Loss: 0.0148
Epoch [11/200], Step [1200/1200], Loss: 0.1149
Epoch [12/200], Step [100/1200], Loss: 0.0021
Epoch [12/200], Step [200/1200], Loss: 0.0014
Epoch [12/200], Step [300/1200], Loss: 0.0315
Epoch [12/200], Step [400/1200], Loss: 0.0031
Epoch [12/200], Step [500/1200], Loss: 0.0795
Epoch [12/200], Step [600/1200], Loss: 0.0214
Epoch [12/200], Step [700/1200], Loss: 0.0725
Epoch [12/200], Step [800/1200], Loss: 0.0556
Epoch [12/200], Step [900/1200], Loss: 0.0493
Epoch [12/200], Step [1000/1200], Loss: 0.0542
Epoch [12/200], Step [1100/1200], Loss: 0.0519
Epoch [12/200], Step [1200/1200], Loss: 0.0800
Epoch [13/200], Step [100/1200], Loss: 0.0161
Epoch [13/200], Step [200/1200], Loss: 0.0904
Epoch [13/200], Step [300/1200], Loss: 0.0598
Epoch [13/200], Step [400/1200], Loss: 0.0306
Epoch [13/200], Step [500/1200], Loss: 0.0017
Epoch [13/200], Step [600/1200], Loss: 0.0396
Epoch [13/200], Step [700/1200], Loss: 0.0198
Epoch [13/200], Step [800/1200], Loss: 0.0786
Epoch [13/200], Step [900/1200], Loss: 0.0220
Epoch [13/200], Step [1000/1200], Loss: 0.0143
Epoch [13/200], Step [1100/1200], Loss: 0.1122
Epoch [13/200], Step [1200/1200], Loss: 0.0489
Epoch [14/200], Step [100/1200], Loss: 0.0455
Epoch [14/200], Step [200/1200], Loss: 0.0035
Epoch [14/200], Step [300/1200], Loss: 0.1150
Epoch [14/200], Step [400/1200], Loss: 0.0186
Epoch [14/200], Step [500/1200], Loss: 0.0069
Epoch [14/200], Step [600/1200], Loss: 0.1113
Epoch [14/200], Step [700/1200], Loss: 0.0258
Epoch [14/200], Step [800/1200], Loss: 0.0050
Epoch [14/200], Step [900/1200], Loss: 0.0164
Epoch [14/200], Step [1000/1200], Loss: 0.0067
Epoch [14/200], Step [1100/1200], Loss: 0.0149
Epoch [14/200], Step [1200/1200], Loss: 0.0291
Epoch [15/200], Step [100/1200], Loss: 0.0320
Epoch [15/200], Step [200/1200], Loss: 0.0740
Epoch [15/200], Step [300/1200], Loss: 0.0073
Epoch [15/200], Step [400/1200], Loss: 0.0044
Epoch [15/200], Step [500/1200], Loss: 0.0016
Epoch [15/200], Step [600/1200], Loss: 0.0039
Epoch [15/200], Step [700/1200], Loss: 0.0136
Epoch [15/200], Step [800/1200], Loss: 0.0268
Epoch [15/200], Step [900/1200], Loss: 0.0073
Epoch [15/200], Step [1000/1200], Loss: 0.1453
Epoch [15/200], Step [1100/1200], Loss: 0.0047
Epoch [15/200], Step [1200/1200], Loss: 0.0063
Epoch [16/200], Step [100/1200], Loss: 0.0026
Epoch [16/200], Step [200/1200], Loss: 0.0550
Epoch [16/200], Step [300/1200], Loss: 0.0229
Epoch [16/200], Step [400/1200], Loss: 0.0060
Epoch [16/200], Step [500/1200], Loss: 0.0829
Epoch [16/200], Step [600/1200], Loss: 0.0876
Epoch [16/200], Step [700/1200], Loss: 0.0304
Epoch [16/200], Step [800/1200], Loss: 0.0557
Epoch [16/200], Step [900/1200], Loss: 0.0293
Epoch [16/200], Step [1000/1200], Loss: 0.0656
Epoch [16/200], Step [1100/1200], Loss: 0.0087
Epoch [16/200], Step [1200/1200], Loss: 0.0080
Epoch [17/200], Step [100/1200], Loss: 0.1525
Epoch [17/200], Step [200/1200], Loss: 0.0053
Epoch [17/200], Step [300/1200], Loss: 0.0324
Epoch [17/200], Step [400/1200], Loss: 0.0067
Epoch [17/200], Step [500/1200], Loss: 0.0115
Epoch [17/200], Step [600/1200], Loss: 0.0019
Epoch [17/200], Step [700/1200], Loss: 0.1535
Epoch [17/200], Step [800/1200], Loss: 0.0584
Epoch [17/200], Step [900/1200], Loss: 0.0173
Epoch [17/200], Step [1000/1200], Loss: 0.0067
Epoch [17/200], Step [1100/1200], Loss: 0.0073
Epoch [17/200], Step [1200/1200], Loss: 0.0315
Epoch [18/200], Step [100/1200], Loss: 0.0096
Epoch [18/200], Step [200/1200], Loss: 0.0026
Epoch [18/200], Step [300/1200], Loss: 0.0065
Epoch [18/200], Step [400/1200], Loss: 0.0236
Epoch [18/200], Step [500/1200], Loss: 0.0167
Epoch [18/200], Step [600/1200], Loss: 0.0414
Epoch [18/200], Step [700/1200], Loss: 0.0475
Epoch [18/200], Step [800/1200], Loss: 0.0636
Epoch [18/200], Step [900/1200], Loss: 0.1262
Epoch [18/200], Step [1000/1200], Loss: 0.0197
Epoch [18/200], Step [1100/1200], Loss: 0.2023
Epoch [18/200], Step [1200/1200], Loss: 0.0463
Epoch [19/200], Step [100/1200], Loss: 0.0084
Epoch [19/200], Step [200/1200], Loss: 0.0158
Epoch [19/200], Step [300/1200], Loss: 0.0032
Epoch [19/200], Step [400/1200], Loss: 0.0164
Epoch [19/200], Step [500/1200], Loss: 0.0178
Epoch [19/200], Step [600/1200], Loss: 0.0458
Epoch [19/200], Step [700/1200], Loss: 0.1569
Epoch [19/200], Step [800/1200], Loss: 0.0039
Epoch [19/200], Step [900/1200], Loss: 0.0021
Epoch [19/200], Step [1000/1200], Loss: 0.0021
Epoch [19/200], Step [1100/1200], Loss: 0.0047
Epoch [19/200], Step [1200/1200], Loss: 0.0023
Epoch [20/200], Step [100/1200], Loss: 0.0283
Epoch [20/200], Step [200/1200], Loss: 0.0186
Epoch [20/200], Step [300/1200], Loss: 0.0063
Epoch [20/200], Step [400/1200], Loss: 0.0322
Epoch [20/200], Step [500/1200], Loss: 0.0037
Epoch [20/200], Step [600/1200], Loss: 0.0026
Epoch [20/200], Step [700/1200], Loss: 0.0162
Epoch [20/200], Step [800/1200], Loss: 0.0199
Epoch [20/200], Step [900/1200], Loss: 0.0898
Epoch [20/200], Step [1000/1200], Loss: 0.0689
Epoch [20/200], Step [1100/1200], Loss: 0.0082
Epoch [20/200], Step [1200/1200], Loss: 0.0095
Epoch [21/200], Step [100/1200], Loss: 0.0613
Epoch [21/200], Step [200/1200], Loss: 0.1057
Epoch [21/200], Step [300/1200], Loss: 0.0010
Epoch [21/200], Step [400/1200], Loss: 0.1474
Epoch [21/200], Step [500/1200], Loss: 0.0097
Epoch [21/200], Step [600/1200], Loss: 0.0075
Epoch [21/200], Step [700/1200], Loss: 0.1571
Epoch [21/200], Step [800/1200], Loss: 0.0168
Epoch [21/200], Step [900/1200], Loss: 0.0175
Epoch [21/200], Step [1000/1200], Loss: 0.1442
Epoch [21/200], Step [1100/1200], Loss: 0.0716
Epoch [21/200], Step [1200/1200], Loss: 0.0046
Epoch [22/200], Step [100/1200], Loss: 0.0740
Epoch [22/200], Step [200/1200], Loss: 0.0037
Epoch [22/200], Step [300/1200], Loss: 0.0110
Epoch [22/200], Step [400/1200], Loss: 0.0177
Epoch [22/200], Step [500/1200], Loss: 0.1694
Epoch [22/200], Step [600/1200], Loss: 0.0051
Epoch [22/200], Step [700/1200], Loss: 0.0438
Epoch [22/200], Step [800/1200], Loss: 0.0082
Epoch [22/200], Step [900/1200], Loss: 0.0017
Epoch [22/200], Step [1000/1200], Loss: 0.0043
Epoch [22/200], Step [1100/1200], Loss: 0.0026
Epoch [22/200], Step [1200/1200], Loss: 0.0774
Epoch [23/200], Step [100/1200], Loss: 0.0360
Epoch [23/200], Step [200/1200], Loss: 0.0160
Epoch [23/200], Step [300/1200], Loss: 0.0524
Epoch [23/200], Step [400/1200], Loss: 0.0020
Epoch [23/200], Step [500/1200], Loss: 0.0039
Epoch [23/200], Step [600/1200], Loss: 0.0014
Epoch [23/200], Step [700/1200], Loss: 0.0298
Epoch [23/200], Step [800/1200], Loss: 0.0046
Epoch [23/200], Step [900/1200], Loss: 0.0680
Epoch [23/200], Step [1000/1200], Loss: 0.0019
Epoch [23/200], Step [1100/1200], Loss: 0.0032
Epoch [23/200], Step [1200/1200], Loss: 0.0107
Epoch [24/200], Step [100/1200], Loss: 0.0021
Epoch [24/200], Step [200/1200], Loss: 0.0037
Epoch [24/200], Step [300/1200], Loss: 0.1936
Epoch [24/200], Step [400/1200], Loss: 0.0125
Epoch [24/200], Step [500/1200], Loss: 0.0451
Epoch [24/200], Step [600/1200], Loss: 0.0099
Epoch [24/200], Step [700/1200], Loss: 0.0101
Epoch [24/200], Step [800/1200], Loss: 0.0149
Epoch [24/200], Step [900/1200], Loss: 0.0036
Epoch [24/200], Step [1000/1200], Loss: 0.0039
Epoch [24/200], Step [1100/1200], Loss: 0.0030
Epoch [24/200], Step [1200/1200], Loss: 0.0770
Epoch [25/200], Step [100/1200], Loss: 0.0114
Epoch [25/200], Step [200/1200], Loss: 0.0045
Epoch [25/200], Step [300/1200], Loss: 0.0206
Epoch [25/200], Step [400/1200], Loss: 0.0067
Epoch [25/200], Step [500/1200], Loss: 0.0123
Epoch [25/200], Step [600/1200], Loss: 0.0006
Epoch [25/200], Step [700/1200], Loss: 0.0086
Epoch [25/200], Step [800/1200], Loss: 0.0059
Epoch [25/200], Step [900/1200], Loss: 0.0556
Epoch [25/200], Step [1000/1200], Loss: 0.0062
Epoch [25/200], Step [1100/1200], Loss: 0.0086
Epoch [25/200], Step [1200/1200], Loss: 0.0117
Epoch [26/200], Step [100/1200], Loss: 0.0958
Epoch [26/200], Step [200/1200], Loss: 0.0264
Epoch [26/200], Step [300/1200], Loss: 0.0290
Epoch [26/200], Step [400/1200], Loss: 0.0265
Epoch [26/200], Step [500/1200], Loss: 0.0421
Epoch [26/200], Step [600/1200], Loss: 0.0013
Epoch [26/200], Step [700/1200], Loss: 0.0041
Epoch [26/200], Step [800/1200], Loss: 0.0177
Epoch [26/200], Step [900/1200], Loss: 0.0010
Epoch [26/200], Step [1000/1200], Loss: 0.0136
Epoch [26/200], Step [1100/1200], Loss: 0.1062
Epoch [26/200], Step [1200/1200], Loss: 0.0019
Epoch [27/200], Step [100/1200], Loss: 0.0551
Epoch [27/200], Step [200/1200], Loss: 0.0033
Epoch [27/200], Step [300/1200], Loss: 0.0555
Epoch [27/200], Step [400/1200], Loss: 0.0063
Epoch [27/200], Step [500/1200], Loss: 0.0116
Epoch [27/200], Step [600/1200], Loss: 0.0091
Epoch [27/200], Step [700/1200], Loss: 0.0329
Epoch [27/200], Step [800/1200], Loss: 0.0057
Epoch [27/200], Step [900/1200], Loss: 0.0056
Epoch [27/200], Step [1000/1200], Loss: 0.0050
Epoch [27/200], Step [1100/1200], Loss: 0.0013
Epoch [27/200], Step [1200/1200], Loss: 0.0016
Epoch [28/200], Step [100/1200], Loss: 0.0029
Epoch [28/200], Step [200/1200], Loss: 0.0023
Epoch [28/200], Step [300/1200], Loss: 0.0629
Epoch [28/200], Step [400/1200], Loss: 0.0298
Epoch [28/200], Step [500/1200], Loss: 0.0020
Epoch [28/200], Step [600/1200], Loss: 0.0380
Epoch [28/200], Step [700/1200], Loss: 0.0021
Epoch [28/200], Step [800/1200], Loss: 0.0310
Epoch [28/200], Step [900/1200], Loss: 0.0131
Epoch [28/200], Step [1000/1200], Loss: 0.0207
Epoch [28/200], Step [1100/1200], Loss: 0.0326
Epoch [28/200], Step [1200/1200], Loss: 0.0557
Epoch [29/200], Step [100/1200], Loss: 0.0027
Epoch [29/200], Step [200/1200], Loss: 0.0003
Epoch [29/200], Step [300/1200], Loss: 0.0092
Epoch [29/200], Step [400/1200], Loss: 0.0243
Epoch [29/200], Step [500/1200], Loss: 0.0005
Epoch [29/200], Step [600/1200], Loss: 0.0034
Epoch [29/200], Step [700/1200], Loss: 0.0081
Epoch [29/200], Step [800/1200], Loss: 0.0678
Epoch [29/200], Step [900/1200], Loss: 0.0130
Epoch [29/200], Step [1000/1200], Loss: 0.0018
Epoch [29/200], Step [1100/1200], Loss: 0.0024
Epoch [29/200], Step [1200/1200], Loss: 0.0245
Epoch [30/200], Step [100/1200], Loss: 0.0002
Epoch [30/200], Step [200/1200], Loss: 0.0033
Epoch [30/200], Step [300/1200], Loss: 0.0019
Epoch [30/200], Step [400/1200], Loss: 0.0547
Epoch [30/200], Step [500/1200], Loss: 0.0580
Epoch [30/200], Step [600/1200], Loss: 0.0179
Epoch [30/200], Step [700/1200], Loss: 0.0018
Epoch [30/200], Step [800/1200], Loss: 0.0831
Epoch [30/200], Step [900/1200], Loss: 0.0019
Epoch [30/200], Step [1000/1200], Loss: 0.0006
Epoch [30/200], Step [1100/1200], Loss: 0.0105
Epoch [30/200], Step [1200/1200], Loss: 0.0692
Epoch [31/200], Step [100/1200], Loss: 0.0071
Epoch [31/200], Step [200/1200], Loss: 0.0121
Epoch [31/200], Step [300/1200], Loss: 0.0008
Epoch [31/200], Step [400/1200], Loss: 0.0004
Epoch [31/200], Step [500/1200], Loss: 0.0186
Epoch [31/200], Step [600/1200], Loss: 0.0091
Epoch [31/200], Step [700/1200], Loss: 0.0013
Epoch [31/200], Step [800/1200], Loss: 0.0001
Epoch [31/200], Step [900/1200], Loss: 0.0125
Epoch [31/200], Step [1000/1200], Loss: 0.0003
Epoch [31/200], Step [1100/1200], Loss: 0.0665
Epoch [31/200], Step [1200/1200], Loss: 0.0085
Epoch [32/200], Step [100/1200], Loss: 0.0053
Epoch [32/200], Step [200/1200], Loss: 0.0025
Epoch [32/200], Step [300/1200], Loss: 0.0039
Epoch [32/200], Step [400/1200], Loss: 0.0960
Epoch [32/200], Step [500/1200], Loss: 0.0023
Epoch [32/200], Step [600/1200], Loss: 0.0007
Epoch [32/200], Step [700/1200], Loss: 0.0092
Epoch [32/200], Step [800/1200], Loss: 0.0011
Epoch [32/200], Step [900/1200], Loss: 0.0297
Epoch [32/200], Step [1000/1200], Loss: 0.0221
Epoch [32/200], Step [1100/1200], Loss: 0.0418
Epoch [32/200], Step [1200/1200], Loss: 0.0007
Epoch [33/200], Step [100/1200], Loss: 0.0048
Epoch [33/200], Step [200/1200], Loss: 0.0002
Epoch [33/200], Step [300/1200], Loss: 0.0072
Epoch [33/200], Step [400/1200], Loss: 0.0073
Epoch [33/200], Step [500/1200], Loss: 0.0070
Epoch [33/200], Step [600/1200], Loss: 0.0338
Epoch [33/200], Step [700/1200], Loss: 0.0005
Epoch [33/200], Step [800/1200], Loss: 0.0740
Epoch [33/200], Step [900/1200], Loss: 0.0697
Epoch [33/200], Step [1000/1200], Loss: 0.0115
Epoch [33/200], Step [1100/1200], Loss: 0.0014
Epoch [33/200], Step [1200/1200], Loss: 0.0012
Epoch [34/200], Step [100/1200], Loss: 0.0452
Epoch [34/200], Step [200/1200], Loss: 0.0002
Epoch [34/200], Step [300/1200], Loss: 0.0005
Epoch [34/200], Step [400/1200], Loss: 0.0412
Epoch [34/200], Step [500/1200], Loss: 0.0089
Epoch [34/200], Step [600/1200], Loss: 0.1485
Epoch [34/200], Step [700/1200], Loss: 0.0104
Epoch [34/200], Step [800/1200], Loss: 0.0081
Epoch [34/200], Step [900/1200], Loss: 0.0012
Epoch [34/200], Step [1000/1200], Loss: 0.0004
Epoch [34/200], Step [1100/1200], Loss: 0.0284
Epoch [34/200], Step [1200/1200], Loss: 0.0235
Epoch [35/200], Step [100/1200], Loss: 0.0011
Epoch [35/200], Step [200/1200], Loss: 0.0058
Epoch [35/200], Step [300/1200], Loss: 0.0192
Epoch [35/200], Step [400/1200], Loss: 0.0011
Epoch [35/200], Step [500/1200], Loss: 0.0078
Epoch [35/200], Step [600/1200], Loss: 0.0041
Epoch [35/200], Step [700/1200], Loss: 0.0337
Epoch [35/200], Step [800/1200], Loss: 0.0895
Epoch [35/200], Step [900/1200], Loss: 0.0359
Epoch [35/200], Step [1000/1200], Loss: 0.0003
Epoch [35/200], Step [1100/1200], Loss: 0.0036
Epoch [35/200], Step [1200/1200], Loss: 0.0215
Epoch [36/200], Step [100/1200], Loss: 0.0171
Epoch [36/200], Step [200/1200], Loss: 0.0115
Epoch [36/200], Step [300/1200], Loss: 0.0045
Epoch [36/200], Step [400/1200], Loss: 0.0059
Epoch [36/200], Step [500/1200], Loss: 0.0007
Epoch [36/200], Step [600/1200], Loss: 0.0086
Epoch [36/200], Step [700/1200], Loss: 0.0013
Epoch [36/200], Step [800/1200], Loss: 0.0505
Epoch [36/200], Step [900/1200], Loss: 0.0011
Epoch [36/200], Step [1000/1200], Loss: 0.0088
Epoch [36/200], Step [1100/1200], Loss: 0.0112
Epoch [36/200], Step [1200/1200], Loss: 0.0062
Epoch [37/200], Step [100/1200], Loss: 0.0003
Epoch [37/200], Step [200/1200], Loss: 0.0003
Epoch [37/200], Step [300/1200], Loss: 0.0114
Epoch [37/200], Step [400/1200], Loss: 0.0115
Epoch [37/200], Step [500/1200], Loss: 0.0015
Epoch [37/200], Step [600/1200], Loss: 0.0016
Epoch [37/200], Step [700/1200], Loss: 0.0010
Epoch [37/200], Step [800/1200], Loss: 0.0055
Epoch [37/200], Step [900/1200], Loss: 0.1138
Epoch [37/200], Step [1000/1200], Loss: 0.0006
Epoch [37/200], Step [1100/1200], Loss: 0.0011
Epoch [37/200], Step [1200/1200], Loss: 0.0022
Epoch [38/200], Step [100/1200], Loss: 0.0020
Epoch [38/200], Step [200/1200], Loss: 0.0065
Epoch [38/200], Step [300/1200], Loss: 0.0018
Epoch [38/200], Step [400/1200], Loss: 0.0807
Epoch [38/200], Step [500/1200], Loss: 0.0228
Epoch [38/200], Step [600/1200], Loss: 0.0002
Epoch [38/200], Step [700/1200], Loss: 0.0179
Epoch [38/200], Step [800/1200], Loss: 0.0001
Epoch [38/200], Step [900/1200], Loss: 0.0004
Epoch [38/200], Step [1000/1200], Loss: 0.0011
Epoch [38/200], Step [1100/1200], Loss: 0.0004
Epoch [38/200], Step [1200/1200], Loss: 0.0046
Epoch [39/200], Step [100/1200], Loss: 0.0011
Epoch [39/200], Step [200/1200], Loss: 0.0031
Epoch [39/200], Step [300/1200], Loss: 0.0001
Epoch [39/200], Step [400/1200], Loss: 0.0158
Epoch [39/200], Step [500/1200], Loss: 0.0003
Epoch [39/200], Step [600/1200], Loss: 0.0018
Epoch [39/200], Step [700/1200], Loss: 0.0071
Epoch [39/200], Step [800/1200], Loss: 0.0379
Epoch [39/200], Step [900/1200], Loss: 0.2245
Epoch [39/200], Step [1000/1200], Loss: 0.0752
Epoch [39/200], Step [1100/1200], Loss: 0.0031
Epoch [39/200], Step [1200/1200], Loss: 0.0049
Epoch [40/200], Step [100/1200], Loss: 0.0009
Epoch [40/200], Step [200/1200], Loss: 0.0009
Epoch [40/200], Step [300/1200], Loss: 0.0061
Epoch [40/200], Step [400/1200], Loss: 0.0152
Epoch [40/200], Step [500/1200], Loss: 0.0138
Epoch [40/200], Step [600/1200], Loss: 0.0052
Epoch [40/200], Step [700/1200], Loss: 0.0007
Epoch [40/200], Step [800/1200], Loss: 0.0007
Epoch [40/200], Step [900/1200], Loss: 0.1413
Epoch [40/200], Step [1000/1200], Loss: 0.0111
Epoch [40/200], Step [1100/1200], Loss: 0.0002
Epoch [40/200], Step [1200/1200], Loss: 0.0080
Epoch [41/200], Step [100/1200], Loss: 0.0164
Epoch [41/200], Step [200/1200], Loss: 0.0026
Epoch [41/200], Step [300/1200], Loss: 0.0013
Epoch [41/200], Step [400/1200], Loss: 0.0112
Epoch [41/200], Step [500/1200], Loss: 0.0319
Epoch [41/200], Step [600/1200], Loss: 0.0706
Epoch [41/200], Step [700/1200], Loss: 0.0081
Epoch [41/200], Step [800/1200], Loss: 0.0012
Epoch [41/200], Step [900/1200], Loss: 0.0008
Epoch [41/200], Step [1000/1200], Loss: 0.0070
Epoch [41/200], Step [1100/1200], Loss: 0.0157
Epoch [41/200], Step [1200/1200], Loss: 0.0015
Epoch [42/200], Step [100/1200], Loss: 0.0005
Epoch [42/200], Step [200/1200], Loss: 0.0006
Epoch [42/200], Step [300/1200], Loss: 0.0136
Epoch [42/200], Step [400/1200], Loss: 0.0221
Epoch [42/200], Step [500/1200], Loss: 0.0054
Epoch [42/200], Step [600/1200], Loss: 0.0357
Epoch [42/200], Step [700/1200], Loss: 0.0030
Epoch [42/200], Step [800/1200], Loss: 0.0147
Epoch [42/200], Step [900/1200], Loss: 0.0037
Epoch [42/200], Step [1000/1200], Loss: 0.0097
Epoch [42/200], Step [1100/1200], Loss: 0.0043
Epoch [42/200], Step [1200/1200], Loss: 0.0011
Epoch [43/200], Step [100/1200], Loss: 0.0002
Epoch [43/200], Step [200/1200], Loss: 0.0010
Epoch [43/200], Step [300/1200], Loss: 0.0151
Epoch [43/200], Step [400/1200], Loss: 0.1117
Epoch [43/200], Step [500/1200], Loss: 0.0108
Epoch [43/200], Step [600/1200], Loss: 0.0001
Epoch [43/200], Step [700/1200], Loss: 0.0010
Epoch [43/200], Step [800/1200], Loss: 0.0098
Epoch [43/200], Step [900/1200], Loss: 0.0043
Epoch [43/200], Step [1000/1200], Loss: 0.0002
Epoch [43/200], Step [1100/1200], Loss: 0.0008
Epoch [43/200], Step [1200/1200], Loss: 0.0524
Epoch [44/200], Step [100/1200], Loss: 0.0160
Epoch [44/200], Step [200/1200], Loss: 0.0080
Epoch [44/200], Step [300/1200], Loss: 0.0080
Epoch [44/200], Step [400/1200], Loss: 0.0008
Epoch [44/200], Step [500/1200], Loss: 0.0006
Epoch [44/200], Step [600/1200], Loss: 0.0015
Epoch [44/200], Step [700/1200], Loss: 0.0080
Epoch [44/200], Step [800/1200], Loss: 0.0368
Epoch [44/200], Step [900/1200], Loss: 0.0018
Epoch [44/200], Step [1000/1200], Loss: 0.0029
Epoch [44/200], Step [1100/1200], Loss: 0.0155
Epoch [44/200], Step [1200/1200], Loss: 0.0001
Epoch [45/200], Step [100/1200], Loss: 0.1037
Epoch [45/200], Step [200/1200], Loss: 0.0446
Epoch [45/200], Step [300/1200], Loss: 0.0262
Epoch [45/200], Step [400/1200], Loss: 0.0177
Epoch [45/200], Step [500/1200], Loss: 0.0391
Epoch [45/200], Step [600/1200], Loss: 0.0066
Epoch [45/200], Step [700/1200], Loss: 0.0003
Epoch [45/200], Step [800/1200], Loss: 0.0016
Epoch [45/200], Step [900/1200], Loss: 0.1068
Epoch [45/200], Step [1000/1200], Loss: 0.0024
Epoch [45/200], Step [1100/1200], Loss: 0.0019
Epoch [45/200], Step [1200/1200], Loss: 0.0007
Epoch [46/200], Step [100/1200], Loss: 0.0009
Epoch [46/200], Step [200/1200], Loss: 0.0707
Epoch [46/200], Step [300/1200], Loss: 0.0286
Epoch [46/200], Step [400/1200], Loss: 0.0513
Epoch [46/200], Step [500/1200], Loss: 0.0449
Epoch [46/200], Step [600/1200], Loss: 0.0005
Epoch [46/200], Step [700/1200], Loss: 0.0030
Epoch [46/200], Step [800/1200], Loss: 0.0109
Epoch [46/200], Step [900/1200], Loss: 0.0024
Epoch [46/200], Step [1000/1200], Loss: 0.0056
Epoch [46/200], Step [1100/1200], Loss: 0.0004
Epoch [46/200], Step [1200/1200], Loss: 0.0000
Epoch [47/200], Step [100/1200], Loss: 0.0040
Epoch [47/200], Step [200/1200], Loss: 0.0001
Epoch [47/200], Step [300/1200], Loss: 0.0173
Epoch [47/200], Step [400/1200], Loss: 0.0011
Epoch [47/200], Step [500/1200], Loss: 0.0297
Epoch [47/200], Step [600/1200], Loss: 0.0002
Epoch [47/200], Step [700/1200], Loss: 0.0005
Epoch [47/200], Step [800/1200], Loss: 0.0076
Epoch [47/200], Step [900/1200], Loss: 0.2427
Epoch [47/200], Step [1000/1200], Loss: 0.0046
Epoch [47/200], Step [1100/1200], Loss: 0.0151
Epoch [47/200], Step [1200/1200], Loss: 0.0005
Epoch [48/200], Step [100/1200], Loss: 0.0002
Epoch [48/200], Step [200/1200], Loss: 0.0006
Epoch [48/200], Step [300/1200], Loss: 0.0242
Epoch [48/200], Step [400/1200], Loss: 0.0001
Epoch [48/200], Step [500/1200], Loss: 0.0340
Epoch [48/200], Step [600/1200], Loss: 0.0200
Epoch [48/200], Step [700/1200], Loss: 0.1015
Epoch [48/200], Step [800/1200], Loss: 0.0566
Epoch [48/200], Step [900/1200], Loss: 0.0051
Epoch [48/200], Step [1000/1200], Loss: 0.0002
Epoch [48/200], Step [1100/1200], Loss: 0.0007
Epoch [48/200], Step [1200/1200], Loss: 0.0005
Epoch [49/200], Step [100/1200], Loss: 0.0100
Epoch [49/200], Step [200/1200], Loss: 0.1047
Epoch [49/200], Step [300/1200], Loss: 0.0019
Epoch [49/200], Step [400/1200], Loss: 0.0032
Epoch [49/200], Step [500/1200], Loss: 0.0425
Epoch [49/200], Step [600/1200], Loss: 0.0016
Epoch [49/200], Step [700/1200], Loss: 0.0693
Epoch [49/200], Step [800/1200], Loss: 0.0120
Epoch [49/200], Step [900/1200], Loss: 0.0109
Epoch [49/200], Step [1000/1200], Loss: 0.0013
Epoch [49/200], Step [1100/1200], Loss: 0.0002
Epoch [49/200], Step [1200/1200], Loss: 0.0026
Epoch [50/200], Step [100/1200], Loss: 0.0000
Epoch [50/200], Step [200/1200], Loss: 0.0010
Epoch [50/200], Step [300/1200], Loss: 0.0003
Epoch [50/200], Step [400/1200], Loss: 0.0008
Epoch [50/200], Step [500/1200], Loss: 0.0012
Epoch [50/200], Step [600/1200], Loss: 0.0032
Epoch [50/200], Step [700/1200], Loss: 0.0006
Epoch [50/200], Step [800/1200], Loss: 0.0061
Epoch [50/200], Step [900/1200], Loss: 0.0279
Epoch [50/200], Step [1000/1200], Loss: 0.0070
Epoch [50/200], Step [1100/1200], Loss: 0.0008
Epoch [50/200], Step [1200/1200], Loss: 0.0042
Epoch [51/200], Step [100/1200], Loss: 0.0170
Epoch [51/200], Step [200/1200], Loss: 0.0012
Epoch [51/200], Step [300/1200], Loss: 0.0066
Epoch [51/200], Step [400/1200], Loss: 0.0009
Epoch [51/200], Step [500/1200], Loss: 0.0031
Epoch [51/200], Step [600/1200], Loss: 0.0001
Epoch [51/200], Step [700/1200], Loss: 0.0032
Epoch [51/200], Step [800/1200], Loss: 0.0009
Epoch [51/200], Step [900/1200], Loss: 0.0037
Epoch [51/200], Step [1000/1200], Loss: 0.0024
Epoch [51/200], Step [1100/1200], Loss: 0.0031
Epoch [51/200], Step [1200/1200], Loss: 0.0005
Epoch [52/200], Step [100/1200], Loss: 0.0003
Epoch [52/200], Step [200/1200], Loss: 0.0001
Epoch [52/200], Step [300/1200], Loss: 0.0007
Epoch [52/200], Step [400/1200], Loss: 0.0329
Epoch [52/200], Step [500/1200], Loss: 0.0451
Epoch [52/200], Step [600/1200], Loss: 0.0069
Epoch [52/200], Step [700/1200], Loss: 0.0013
Epoch [52/200], Step [800/1200], Loss: 0.0000
Epoch [52/200], Step [900/1200], Loss: 0.0032
Epoch [52/200], Step [1000/1200], Loss: 0.0009
Epoch [52/200], Step [1100/1200], Loss: 0.0033
Epoch [52/200], Step [1200/1200], Loss: 0.0121
Epoch [53/200], Step [100/1200], Loss: 0.0154
Epoch [53/200], Step [200/1200], Loss: 0.0012
Epoch [53/200], Step [300/1200], Loss: 0.0052
Epoch [53/200], Step [400/1200], Loss: 0.0001
Epoch [53/200], Step [500/1200], Loss: 0.0009
Epoch [53/200], Step [600/1200], Loss: 0.0002
Epoch [53/200], Step [700/1200], Loss: 0.0024
Epoch [53/200], Step [800/1200], Loss: 0.0042
Epoch [53/200], Step [900/1200], Loss: 0.0029
Epoch [53/200], Step [1000/1200], Loss: 0.0001
Epoch [53/200], Step [1100/1200], Loss: 0.0000
Epoch [53/200], Step [1200/1200], Loss: 0.0003
Epoch [54/200], Step [100/1200], Loss: 0.0009
Epoch [54/200], Step [200/1200], Loss: 0.0128
Epoch [54/200], Step [300/1200], Loss: 0.0007
Epoch [54/200], Step [400/1200], Loss: 0.0096
Epoch [54/200], Step [500/1200], Loss: 0.0026
Epoch [54/200], Step [600/1200], Loss: 0.0003
Epoch [54/200], Step [700/1200], Loss: 0.0004
Epoch [54/200], Step [800/1200], Loss: 0.0001
Epoch [54/200], Step [900/1200], Loss: 0.0418
Epoch [54/200], Step [1000/1200], Loss: 0.0041
Epoch [54/200], Step [1100/1200], Loss: 0.0041
Epoch [54/200], Step [1200/1200], Loss: 0.0337
Epoch [55/200], Step [100/1200], Loss: 0.0080
Epoch [55/200], Step [200/1200], Loss: 0.0069
Epoch [55/200], Step [300/1200], Loss: 0.0051
Epoch [55/200], Step [400/1200], Loss: 0.0034
Epoch [55/200], Step [500/1200], Loss: 0.0009
Epoch [55/200], Step [600/1200], Loss: 0.0002
Epoch [55/200], Step [700/1200], Loss: 0.0041
Epoch [55/200], Step [800/1200], Loss: 0.0136
Epoch [55/200], Step [900/1200], Loss: 0.0003
Epoch [55/200], Step [1000/1200], Loss: 0.0036
Epoch [55/200], Step [1100/1200], Loss: 0.0003
Epoch [55/200], Step [1200/1200], Loss: 0.0028
Epoch [56/200], Step [100/1200], Loss: 0.0064
Epoch [56/200], Step [200/1200], Loss: 0.0041
Epoch [56/200], Step [300/1200], Loss: 0.0010
Epoch [56/200], Step [400/1200], Loss: 0.0009
Epoch [56/200], Step [500/1200], Loss: 0.0122
Epoch [56/200], Step [600/1200], Loss: 0.0000
Epoch [56/200], Step [700/1200], Loss: 0.1186
Epoch [56/200], Step [800/1200], Loss: 0.0054
Epoch [56/200], Step [900/1200], Loss: 0.0002
Epoch [56/200], Step [1000/1200], Loss: 0.0008
Epoch [56/200], Step [1100/1200], Loss: 0.0072
Epoch [56/200], Step [1200/1200], Loss: 0.0005
Epoch [57/200], Step [100/1200], Loss: 0.0002
Epoch [57/200], Step [200/1200], Loss: 0.0006
Epoch [57/200], Step [300/1200], Loss: 0.0001
Epoch [57/200], Step [400/1200], Loss: 0.0042
Epoch [57/200], Step [500/1200], Loss: 0.0004
Epoch [57/200], Step [600/1200], Loss: 0.0025
Epoch [57/200], Step [700/1200], Loss: 0.0005
Epoch [57/200], Step [800/1200], Loss: 0.0931
Epoch [57/200], Step [900/1200], Loss: 0.0006
Epoch [57/200], Step [1000/1200], Loss: 0.1070
Epoch [57/200], Step [1100/1200], Loss: 0.0068
Epoch [57/200], Step [1200/1200], Loss: 0.0090
Epoch [58/200], Step [100/1200], Loss: 0.0001
Epoch [58/200], Step [200/1200], Loss: 0.0000
Epoch [58/200], Step [300/1200], Loss: 0.0060
Epoch [58/200], Step [400/1200], Loss: 0.0288
Epoch [58/200], Step [500/1200], Loss: 0.0018
Epoch [58/200], Step [600/1200], Loss: 0.0623
Epoch [58/200], Step [700/1200], Loss: 0.0900
Epoch [58/200], Step [800/1200], Loss: 0.0160
Epoch [58/200], Step [900/1200], Loss: 0.0000
Epoch [58/200], Step [1000/1200], Loss: 0.0046
Epoch [58/200], Step [1100/1200], Loss: 0.0002
Epoch [58/200], Step [1200/1200], Loss: 0.0126
Epoch [59/200], Step [100/1200], Loss: 0.0001
Epoch [59/200], Step [200/1200], Loss: 0.0292
Epoch [59/200], Step [300/1200], Loss: 0.0004
Epoch [59/200], Step [400/1200], Loss: 0.0031
Epoch [59/200], Step [500/1200], Loss: 0.0010
Epoch [59/200], Step [600/1200], Loss: 0.0083
Epoch [59/200], Step [700/1200], Loss: 0.0012
Epoch [59/200], Step [800/1200], Loss: 0.0421
Epoch [59/200], Step [900/1200], Loss: 0.0155
Epoch [59/200], Step [1000/1200], Loss: 0.0043
Epoch [59/200], Step [1100/1200], Loss: 0.0003
Epoch [59/200], Step [1200/1200], Loss: 0.0005
Epoch [60/200], Step [100/1200], Loss: 0.0021
Epoch [60/200], Step [200/1200], Loss: 0.0002
Epoch [60/200], Step [300/1200], Loss: 0.0664
Epoch [60/200], Step [400/1200], Loss: 0.0002
Epoch [60/200], Step [500/1200], Loss: 0.0401
Epoch [60/200], Step [600/1200], Loss: 0.0005
Epoch [60/200], Step [700/1200], Loss: 0.0015
Epoch [60/200], Step [800/1200], Loss: 0.0066
Epoch [60/200], Step [900/1200], Loss: 0.0304
Epoch [60/200], Step [1000/1200], Loss: 0.0003
Epoch [60/200], Step [1100/1200], Loss: 0.0012
Epoch [60/200], Step [1200/1200], Loss: 0.0007
Epoch [61/200], Step [100/1200], Loss: 0.0196
Epoch [61/200], Step [200/1200], Loss: 0.0003
Epoch [61/200], Step [300/1200], Loss: 0.0001
Epoch [61/200], Step [400/1200], Loss: 0.0001
Epoch [61/200], Step [500/1200], Loss: 0.0021
Epoch [61/200], Step [600/1200], Loss: 0.0002
Epoch [61/200], Step [700/1200], Loss: 0.2139
Epoch [61/200], Step [800/1200], Loss: 0.0005
Epoch [61/200], Step [900/1200], Loss: 0.0090
Epoch [61/200], Step [1000/1200], Loss: 0.0247
Epoch [61/200], Step [1100/1200], Loss: 0.0012
Epoch [61/200], Step [1200/1200], Loss: 0.0000
Epoch [62/200], Step [100/1200], Loss: 0.0021
Epoch [62/200], Step [200/1200], Loss: 0.0031
Epoch [62/200], Step [300/1200], Loss: 0.0000
Epoch [62/200], Step [400/1200], Loss: 0.0011
Epoch [62/200], Step [500/1200], Loss: 0.0003
Epoch [62/200], Step [600/1200], Loss: 0.0006
Epoch [62/200], Step [700/1200], Loss: 0.0019
Epoch [62/200], Step [800/1200], Loss: 0.0477
Epoch [62/200], Step [900/1200], Loss: 0.0003
Epoch [62/200], Step [1000/1200], Loss: 0.0001
Epoch [62/200], Step [1100/1200], Loss: 0.0061
Epoch [62/200], Step [1200/1200], Loss: 0.0074
Epoch [63/200], Step [100/1200], Loss: 0.0237
Epoch [63/200], Step [200/1200], Loss: 0.0003
Epoch [63/200], Step [300/1200], Loss: 0.0000
Epoch [63/200], Step [400/1200], Loss: 0.0728
Epoch [63/200], Step [500/1200], Loss: 0.0002
Epoch [63/200], Step [600/1200], Loss: 0.0010
Epoch [63/200], Step [700/1200], Loss: 0.0013
Epoch [63/200], Step [800/1200], Loss: 0.0091
Epoch [63/200], Step [900/1200], Loss: 0.0002
Epoch [63/200], Step [1000/1200], Loss: 0.0000
Epoch [63/200], Step [1100/1200], Loss: 0.0095
Epoch [63/200], Step [1200/1200], Loss: 0.0006
Epoch [64/200], Step [100/1200], Loss: 0.0005
Epoch [64/200], Step [200/1200], Loss: 0.0003
Epoch [64/200], Step [300/1200], Loss: 0.0000
Epoch [64/200], Step [400/1200], Loss: 0.0583
Epoch [64/200], Step [500/1200], Loss: 0.0007
Epoch [64/200], Step [600/1200], Loss: 0.0293
Epoch [64/200], Step [700/1200], Loss: 0.0004
Epoch [64/200], Step [800/1200], Loss: 0.0020
Epoch [64/200], Step [900/1200], Loss: 0.0094
Epoch [64/200], Step [1000/1200], Loss: 0.0004
Epoch [64/200], Step [1100/1200], Loss: 0.0003
Epoch [64/200], Step [1200/1200], Loss: 0.0016
Epoch [65/200], Step [100/1200], Loss: 0.0276
Epoch [65/200], Step [200/1200], Loss: 0.0015
Epoch [65/200], Step [300/1200], Loss: 0.0037
Epoch [65/200], Step [400/1200], Loss: 0.0047
Epoch [65/200], Step [500/1200], Loss: 0.0034
Epoch [65/200], Step [600/1200], Loss: 0.0001
Epoch [65/200], Step [700/1200], Loss: 0.0006
Epoch [65/200], Step [800/1200], Loss: 0.0240
Epoch [65/200], Step [900/1200], Loss: 0.0060
Epoch [65/200], Step [1000/1200], Loss: 0.0014
Epoch [65/200], Step [1100/1200], Loss: 0.0098
Epoch [65/200], Step [1200/1200], Loss: 0.0011
Epoch [66/200], Step [100/1200], Loss: 0.0004
Epoch [66/200], Step [200/1200], Loss: 0.0014
Epoch [66/200], Step [300/1200], Loss: 0.0020
Epoch [66/200], Step [400/1200], Loss: 0.0158
Epoch [66/200], Step [500/1200], Loss: 0.0005
Epoch [66/200], Step [600/1200], Loss: 0.0036
Epoch [66/200], Step [700/1200], Loss: 0.0018
Epoch [66/200], Step [800/1200], Loss: 0.0003
Epoch [66/200], Step [900/1200], Loss: 0.0004
Epoch [66/200], Step [1000/1200], Loss: 0.0327
Epoch [66/200], Step [1100/1200], Loss: 0.0004
Epoch [66/200], Step [1200/1200], Loss: 0.0008
Epoch [67/200], Step [100/1200], Loss: 0.0010
Epoch [67/200], Step [200/1200], Loss: 0.0004
Epoch [67/200], Step [300/1200], Loss: 0.0001
Epoch [67/200], Step [400/1200], Loss: 0.0002
Epoch [67/200], Step [500/1200], Loss: 0.0000
Epoch [67/200], Step [600/1200], Loss: 0.0008
Epoch [67/200], Step [700/1200], Loss: 0.0002
Epoch [67/200], Step [800/1200], Loss: 0.0037
Epoch [67/200], Step [900/1200], Loss: 0.0009
Epoch [67/200], Step [1000/1200], Loss: 0.0014
Epoch [67/200], Step [1100/1200], Loss: 0.0003
Epoch [67/200], Step [1200/1200], Loss: 0.0004
Epoch [68/200], Step [100/1200], Loss: 0.0025
Epoch [68/200], Step [200/1200], Loss: 0.0010
Epoch [68/200], Step [300/1200], Loss: 0.0251
Epoch [68/200], Step [400/1200], Loss: 0.0001
Epoch [68/200], Step [500/1200], Loss: 0.0285
Epoch [68/200], Step [600/1200], Loss: 0.0001
Epoch [68/200], Step [700/1200], Loss: 0.0347
Epoch [68/200], Step [800/1200], Loss: 0.0391
Epoch [68/200], Step [900/1200], Loss: 0.0021
Epoch [68/200], Step [1000/1200], Loss: 0.0012
Epoch [68/200], Step [1100/1200], Loss: 0.0008
Epoch [68/200], Step [1200/1200], Loss: 0.0029
Epoch [69/200], Step [100/1200], Loss: 0.0001
Epoch [69/200], Step [200/1200], Loss: 0.0199
Epoch [69/200], Step [300/1200], Loss: 0.0269
Epoch [69/200], Step [400/1200], Loss: 0.0001
Epoch [69/200], Step [500/1200], Loss: 0.0013
Epoch [69/200], Step [600/1200], Loss: 0.0123
Epoch [69/200], Step [700/1200], Loss: 0.0054
Epoch [69/200], Step [800/1200], Loss: 0.0026
Epoch [69/200], Step [900/1200], Loss: 0.0047
Epoch [69/200], Step [1000/1200], Loss: 0.0007
Epoch [69/200], Step [1100/1200], Loss: 0.0001
Epoch [69/200], Step [1200/1200], Loss: 0.0013
Epoch [70/200], Step [100/1200], Loss: 0.0184
Epoch [70/200], Step [200/1200], Loss: 0.0004
Epoch [70/200], Step [300/1200], Loss: 0.0927
Epoch [70/200], Step [400/1200], Loss: 0.0008
Epoch [70/200], Step [500/1200], Loss: 0.0284
Epoch [70/200], Step [600/1200], Loss: 0.0040
Epoch [70/200], Step [700/1200], Loss: 0.0008
Epoch [70/200], Step [800/1200], Loss: 0.0187
Epoch [70/200], Step [900/1200], Loss: 0.0011
Epoch [70/200], Step [1000/1200], Loss: 0.0063
Epoch [70/200], Step [1100/1200], Loss: 0.0003
Epoch [70/200], Step [1200/1200], Loss: 0.0005
Epoch [71/200], Step [100/1200], Loss: 0.0003
Epoch [71/200], Step [200/1200], Loss: 0.0185
Epoch [71/200], Step [300/1200], Loss: 0.0043
Epoch [71/200], Step [400/1200], Loss: 0.0009
Epoch [71/200], Step [500/1200], Loss: 0.0003
Epoch [71/200], Step [600/1200], Loss: 0.0002
Epoch [71/200], Step [700/1200], Loss: 0.0100
Epoch [71/200], Step [800/1200], Loss: 0.0000
Epoch [71/200], Step [900/1200], Loss: 0.0105
Epoch [71/200], Step [1000/1200], Loss: 0.0036
Epoch [71/200], Step [1100/1200], Loss: 0.0009
Epoch [71/200], Step [1200/1200], Loss: 0.0122
Epoch [72/200], Step [100/1200], Loss: 0.0006
Epoch [72/200], Step [200/1200], Loss: 0.0001
Epoch [72/200], Step [300/1200], Loss: 0.0034
Epoch [72/200], Step [400/1200], Loss: 0.0118
Epoch [72/200], Step [500/1200], Loss: 0.0026
Epoch [72/200], Step [600/1200], Loss: 0.0000
Epoch [72/200], Step [700/1200], Loss: 0.0008
Epoch [72/200], Step [800/1200], Loss: 0.0005
Epoch [72/200], Step [900/1200], Loss: 0.0006
Epoch [72/200], Step [1000/1200], Loss: 0.0004
Epoch [72/200], Step [1100/1200], Loss: 0.0145
Epoch [72/200], Step [1200/1200], Loss: 0.0038
Epoch [73/200], Step [100/1200], Loss: 0.0004
Epoch [73/200], Step [200/1200], Loss: 0.0003
Epoch [73/200], Step [300/1200], Loss: 0.0479
Epoch [73/200], Step [400/1200], Loss: 0.0027
Epoch [73/200], Step [500/1200], Loss: 0.0007
Epoch [73/200], Step [600/1200], Loss: 0.0002
Epoch [73/200], Step [700/1200], Loss: 0.0004
Epoch [73/200], Step [800/1200], Loss: 0.0486
Epoch [73/200], Step [900/1200], Loss: 0.0014
Epoch [73/200], Step [1000/1200], Loss: 0.0157
Epoch [73/200], Step [1100/1200], Loss: 0.0003
Epoch [73/200], Step [1200/1200], Loss: 0.0001
Epoch [74/200], Step [100/1200], Loss: 0.0102
Epoch [74/200], Step [200/1200], Loss: 0.0050
Epoch [74/200], Step [300/1200], Loss: 0.0000
Epoch [74/200], Step [400/1200], Loss: 0.0001
Epoch [74/200], Step [500/1200], Loss: 0.0003
Epoch [74/200], Step [600/1200], Loss: 0.0001
Epoch [74/200], Step [700/1200], Loss: 0.0006
Epoch [74/200], Step [800/1200], Loss: 0.0114
Epoch [74/200], Step [900/1200], Loss: 0.0059
Epoch [74/200], Step [1000/1200], Loss: 0.0773
Epoch [74/200], Step [1100/1200], Loss: 0.0122
Epoch [74/200], Step [1200/1200], Loss: 0.0022
Epoch [75/200], Step [100/1200], Loss: 0.0001
Epoch [75/200], Step [200/1200], Loss: 0.0013
Epoch [75/200], Step [300/1200], Loss: 0.0001
Epoch [75/200], Step [400/1200], Loss: 0.0023
Epoch [75/200], Step [500/1200], Loss: 0.0013
Epoch [75/200], Step [600/1200], Loss: 0.0116
Epoch [75/200], Step [700/1200], Loss: 0.0004
Epoch [75/200], Step [800/1200], Loss: 0.0016
Epoch [75/200], Step [900/1200], Loss: 0.0000
Epoch [75/200], Step [1000/1200], Loss: 0.0022
Epoch [75/200], Step [1100/1200], Loss: 0.0001
Epoch [75/200], Step [1200/1200], Loss: 0.0428
Epoch [76/200], Step [100/1200], Loss: 0.0000
Epoch [76/200], Step [200/1200], Loss: 0.0780
Epoch [76/200], Step [300/1200], Loss: 0.0008
Epoch [76/200], Step [400/1200], Loss: 0.0028
Epoch [76/200], Step [500/1200], Loss: 0.0013
Epoch [76/200], Step [600/1200], Loss: 0.0002
Epoch [76/200], Step [700/1200], Loss: 0.0003
Epoch [76/200], Step [800/1200], Loss: 0.0011
Epoch [76/200], Step [900/1200], Loss: 0.0003
Epoch [76/200], Step [1000/1200], Loss: 0.1155
Epoch [76/200], Step [1100/1200], Loss: 0.0095
Epoch [76/200], Step [1200/1200], Loss: 0.0020
Epoch [77/200], Step [100/1200], Loss: 0.0006
Epoch [77/200], Step [200/1200], Loss: 0.0001
Epoch [77/200], Step [300/1200], Loss: 0.0001
Epoch [77/200], Step [400/1200], Loss: 0.0002
Epoch [77/200], Step [500/1200], Loss: 0.0006
Epoch [77/200], Step [600/1200], Loss: 0.0398
Epoch [77/200], Step [700/1200], Loss: 0.0015
Epoch [77/200], Step [800/1200], Loss: 0.0154
Epoch [77/200], Step [900/1200], Loss: 0.0073
Epoch [77/200], Step [1000/1200], Loss: 0.0001
Epoch [77/200], Step [1100/1200], Loss: 0.0000
Epoch [77/200], Step [1200/1200], Loss: 0.0002
Epoch [78/200], Step [100/1200], Loss: 0.0000
Epoch [78/200], Step [200/1200], Loss: 0.0000
Epoch [78/200], Step [300/1200], Loss: 0.0027
Epoch [78/200], Step [400/1200], Loss: 0.0003
Epoch [78/200], Step [500/1200], Loss: 0.0062
Epoch [78/200], Step [600/1200], Loss: 0.0005
Epoch [78/200], Step [700/1200], Loss: 0.0004
Epoch [78/200], Step [800/1200], Loss: 0.0035
Epoch [78/200], Step [900/1200], Loss: 0.0005
Epoch [78/200], Step [1000/1200], Loss: 0.0001
Epoch [78/200], Step [1100/1200], Loss: 0.0018
Epoch [78/200], Step [1200/1200], Loss: 0.0003
Epoch [79/200], Step [100/1200], Loss: 0.0025
Epoch [79/200], Step [200/1200], Loss: 0.0000
Epoch [79/200], Step [300/1200], Loss: 0.0230
Epoch [79/200], Step [400/1200], Loss: 0.0029
Epoch [79/200], Step [500/1200], Loss: 0.0006
Epoch [79/200], Step [600/1200], Loss: 0.0008
Epoch [79/200], Step [700/1200], Loss: 0.0003
Epoch [79/200], Step [800/1200], Loss: 0.0010
Epoch [79/200], Step [900/1200], Loss: 0.0016
Epoch [79/200], Step [1000/1200], Loss: 0.0226
Epoch [79/200], Step [1100/1200], Loss: 0.0013
Epoch [79/200], Step [1200/1200], Loss: 0.0181
Epoch [80/200], Step [100/1200], Loss: 0.0011
Epoch [80/200], Step [200/1200], Loss: 0.0006
Epoch [80/200], Step [300/1200], Loss: 0.0211
Epoch [80/200], Step [400/1200], Loss: 0.0009
Epoch [80/200], Step [500/1200], Loss: 0.0768
Epoch [80/200], Step [600/1200], Loss: 0.0000
Epoch [80/200], Step [700/1200], Loss: 0.0009
Epoch [80/200], Step [800/1200], Loss: 0.0006
Epoch [80/200], Step [900/1200], Loss: 0.0011
Epoch [80/200], Step [1000/1200], Loss: 0.0004
Epoch [80/200], Step [1100/1200], Loss: 0.0023
Epoch [80/200], Step [1200/1200], Loss: 0.0005
Epoch [81/200], Step [100/1200], Loss: 0.0023
Epoch [81/200], Step [200/1200], Loss: 0.0021
Epoch [81/200], Step [300/1200], Loss: 0.0178
Epoch [81/200], Step [400/1200], Loss: 0.0160
Epoch [81/200], Step [500/1200], Loss: 0.0003
Epoch [81/200], Step [600/1200], Loss: 0.0000
Epoch [81/200], Step [700/1200], Loss: 0.0006
Epoch [81/200], Step [800/1200], Loss: 0.0056
Epoch [81/200], Step [900/1200], Loss: 0.0000
Epoch [81/200], Step [1000/1200], Loss: 0.0000
Epoch [81/200], Step [1100/1200], Loss: 0.0004
Epoch [81/200], Step [1200/1200], Loss: 0.0002
Epoch [82/200], Step [100/1200], Loss: 0.0013
Epoch [82/200], Step [200/1200], Loss: 0.0005
Epoch [82/200], Step [300/1200], Loss: 0.0000
Epoch [82/200], Step [400/1200], Loss: 0.0010
Epoch [82/200], Step [500/1200], Loss: 0.0142
Epoch [82/200], Step [600/1200], Loss: 0.0002
Epoch [82/200], Step [700/1200], Loss: 0.0002
Epoch [82/200], Step [800/1200], Loss: 0.0821
Epoch [82/200], Step [900/1200], Loss: 0.0273
Epoch [82/200], Step [1000/1200], Loss: 0.0000
Epoch [82/200], Step [1100/1200], Loss: 0.0199
Epoch [82/200], Step [1200/1200], Loss: 0.0005
Epoch [83/200], Step [100/1200], Loss: 0.0000
Epoch [83/200], Step [200/1200], Loss: 0.0003
Epoch [83/200], Step [300/1200], Loss: 0.0023
Epoch [83/200], Step [400/1200], Loss: 0.0204
Epoch [83/200], Step [500/1200], Loss: 0.0009
Epoch [83/200], Step [600/1200], Loss: 0.0002
Epoch [83/200], Step [700/1200], Loss: 0.0403
Epoch [83/200], Step [800/1200], Loss: 0.0436
Epoch [83/200], Step [900/1200], Loss: 0.0152
Epoch [83/200], Step [1000/1200], Loss: 0.0212
Epoch [83/200], Step [1100/1200], Loss: 0.0001
Epoch [83/200], Step [1200/1200], Loss: 0.0010
Epoch [84/200], Step [100/1200], Loss: 0.0022
Epoch [84/200], Step [200/1200], Loss: 0.0006
Epoch [84/200], Step [300/1200], Loss: 0.0009
Epoch [84/200], Step [400/1200], Loss: 0.0008
Epoch [84/200], Step [500/1200], Loss: 0.0001
Epoch [84/200], Step [600/1200], Loss: 0.0094
Epoch [84/200], Step [700/1200], Loss: 0.0543
Epoch [84/200], Step [800/1200], Loss: 0.0006
Epoch [84/200], Step [900/1200], Loss: 0.0002
Epoch [84/200], Step [1000/1200], Loss: 0.0004
Epoch [84/200], Step [1100/1200], Loss: 0.0087
Epoch [84/200], Step [1200/1200], Loss: 0.0006
Epoch [85/200], Step [100/1200], Loss: 0.0000
Epoch [85/200], Step [200/1200], Loss: 0.0000
Epoch [85/200], Step [300/1200], Loss: 0.0001
Epoch [85/200], Step [400/1200], Loss: 0.0002
Epoch [85/200], Step [500/1200], Loss: 0.0125
Epoch [85/200], Step [600/1200], Loss: 0.0004
Epoch [85/200], Step [700/1200], Loss: 0.0003
Epoch [85/200], Step [800/1200], Loss: 0.1693
Epoch [85/200], Step [900/1200], Loss: 0.0289
Epoch [85/200], Step [1000/1200], Loss: 0.0000
Epoch [85/200], Step [1100/1200], Loss: 0.0001
Epoch [85/200], Step [1200/1200], Loss: 0.0002
Epoch [86/200], Step [100/1200], Loss: 0.0000
Epoch [86/200], Step [200/1200], Loss: 0.0005
Epoch [86/200], Step [300/1200], Loss: 0.0809
Epoch [86/200], Step [400/1200], Loss: 0.0042
Epoch [86/200], Step [500/1200], Loss: 0.0019
Epoch [86/200], Step [600/1200], Loss: 0.0000
Epoch [86/200], Step [700/1200], Loss: 0.0002
Epoch [86/200], Step [800/1200], Loss: 0.0013
Epoch [86/200], Step [900/1200], Loss: 0.0002
Epoch [86/200], Step [1000/1200], Loss: 0.0003
Epoch [86/200], Step [1100/1200], Loss: 0.0000
Epoch [86/200], Step [1200/1200], Loss: 0.0004
Epoch [87/200], Step [100/1200], Loss: 0.0001
Epoch [87/200], Step [200/1200], Loss: 0.0001
Epoch [87/200], Step [300/1200], Loss: 0.0000
Epoch [87/200], Step [400/1200], Loss: 0.0021
Epoch [87/200], Step [500/1200], Loss: 0.0007
Epoch [87/200], Step [600/1200], Loss: 0.0242
Epoch [87/200], Step [700/1200], Loss: 0.0640
Epoch [87/200], Step [800/1200], Loss: 0.0031
Epoch [87/200], Step [900/1200], Loss: 0.0167
Epoch [87/200], Step [1000/1200], Loss: 0.0000
Epoch [87/200], Step [1100/1200], Loss: 0.0000
Epoch [87/200], Step [1200/1200], Loss: 0.0001
Epoch [88/200], Step [100/1200], Loss: 0.0007
Epoch [88/200], Step [200/1200], Loss: 0.0001
Epoch [88/200], Step [300/1200], Loss: 0.0000
Epoch [88/200], Step [400/1200], Loss: 0.0000
Epoch [88/200], Step [500/1200], Loss: 0.0001
Epoch [88/200], Step [600/1200], Loss: 0.0075
Epoch [88/200], Step [700/1200], Loss: 0.0000
Epoch [88/200], Step [800/1200], Loss: 0.0226
Epoch [88/200], Step [900/1200], Loss: 0.0001
Epoch [88/200], Step [1000/1200], Loss: 0.0001
Epoch [88/200], Step [1100/1200], Loss: 0.0461
Epoch [88/200], Step [1200/1200], Loss: 0.0000
Epoch [89/200], Step [100/1200], Loss: 0.0036
Epoch [89/200], Step [200/1200], Loss: 0.0004
Epoch [89/200], Step [300/1200], Loss: 0.0015
Epoch [89/200], Step [400/1200], Loss: 0.0030
Epoch [89/200], Step [500/1200], Loss: 0.0047
Epoch [89/200], Step [600/1200], Loss: 0.0000
Epoch [89/200], Step [700/1200], Loss: 0.0007
Epoch [89/200], Step [800/1200], Loss: 0.0068
Epoch [89/200], Step [900/1200], Loss: 0.0054
Epoch [89/200], Step [1000/1200], Loss: 0.0062
Epoch [89/200], Step [1100/1200], Loss: 0.0007
Epoch [89/200], Step [1200/1200], Loss: 0.0030
Epoch [90/200], Step [100/1200], Loss: 0.0000
Epoch [90/200], Step [200/1200], Loss: 0.0004
Epoch [90/200], Step [300/1200], Loss: 0.0000
Epoch [90/200], Step [400/1200], Loss: 0.0000
Epoch [90/200], Step [500/1200], Loss: 0.0003
Epoch [90/200], Step [600/1200], Loss: 0.0000
Epoch [90/200], Step [700/1200], Loss: 0.0001
Epoch [90/200], Step [800/1200], Loss: 0.0005
Epoch [90/200], Step [900/1200], Loss: 0.0008
Epoch [90/200], Step [1000/1200], Loss: 0.0011
Epoch [90/200], Step [1100/1200], Loss: 0.0000
Epoch [90/200], Step [1200/1200], Loss: 0.0002
Epoch [91/200], Step [100/1200], Loss: 0.0001
Epoch [91/200], Step [200/1200], Loss: 0.0003
Epoch [91/200], Step [300/1200], Loss: 0.0006
Epoch [91/200], Step [400/1200], Loss: 0.0011
Epoch [91/200], Step [500/1200], Loss: 0.0572
Epoch [91/200], Step [600/1200], Loss: 0.0000
Epoch [91/200], Step [700/1200], Loss: 0.0019
Epoch [91/200], Step [800/1200], Loss: 0.0001
Epoch [91/200], Step [900/1200], Loss: 0.0006
Epoch [91/200], Step [1000/1200], Loss: 0.0003
Epoch [91/200], Step [1100/1200], Loss: 0.0010
Epoch [91/200], Step [1200/1200], Loss: 0.0000
Epoch [92/200], Step [100/1200], Loss: 0.0025
Epoch [92/200], Step [200/1200], Loss: 0.0013
Epoch [92/200], Step [300/1200], Loss: 0.0042
Epoch [92/200], Step [400/1200], Loss: 0.0653
Epoch [92/200], Step [500/1200], Loss: 0.0062
Epoch [92/200], Step [600/1200], Loss: 0.0002
Epoch [92/200], Step [700/1200], Loss: 0.0036
Epoch [92/200], Step [800/1200], Loss: 0.0000
Epoch [92/200], Step [900/1200], Loss: 0.0000
Epoch [92/200], Step [1000/1200], Loss: 0.0011
Epoch [92/200], Step [1100/1200], Loss: 0.0027
Epoch [92/200], Step [1200/1200], Loss: 0.0000
Epoch [93/200], Step [100/1200], Loss: 0.0001
Epoch [93/200], Step [200/1200], Loss: 0.0001
Epoch [93/200], Step [300/1200], Loss: 0.0053
Epoch [93/200], Step [400/1200], Loss: 0.0153
Epoch [93/200], Step [500/1200], Loss: 0.0000
Epoch [93/200], Step [600/1200], Loss: 0.0000
Epoch [93/200], Step [700/1200], Loss: 0.0000
Epoch [93/200], Step [800/1200], Loss: 0.0000
Epoch [93/200], Step [900/1200], Loss: 0.0000
Epoch [93/200], Step [1000/1200], Loss: 0.0010
Epoch [93/200], Step [1100/1200], Loss: 0.0006
Epoch [93/200], Step [1200/1200], Loss: 0.0002
Epoch [94/200], Step [100/1200], Loss: 0.0022
Epoch [94/200], Step [200/1200], Loss: 0.0001
Epoch [94/200], Step [300/1200], Loss: 0.0017
Epoch [94/200], Step [400/1200], Loss: 0.0000
Epoch [94/200], Step [500/1200], Loss: 0.0004
Epoch [94/200], Step [600/1200], Loss: 0.0003
Epoch [94/200], Step [700/1200], Loss: 0.0002
Epoch [94/200], Step [800/1200], Loss: 0.0002
Epoch [94/200], Step [900/1200], Loss: 0.0101
Epoch [94/200], Step [1000/1200], Loss: 0.0001
Epoch [94/200], Step [1100/1200], Loss: 0.0007
Epoch [94/200], Step [1200/1200], Loss: 0.0160
Epoch [95/200], Step [100/1200], Loss: 0.0103
Epoch [95/200], Step [200/1200], Loss: 0.0022
Epoch [95/200], Step [300/1200], Loss: 0.0000
Epoch [95/200], Step [400/1200], Loss: 0.0008
Epoch [95/200], Step [500/1200], Loss: 0.0149
Epoch [95/200], Step [600/1200], Loss: 0.0000
Epoch [95/200], Step [700/1200], Loss: 0.0005
Epoch [95/200], Step [800/1200], Loss: 0.0001
Epoch [95/200], Step [900/1200], Loss: 0.0003
Epoch [95/200], Step [1000/1200], Loss: 0.0003
Epoch [95/200], Step [1100/1200], Loss: 0.0009
Epoch [95/200], Step [1200/1200], Loss: 0.0000
Epoch [96/200], Step [100/1200], Loss: 0.0083
Epoch [96/200], Step [200/1200], Loss: 0.0072
Epoch [96/200], Step [300/1200], Loss: 0.0132
Epoch [96/200], Step [400/1200], Loss: 0.0247
Epoch [96/200], Step [500/1200], Loss: 0.0013
Epoch [96/200], Step [600/1200], Loss: 0.0108
Epoch [96/200], Step [700/1200], Loss: 0.0002
Epoch [96/200], Step [800/1200], Loss: 0.0287
Epoch [96/200], Step [900/1200], Loss: 0.0013
Epoch [96/200], Step [1000/1200], Loss: 0.0070
Epoch [96/200], Step [1100/1200], Loss: 0.0146
Epoch [96/200], Step [1200/1200], Loss: 0.0009
Epoch [97/200], Step [100/1200], Loss: 0.0258
Epoch [97/200], Step [200/1200], Loss: 0.0000
Epoch [97/200], Step [300/1200], Loss: 0.0004
Epoch [97/200], Step [400/1200], Loss: 0.0051
Epoch [97/200], Step [500/1200], Loss: 0.0000
Epoch [97/200], Step [600/1200], Loss: 0.0004
Epoch [97/200], Step [700/1200], Loss: 0.0001
Epoch [97/200], Step [800/1200], Loss: 0.0024
Epoch [97/200], Step [900/1200], Loss: 0.0003
Epoch [97/200], Step [1000/1200], Loss: 0.0012
Epoch [97/200], Step [1100/1200], Loss: 0.0000
Epoch [97/200], Step [1200/1200], Loss: 0.0036
Epoch [98/200], Step [100/1200], Loss: 0.0000
Epoch [98/200], Step [200/1200], Loss: 0.0000
Epoch [98/200], Step [300/1200], Loss: 0.0000
Epoch [98/200], Step [400/1200], Loss: 0.0000
Epoch [98/200], Step [500/1200], Loss: 0.0008
Epoch [98/200], Step [600/1200], Loss: 0.0002
Epoch [98/200], Step [700/1200], Loss: 0.0005
Epoch [98/200], Step [800/1200], Loss: 0.0003
Epoch [98/200], Step [900/1200], Loss: 0.0001
Epoch [98/200], Step [1000/1200], Loss: 0.0196
Epoch [98/200], Step [1100/1200], Loss: 0.0003
Epoch [98/200], Step [1200/1200], Loss: 0.0039
Epoch [99/200], Step [100/1200], Loss: 0.0000
Epoch [99/200], Step [200/1200], Loss: 0.0000
Epoch [99/200], Step [300/1200], Loss: 0.0000
Epoch [99/200], Step [400/1200], Loss: 0.0006
Epoch [99/200], Step [500/1200], Loss: 0.0001
Epoch [99/200], Step [600/1200], Loss: 0.0006
Epoch [99/200], Step [700/1200], Loss: 0.0000
Epoch [99/200], Step [800/1200], Loss: 0.0465
Epoch [99/200], Step [900/1200], Loss: 0.0004
Epoch [99/200], Step [1000/1200], Loss: 0.0013
Epoch [99/200], Step [1100/1200], Loss: 0.0000
Epoch [99/200], Step [1200/1200], Loss: 0.0000
Epoch [100/200], Step [100/1200], Loss: 0.0001
Epoch [100/200], Step [200/1200], Loss: 0.0104
Epoch [100/200], Step [300/1200], Loss: 0.0866
Epoch [100/200], Step [400/1200], Loss: 0.0000
Epoch [100/200], Step [500/1200], Loss: 0.0038
Epoch [100/200], Step [600/1200], Loss: 0.0000
Epoch [100/200], Step [700/1200], Loss: 0.0001
Epoch [100/200], Step [800/1200], Loss: 0.0019
Epoch [100/200], Step [900/1200], Loss: 0.0015
Epoch [100/200], Step [1000/1200], Loss: 0.0285
Epoch [100/200], Step [1100/1200], Loss: 0.0091
Epoch [100/200], Step [1200/1200], Loss: 0.0000
Epoch [101/200], Step [100/1200], Loss: 0.0186
Epoch [101/200], Step [200/1200], Loss: 0.0006
Epoch [101/200], Step [300/1200], Loss: 0.0039
Epoch [101/200], Step [400/1200], Loss: 0.0002
Epoch [101/200], Step [500/1200], Loss: 0.0004
Epoch [101/200], Step [600/1200], Loss: 0.0002
Epoch [101/200], Step [700/1200], Loss: 0.0004
Epoch [101/200], Step [800/1200], Loss: 0.0144
Epoch [101/200], Step [900/1200], Loss: 0.0000
Epoch [101/200], Step [1000/1200], Loss: 0.0000
Epoch [101/200], Step [1100/1200], Loss: 0.0074
Epoch [101/200], Step [1200/1200], Loss: 0.0076
Epoch [102/200], Step [100/1200], Loss: 0.0000
Epoch [102/200], Step [200/1200], Loss: 0.0015
Epoch [102/200], Step [300/1200], Loss: 0.0003
Epoch [102/200], Step [400/1200], Loss: 0.0080
Epoch [102/200], Step [500/1200], Loss: 0.0001
Epoch [102/200], Step [600/1200], Loss: 0.0001
Epoch [102/200], Step [700/1200], Loss: 0.0000
Epoch [102/200], Step [800/1200], Loss: 0.0001
Epoch [102/200], Step [900/1200], Loss: 0.0060
Epoch [102/200], Step [1000/1200], Loss: 0.0001
Epoch [102/200], Step [1100/1200], Loss: 0.0383
Epoch [102/200], Step [1200/1200], Loss: 0.0142
Epoch [103/200], Step [100/1200], Loss: 0.0000
Epoch [103/200], Step [200/1200], Loss: 0.0000
Epoch [103/200], Step [300/1200], Loss: 0.0001
Epoch [103/200], Step [400/1200], Loss: 0.0116
Epoch [103/200], Step [500/1200], Loss: 0.0022
Epoch [103/200], Step [600/1200], Loss: 0.0003
Epoch [103/200], Step [700/1200], Loss: 0.0001
Epoch [103/200], Step [800/1200], Loss: 0.0033
Epoch [103/200], Step [900/1200], Loss: 0.0004
Epoch [103/200], Step [1000/1200], Loss: 0.0019
Epoch [103/200], Step [1100/1200], Loss: 0.0005
Epoch [103/200], Step [1200/1200], Loss: 0.0003
Epoch [104/200], Step [100/1200], Loss: 0.0015
Epoch [104/200], Step [200/1200], Loss: 0.0005
Epoch [104/200], Step [300/1200], Loss: 0.0004
Epoch [104/200], Step [400/1200], Loss: 0.1042
Epoch [104/200], Step [500/1200], Loss: 0.0062
Epoch [104/200], Step [600/1200], Loss: 0.0000
Epoch [104/200], Step [700/1200], Loss: 0.0638
Epoch [104/200], Step [800/1200], Loss: 0.0001
Epoch [104/200], Step [900/1200], Loss: 0.0080
Epoch [104/200], Step [1000/1200], Loss: 0.0006
Epoch [104/200], Step [1100/1200], Loss: 0.0700
Epoch [104/200], Step [1200/1200], Loss: 0.0067
Epoch [105/200], Step [100/1200], Loss: 0.0032
Epoch [105/200], Step [200/1200], Loss: 0.0001
Epoch [105/200], Step [300/1200], Loss: 0.0002
Epoch [105/200], Step [400/1200], Loss: 0.0082
Epoch [105/200], Step [500/1200], Loss: 0.0007
Epoch [105/200], Step [600/1200], Loss: 0.0042
Epoch [105/200], Step [700/1200], Loss: 0.0048
Epoch [105/200], Step [800/1200], Loss: 0.0080
Epoch [105/200], Step [900/1200], Loss: 0.0000
Epoch [105/200], Step [1000/1200], Loss: 0.0003
Epoch [105/200], Step [1100/1200], Loss: 0.0001
Epoch [105/200], Step [1200/1200], Loss: 0.0051
Epoch [106/200], Step [100/1200], Loss: 0.0090
Epoch [106/200], Step [200/1200], Loss: 0.0008
Epoch [106/200], Step [300/1200], Loss: 0.0026
Epoch [106/200], Step [400/1200], Loss: 0.0016
Epoch [106/200], Step [500/1200], Loss: 0.0001
Epoch [106/200], Step [600/1200], Loss: 0.0009
Epoch [106/200], Step [700/1200], Loss: 0.0011
Epoch [106/200], Step [800/1200], Loss: 0.0271
Epoch [106/200], Step [900/1200], Loss: 0.0012
Epoch [106/200], Step [1000/1200], Loss: 0.0005
Epoch [106/200], Step [1100/1200], Loss: 0.0038
Epoch [106/200], Step [1200/1200], Loss: 0.0013
Epoch [107/200], Step [100/1200], Loss: 0.0017
Epoch [107/200], Step [200/1200], Loss: 0.0048
Epoch [107/200], Step [300/1200], Loss: 0.0196
Epoch [107/200], Step [400/1200], Loss: 0.0001
Epoch [107/200], Step [500/1200], Loss: 0.1419
Epoch [107/200], Step [600/1200], Loss: 0.0000
Epoch [107/200], Step [700/1200], Loss: 0.0000
Epoch [107/200], Step [800/1200], Loss: 0.0007
Epoch [107/200], Step [900/1200], Loss: 0.0018
Epoch [107/200], Step [1000/1200], Loss: 0.0003
Epoch [107/200], Step [1100/1200], Loss: 0.0000
Epoch [107/200], Step [1200/1200], Loss: 0.0462
Epoch [108/200], Step [100/1200], Loss: 0.0055
Epoch [108/200], Step [200/1200], Loss: 0.0013
Epoch [108/200], Step [300/1200], Loss: 0.0001
Epoch [108/200], Step [400/1200], Loss: 0.0023
Epoch [108/200], Step [500/1200], Loss: 0.0005
Epoch [108/200], Step [600/1200], Loss: 0.0000
Epoch [108/200], Step [700/1200], Loss: 0.0049
Epoch [108/200], Step [800/1200], Loss: 0.0014
Epoch [108/200], Step [900/1200], Loss: 0.0000
Epoch [108/200], Step [1000/1200], Loss: 0.0018
Epoch [108/200], Step [1100/1200], Loss: 0.0021
Epoch [108/200], Step [1200/1200], Loss: 0.0000
Epoch [109/200], Step [100/1200], Loss: 0.0122
Epoch [109/200], Step [200/1200], Loss: 0.0003
Epoch [109/200], Step [300/1200], Loss: 0.0005
Epoch [109/200], Step [400/1200], Loss: 0.0039
Epoch [109/200], Step [500/1200], Loss: 0.0009
Epoch [109/200], Step [600/1200], Loss: 0.0049
Epoch [109/200], Step [700/1200], Loss: 0.0055
Epoch [109/200], Step [800/1200], Loss: 0.0002
Epoch [109/200], Step [900/1200], Loss: 0.0001
Epoch [109/200], Step [1000/1200], Loss: 0.0007
Epoch [109/200], Step [1100/1200], Loss: 0.0001
Epoch [109/200], Step [1200/1200], Loss: 0.0001
Epoch [110/200], Step [100/1200], Loss: 0.0003
Epoch [110/200], Step [200/1200], Loss: 0.0006
Epoch [110/200], Step [300/1200], Loss: 0.0100
Epoch [110/200], Step [400/1200], Loss: 0.0007
Epoch [110/200], Step [500/1200], Loss: 0.0000
Epoch [110/200], Step [600/1200], Loss: 0.0010
Epoch [110/200], Step [700/1200], Loss: 0.0000
Epoch [110/200], Step [800/1200], Loss: 0.0183
Epoch [110/200], Step [900/1200], Loss: 0.0014
Epoch [110/200], Step [1000/1200], Loss: 0.0053
Epoch [110/200], Step [1100/1200], Loss: 0.0036
Epoch [110/200], Step [1200/1200], Loss: 0.0014
Epoch [111/200], Step [100/1200], Loss: 0.0000
Epoch [111/200], Step [200/1200], Loss: 0.0000
Epoch [111/200], Step [300/1200], Loss: 0.0000
Epoch [111/200], Step [400/1200], Loss: 0.0001
Epoch [111/200], Step [500/1200], Loss: 0.0000
Epoch [111/200], Step [600/1200], Loss: 0.0000
Epoch [111/200], Step [700/1200], Loss: 0.0014
Epoch [111/200], Step [800/1200], Loss: 0.0097
Epoch [111/200], Step [900/1200], Loss: 0.0003
Epoch [111/200], Step [1000/1200], Loss: 0.0005
Epoch [111/200], Step [1100/1200], Loss: 0.0006
Epoch [111/200], Step [1200/1200], Loss: 0.0196
Epoch [112/200], Step [100/1200], Loss: 0.0000
Epoch [112/200], Step [200/1200], Loss: 0.0000
Epoch [112/200], Step [300/1200], Loss: 0.0028
Epoch [112/200], Step [400/1200], Loss: 0.0004
Epoch [112/200], Step [500/1200], Loss: 0.0002
Epoch [112/200], Step [600/1200], Loss: 0.0134
Epoch [112/200], Step [700/1200], Loss: 0.0004
Epoch [112/200], Step [800/1200], Loss: 0.0011
Epoch [112/200], Step [900/1200], Loss: 0.0033
Epoch [112/200], Step [1000/1200], Loss: 0.0001
Epoch [112/200], Step [1100/1200], Loss: 0.0007
Epoch [112/200], Step [1200/1200], Loss: 0.0001
Epoch [113/200], Step [100/1200], Loss: 0.0000
Epoch [113/200], Step [200/1200], Loss: 0.0002
Epoch [113/200], Step [300/1200], Loss: 0.0002
Epoch [113/200], Step [400/1200], Loss: 0.0146
Epoch [113/200], Step [500/1200], Loss: 0.0000
Epoch [113/200], Step [600/1200], Loss: 0.0508
Epoch [113/200], Step [700/1200], Loss: 0.0001
Epoch [113/200], Step [800/1200], Loss: 0.0013
Epoch [113/200], Step [900/1200], Loss: 0.0005
Epoch [113/200], Step [1000/1200], Loss: 0.0000
Epoch [113/200], Step [1100/1200], Loss: 0.0000
Epoch [113/200], Step [1200/1200], Loss: 0.0074
Epoch [114/200], Step [100/1200], Loss: 0.0211
Epoch [114/200], Step [200/1200], Loss: 0.0002
Epoch [114/200], Step [300/1200], Loss: 0.0001
Epoch [114/200], Step [400/1200], Loss: 0.0512
Epoch [114/200], Step [500/1200], Loss: 0.0000
Epoch [114/200], Step [600/1200], Loss: 0.0908
Epoch [114/200], Step [700/1200], Loss: 0.0000
Epoch [114/200], Step [800/1200], Loss: 0.0000
Epoch [114/200], Step [900/1200], Loss: 0.0000
Epoch [114/200], Step [1000/1200], Loss: 0.0323
Epoch [114/200], Step [1100/1200], Loss: 0.0000
Epoch [114/200], Step [1200/1200], Loss: 0.0000
Epoch [115/200], Step [100/1200], Loss: 0.0003
Epoch [115/200], Step [200/1200], Loss: 0.0000
Epoch [115/200], Step [300/1200], Loss: 0.0000
Epoch [115/200], Step [400/1200], Loss: 0.0000
Epoch [115/200], Step [500/1200], Loss: 0.0000
Epoch [115/200], Step [600/1200], Loss: 0.0000
Epoch [115/200], Step [700/1200], Loss: 0.0420
Epoch [115/200], Step [800/1200], Loss: 0.0003
Epoch [115/200], Step [900/1200], Loss: 0.0000
Epoch [115/200], Step [1000/1200], Loss: 0.0000
Epoch [115/200], Step [1100/1200], Loss: 0.0000
Epoch [115/200], Step [1200/1200], Loss: 0.0001
Epoch [116/200], Step [100/1200], Loss: 0.0001
Epoch [116/200], Step [200/1200], Loss: 0.0000
Epoch [116/200], Step [300/1200], Loss: 0.0000
Epoch [116/200], Step [400/1200], Loss: 0.0024
Epoch [116/200], Step [500/1200], Loss: 0.0137
Epoch [116/200], Step [600/1200], Loss: 0.0005
Epoch [116/200], Step [700/1200], Loss: 0.0000
Epoch [116/200], Step [800/1200], Loss: 0.0000
Epoch [116/200], Step [900/1200], Loss: 0.0001
Epoch [116/200], Step [1000/1200], Loss: 0.0547
Epoch [116/200], Step [1100/1200], Loss: 0.0000
Epoch [116/200], Step [1200/1200], Loss: 0.0001
Epoch [117/200], Step [100/1200], Loss: 0.0001
Epoch [117/200], Step [200/1200], Loss: 0.0017
Epoch [117/200], Step [300/1200], Loss: 0.0013
Epoch [117/200], Step [400/1200], Loss: 0.0001
Epoch [117/200], Step [500/1200], Loss: 0.0001
Epoch [117/200], Step [600/1200], Loss: 0.0007
Epoch [117/200], Step [700/1200], Loss: 0.0000
Epoch [117/200], Step [800/1200], Loss: 0.0397
Epoch [117/200], Step [900/1200], Loss: 0.0000
Epoch [117/200], Step [1000/1200], Loss: 0.0060
Epoch [117/200], Step [1100/1200], Loss: 0.0000
Epoch [117/200], Step [1200/1200], Loss: 0.1073
Epoch [118/200], Step [100/1200], Loss: 0.0002
Epoch [118/200], Step [200/1200], Loss: 0.0012
Epoch [118/200], Step [300/1200], Loss: 0.0000
Epoch [118/200], Step [400/1200], Loss: 0.0042
Epoch [118/200], Step [500/1200], Loss: 0.0000
Epoch [118/200], Step [600/1200], Loss: 0.0000
Epoch [118/200], Step [700/1200], Loss: 0.0000
Epoch [118/200], Step [800/1200], Loss: 0.0000
Epoch [118/200], Step [900/1200], Loss: 0.0000
Epoch [118/200], Step [1000/1200], Loss: 0.0005
Epoch [118/200], Step [1100/1200], Loss: 0.0000
Epoch [118/200], Step [1200/1200], Loss: 0.0001
Epoch [119/200], Step [100/1200], Loss: 0.0013
Epoch [119/200], Step [200/1200], Loss: 0.0030
Epoch [119/200], Step [300/1200], Loss: 0.0029
Epoch [119/200], Step [400/1200], Loss: 0.0002
Epoch [119/200], Step [500/1200], Loss: 0.0036
Epoch [119/200], Step [600/1200], Loss: 0.0009
Epoch [119/200], Step [700/1200], Loss: 0.0000
Epoch [119/200], Step [800/1200], Loss: 0.0001
Epoch [119/200], Step [900/1200], Loss: 0.0000
Epoch [119/200], Step [1000/1200], Loss: 0.0000
Epoch [119/200], Step [1100/1200], Loss: 0.0014
Epoch [119/200], Step [1200/1200], Loss: 0.0001
Epoch [120/200], Step [100/1200], Loss: 0.0073
Epoch [120/200], Step [200/1200], Loss: 0.0007
Epoch [120/200], Step [300/1200], Loss: 0.0008
Epoch [120/200], Step [400/1200], Loss: 0.0003
Epoch [120/200], Step [500/1200], Loss: 0.0000
Epoch [120/200], Step [600/1200], Loss: 0.0006
Epoch [120/200], Step [700/1200], Loss: 0.0001
Epoch [120/200], Step [800/1200], Loss: 0.0007
Epoch [120/200], Step [900/1200], Loss: 0.0005
Epoch [120/200], Step [1000/1200], Loss: 0.0000
Epoch [120/200], Step [1100/1200], Loss: 0.0000
Epoch [120/200], Step [1200/1200], Loss: 0.0000
Epoch [121/200], Step [100/1200], Loss: 0.0000
Epoch [121/200], Step [200/1200], Loss: 0.0000
Epoch [121/200], Step [300/1200], Loss: 0.0046
Epoch [121/200], Step [400/1200], Loss: 0.0001
Epoch [121/200], Step [500/1200], Loss: 0.0164
Epoch [121/200], Step [600/1200], Loss: 0.0001
Epoch [121/200], Step [700/1200], Loss: 0.0008
Epoch [121/200], Step [800/1200], Loss: 0.0015
Epoch [121/200], Step [900/1200], Loss: 0.0002
Epoch [121/200], Step [1000/1200], Loss: 0.0000
Epoch [121/200], Step [1100/1200], Loss: 0.0014
Epoch [121/200], Step [1200/1200], Loss: 0.0074
Epoch [122/200], Step [100/1200], Loss: 0.0004
Epoch [122/200], Step [200/1200], Loss: 0.0000
Epoch [122/200], Step [300/1200], Loss: 0.0000
Epoch [122/200], Step [400/1200], Loss: 0.0000
Epoch [122/200], Step [500/1200], Loss: 0.0000
Epoch [122/200], Step [600/1200], Loss: 0.0381
Epoch [122/200], Step [700/1200], Loss: 0.0001
Epoch [122/200], Step [800/1200], Loss: 0.0012
Epoch [122/200], Step [900/1200], Loss: 0.0000
Epoch [122/200], Step [1000/1200], Loss: 0.0781
Epoch [122/200], Step [1100/1200], Loss: 0.0117
Epoch [122/200], Step [1200/1200], Loss: 0.0008
Epoch [123/200], Step [100/1200], Loss: 0.0000
Epoch [123/200], Step [200/1200], Loss: 0.0021
Epoch [123/200], Step [300/1200], Loss: 0.0000
Epoch [123/200], Step [400/1200], Loss: 0.0000
Epoch [123/200], Step [500/1200], Loss: 0.0000
Epoch [123/200], Step [600/1200], Loss: 0.0002
Epoch [123/200], Step [700/1200], Loss: 0.0007
Epoch [123/200], Step [800/1200], Loss: 0.0059
Epoch [123/200], Step [900/1200], Loss: 0.0001
Epoch [123/200], Step [1000/1200], Loss: 0.0000
Epoch [123/200], Step [1100/1200], Loss: 0.0064
Epoch [123/200], Step [1200/1200], Loss: 0.0000
Epoch [124/200], Step [100/1200], Loss: 0.0000
Epoch [124/200], Step [200/1200], Loss: 0.0000
Epoch [124/200], Step [300/1200], Loss: 0.0129
Epoch [124/200], Step [400/1200], Loss: 0.0000
Epoch [124/200], Step [500/1200], Loss: 0.0000
Epoch [124/200], Step [600/1200], Loss: 0.0001
Epoch [124/200], Step [700/1200], Loss: 0.0007
Epoch [124/200], Step [800/1200], Loss: 0.0000
Epoch [124/200], Step [900/1200], Loss: 0.0006
Epoch [124/200], Step [1000/1200], Loss: 0.0001
Epoch [124/200], Step [1100/1200], Loss: 0.0024
Epoch [124/200], Step [1200/1200], Loss: 0.0000
Epoch [125/200], Step [100/1200], Loss: 0.0010
Epoch [125/200], Step [200/1200], Loss: 0.0000
Epoch [125/200], Step [300/1200], Loss: 0.0001
Epoch [125/200], Step [400/1200], Loss: 0.0002
Epoch [125/200], Step [500/1200], Loss: 0.0000
Epoch [125/200], Step [600/1200], Loss: 0.0000
Epoch [125/200], Step [700/1200], Loss: 0.0000
Epoch [125/200], Step [800/1200], Loss: 0.0000
Epoch [125/200], Step [900/1200], Loss: 0.0056
Epoch [125/200], Step [1000/1200], Loss: 0.0001
Epoch [125/200], Step [1100/1200], Loss: 0.0000
Epoch [125/200], Step [1200/1200], Loss: 0.0000
Epoch [126/200], Step [100/1200], Loss: 0.0000
Epoch [126/200], Step [200/1200], Loss: 0.0000
Epoch [126/200], Step [300/1200], Loss: 0.0000
Epoch [126/200], Step [400/1200], Loss: 0.0001
Epoch [126/200], Step [500/1200], Loss: 0.0001
Epoch [126/200], Step [600/1200], Loss: 0.0006
Epoch [126/200], Step [700/1200], Loss: 0.0003
Epoch [126/200], Step [800/1200], Loss: 0.0006
Epoch [126/200], Step [900/1200], Loss: 0.0026
Epoch [126/200], Step [1000/1200], Loss: 0.0002
Epoch [126/200], Step [1100/1200], Loss: 0.0000
Epoch [126/200], Step [1200/1200], Loss: 0.0035
Epoch [127/200], Step [100/1200], Loss: 0.0000
Epoch [127/200], Step [200/1200], Loss: 0.0000
Epoch [127/200], Step [300/1200], Loss: 0.0000
Epoch [127/200], Step [400/1200], Loss: 0.0464
Epoch [127/200], Step [500/1200], Loss: 0.0000
Epoch [127/200], Step [600/1200], Loss: 0.0040
Epoch [127/200], Step [700/1200], Loss: 0.0173
Epoch [127/200], Step [800/1200], Loss: 0.0002
Epoch [127/200], Step [900/1200], Loss: 0.0000
Epoch [127/200], Step [1000/1200], Loss: 0.0000
Epoch [127/200], Step [1100/1200], Loss: 0.1329
Epoch [127/200], Step [1200/1200], Loss: 0.0004
Epoch [128/200], Step [100/1200], Loss: 0.0006
Epoch [128/200], Step [200/1200], Loss: 0.0009
Epoch [128/200], Step [300/1200], Loss: 0.0139
Epoch [128/200], Step [400/1200], Loss: 0.0000
Epoch [128/200], Step [500/1200], Loss: 0.0022
Epoch [128/200], Step [600/1200], Loss: 0.0001
Epoch [128/200], Step [700/1200], Loss: 0.0000
Epoch [128/200], Step [800/1200], Loss: 0.0000
Epoch [128/200], Step [900/1200], Loss: 0.0000
Epoch [128/200], Step [1000/1200], Loss: 0.0017
Epoch [128/200], Step [1100/1200], Loss: 0.0111
Epoch [128/200], Step [1200/1200], Loss: 0.0026
Epoch [129/200], Step [100/1200], Loss: 0.0001
Epoch [129/200], Step [200/1200], Loss: 0.0033
Epoch [129/200], Step [300/1200], Loss: 0.0000
Epoch [129/200], Step [400/1200], Loss: 0.0000
Epoch [129/200], Step [500/1200], Loss: 0.0004
Epoch [129/200], Step [600/1200], Loss: 0.0009
Epoch [129/200], Step [700/1200], Loss: 0.0000
Epoch [129/200], Step [800/1200], Loss: 0.0000
Epoch [129/200], Step [900/1200], Loss: 0.0084
Epoch [129/200], Step [1000/1200], Loss: 0.0016
Epoch [129/200], Step [1100/1200], Loss: 0.0002
Epoch [129/200], Step [1200/1200], Loss: 0.0023
Epoch [130/200], Step [100/1200], Loss: 0.0000
Epoch [130/200], Step [200/1200], Loss: 0.0248
Epoch [130/200], Step [300/1200], Loss: 0.0018
Epoch [130/200], Step [400/1200], Loss: 0.0000
Epoch [130/200], Step [500/1200], Loss: 0.0003
Epoch [130/200], Step [600/1200], Loss: 0.0001
Epoch [130/200], Step [700/1200], Loss: 0.0000
Epoch [130/200], Step [800/1200], Loss: 0.0026
Epoch [130/200], Step [900/1200], Loss: 0.0009
Epoch [130/200], Step [1000/1200], Loss: 0.0000
Epoch [130/200], Step [1100/1200], Loss: 0.0001
Epoch [130/200], Step [1200/1200], Loss: 0.0025
Epoch [131/200], Step [100/1200], Loss: 0.0000
Epoch [131/200], Step [200/1200], Loss: 0.0000
Epoch [131/200], Step [300/1200], Loss: 0.0001
Epoch [131/200], Step [400/1200], Loss: 0.0013
Epoch [131/200], Step [500/1200], Loss: 0.0868
Epoch [131/200], Step [600/1200], Loss: 0.0005
Epoch [131/200], Step [700/1200], Loss: 0.0001
Epoch [131/200], Step [800/1200], Loss: 0.0004
Epoch [131/200], Step [900/1200], Loss: 0.0012
Epoch [131/200], Step [1000/1200], Loss: 0.0010
Epoch [131/200], Step [1100/1200], Loss: 0.0000
Epoch [131/200], Step [1200/1200], Loss: 0.0001
Epoch [132/200], Step [100/1200], Loss: 0.0000
Epoch [132/200], Step [200/1200], Loss: 0.0000
Epoch [132/200], Step [300/1200], Loss: 0.0000
Epoch [132/200], Step [400/1200], Loss: 0.0001
Epoch [132/200], Step [500/1200], Loss: 0.0001
Epoch [132/200], Step [600/1200], Loss: 0.0399
Epoch [132/200], Step [700/1200], Loss: 0.0001
Epoch [132/200], Step [800/1200], Loss: 0.0435
Epoch [132/200], Step [900/1200], Loss: 0.0023
Epoch [132/200], Step [1000/1200], Loss: 0.0000
Epoch [132/200], Step [1100/1200], Loss: 0.0001
Epoch [132/200], Step [1200/1200], Loss: 0.0000
Epoch [133/200], Step [100/1200], Loss: 0.0000
Epoch [133/200], Step [200/1200], Loss: 0.0001
Epoch [133/200], Step [300/1200], Loss: 0.0001
Epoch [133/200], Step [400/1200], Loss: 0.0000
Epoch [133/200], Step [500/1200], Loss: 0.0000
Epoch [133/200], Step [600/1200], Loss: 0.0000
Epoch [133/200], Step [700/1200], Loss: 0.0005
Epoch [133/200], Step [800/1200], Loss: 0.0000
Epoch [133/200], Step [900/1200], Loss: 0.0095
Epoch [133/200], Step [1000/1200], Loss: 0.0000
Epoch [133/200], Step [1100/1200], Loss: 0.0002
Epoch [133/200], Step [1200/1200], Loss: 0.0000
Epoch [134/200], Step [100/1200], Loss: 0.0056
Epoch [134/200], Step [200/1200], Loss: 0.0000
Epoch [134/200], Step [300/1200], Loss: 0.0000
Epoch [134/200], Step [400/1200], Loss: 0.0000
Epoch [134/200], Step [500/1200], Loss: 0.0000
Epoch [134/200], Step [600/1200], Loss: 0.0000
Epoch [134/200], Step [700/1200], Loss: 0.0000
Epoch [134/200], Step [800/1200], Loss: 0.0000
Epoch [134/200], Step [900/1200], Loss: 0.0000
Epoch [134/200], Step [1000/1200], Loss: 0.0000
Epoch [134/200], Step [1100/1200], Loss: 0.0000
Epoch [134/200], Step [1200/1200], Loss: 0.0000
Epoch [135/200], Step [100/1200], Loss: 0.0006
Epoch [135/200], Step [200/1200], Loss: 0.0000
Epoch [135/200], Step [300/1200], Loss: 0.0000
Epoch [135/200], Step [400/1200], Loss: 0.0001
Epoch [135/200], Step [500/1200], Loss: 0.0007
Epoch [135/200], Step [600/1200], Loss: 0.0076
Epoch [135/200], Step [700/1200], Loss: 0.0001
Epoch [135/200], Step [800/1200], Loss: 0.0000
Epoch [135/200], Step [900/1200], Loss: 0.0001
Epoch [135/200], Step [1000/1200], Loss: 0.0001
Epoch [135/200], Step [1100/1200], Loss: 0.0027
Epoch [135/200], Step [1200/1200], Loss: 0.0019
Epoch [136/200], Step [100/1200], Loss: 0.0003
Epoch [136/200], Step [200/1200], Loss: 0.0015
Epoch [136/200], Step [300/1200], Loss: 0.0000
Epoch [136/200], Step [400/1200], Loss: 0.0000
Epoch [136/200], Step [500/1200], Loss: 0.0001
Epoch [136/200], Step [600/1200], Loss: 0.0000
Epoch [136/200], Step [700/1200], Loss: 0.0000
Epoch [136/200], Step [800/1200], Loss: 0.0002
Epoch [136/200], Step [900/1200], Loss: 0.0018
Epoch [136/200], Step [1000/1200], Loss: 0.0001
Epoch [136/200], Step [1100/1200], Loss: 0.0018
Epoch [136/200], Step [1200/1200], Loss: 0.0000
Epoch [137/200], Step [100/1200], Loss: 0.0002
Epoch [137/200], Step [200/1200], Loss: 0.0002
Epoch [137/200], Step [300/1200], Loss: 0.0014
Epoch [137/200], Step [400/1200], Loss: 0.0041
Epoch [137/200], Step [500/1200], Loss: 0.0000
Epoch [137/200], Step [600/1200], Loss: 0.0000
Epoch [137/200], Step [700/1200], Loss: 0.0001
Epoch [137/200], Step [800/1200], Loss: 0.0000
Epoch [137/200], Step [900/1200], Loss: 0.0000
Epoch [137/200], Step [1000/1200], Loss: 0.0000
Epoch [137/200], Step [1100/1200], Loss: 0.0000
Epoch [137/200], Step [1200/1200], Loss: 0.0000
Epoch [138/200], Step [100/1200], Loss: 0.0017
Epoch [138/200], Step [200/1200], Loss: 0.0002
Epoch [138/200], Step [300/1200], Loss: 0.0009
Epoch [138/200], Step [400/1200], Loss: 0.0001
Epoch [138/200], Step [500/1200], Loss: 0.0000
Epoch [138/200], Step [600/1200], Loss: 0.0000
Epoch [138/200], Step [700/1200], Loss: 0.0000
Epoch [138/200], Step [800/1200], Loss: 0.0015
Epoch [138/200], Step [900/1200], Loss: 0.0000
Epoch [138/200], Step [1000/1200], Loss: 0.0002
Epoch [138/200], Step [1100/1200], Loss: 0.0008
Epoch [138/200], Step [1200/1200], Loss: 0.0117
Epoch [139/200], Step [100/1200], Loss: 0.0000
Epoch [139/200], Step [200/1200], Loss: 0.0003
Epoch [139/200], Step [300/1200], Loss: 0.0127
Epoch [139/200], Step [400/1200], Loss: 0.0048
Epoch [139/200], Step [500/1200], Loss: 0.0019
Epoch [139/200], Step [600/1200], Loss: 0.0000
Epoch [139/200], Step [700/1200], Loss: 0.0000
Epoch [139/200], Step [800/1200], Loss: 0.0080
Epoch [139/200], Step [900/1200], Loss: 0.0002
Epoch [139/200], Step [1000/1200], Loss: 0.0001
Epoch [139/200], Step [1100/1200], Loss: 0.0000
Epoch [139/200], Step [1200/1200], Loss: 0.0001
Epoch [140/200], Step [100/1200], Loss: 0.0000
Epoch [140/200], Step [200/1200], Loss: 0.0000
Epoch [140/200], Step [300/1200], Loss: 0.0003
Epoch [140/200], Step [400/1200], Loss: 0.0000
Epoch [140/200], Step [500/1200], Loss: 0.0159
Epoch [140/200], Step [600/1200], Loss: 0.0002
Epoch [140/200], Step [700/1200], Loss: 0.0765
Epoch [140/200], Step [800/1200], Loss: 0.0000
Epoch [140/200], Step [900/1200], Loss: 0.0002
Epoch [140/200], Step [1000/1200], Loss: 0.0000
Epoch [140/200], Step [1100/1200], Loss: 0.0000
Epoch [140/200], Step [1200/1200], Loss: 0.0002
Epoch [141/200], Step [100/1200], Loss: 0.0050
Epoch [141/200], Step [200/1200], Loss: 0.0000
Epoch [141/200], Step [300/1200], Loss: 0.0001
Epoch [141/200], Step [400/1200], Loss: 0.0000
Epoch [141/200], Step [500/1200], Loss: 0.0000
Epoch [141/200], Step [600/1200], Loss: 0.0002
Epoch [141/200], Step [700/1200], Loss: 0.0000
Epoch [141/200], Step [800/1200], Loss: 0.0019
Epoch [141/200], Step [900/1200], Loss: 0.0009
Epoch [141/200], Step [1000/1200], Loss: 0.0214
Epoch [141/200], Step [1100/1200], Loss: 0.0003
Epoch [141/200], Step [1200/1200], Loss: 0.0001
Epoch [142/200], Step [100/1200], Loss: 0.0002
Epoch [142/200], Step [200/1200], Loss: 0.0007
Epoch [142/200], Step [300/1200], Loss: 0.0000
Epoch [142/200], Step [400/1200], Loss: 0.0097
Epoch [142/200], Step [500/1200], Loss: 0.0002
Epoch [142/200], Step [600/1200], Loss: 0.0000
Epoch [142/200], Step [700/1200], Loss: 0.0008
Epoch [142/200], Step [800/1200], Loss: 0.1564
Epoch [142/200], Step [900/1200], Loss: 0.0132
Epoch [142/200], Step [1000/1200], Loss: 0.0001
Epoch [142/200], Step [1100/1200], Loss: 0.0000
Epoch [142/200], Step [1200/1200], Loss: 0.0000
Epoch [143/200], Step [100/1200], Loss: 0.0003
Epoch [143/200], Step [200/1200], Loss: 0.0000
Epoch [143/200], Step [300/1200], Loss: 0.0000
Epoch [143/200], Step [400/1200], Loss: 0.0000
Epoch [143/200], Step [500/1200], Loss: 0.0000
Epoch [143/200], Step [600/1200], Loss: 0.0004
Epoch [143/200], Step [700/1200], Loss: 0.0000
Epoch [143/200], Step [800/1200], Loss: 0.0000
Epoch [143/200], Step [900/1200], Loss: 0.0000
Epoch [143/200], Step [1000/1200], Loss: 0.0000
Epoch [143/200], Step [1100/1200], Loss: 0.0000
Epoch [143/200], Step [1200/1200], Loss: 0.0001
Epoch [144/200], Step [100/1200], Loss: 0.0000
Epoch [144/200], Step [200/1200], Loss: 0.0005
Epoch [144/200], Step [300/1200], Loss: 0.0060
Epoch [144/200], Step [400/1200], Loss: 0.0000
Epoch [144/200], Step [500/1200], Loss: 0.0000
Epoch [144/200], Step [600/1200], Loss: 0.0002
Epoch [144/200], Step [700/1200], Loss: 0.0003
Epoch [144/200], Step [800/1200], Loss: 0.0002
Epoch [144/200], Step [900/1200], Loss: 0.0002
Epoch [144/200], Step [1000/1200], Loss: 0.0000
Epoch [144/200], Step [1100/1200], Loss: 0.0000
Epoch [144/200], Step [1200/1200], Loss: 0.0002
Epoch [145/200], Step [100/1200], Loss: 0.0000
Epoch [145/200], Step [200/1200], Loss: 0.0007
Epoch [145/200], Step [300/1200], Loss: 0.0000
Epoch [145/200], Step [400/1200], Loss: 0.0238
Epoch [145/200], Step [500/1200], Loss: 0.0007
Epoch [145/200], Step [600/1200], Loss: 0.0070
Epoch [145/200], Step [700/1200], Loss: 0.0000
Epoch [145/200], Step [800/1200], Loss: 0.0000
Epoch [145/200], Step [900/1200], Loss: 0.0000
Epoch [145/200], Step [1000/1200], Loss: 0.0030
Epoch [145/200], Step [1100/1200], Loss: 0.0103
Epoch [145/200], Step [1200/1200], Loss: 0.0001
Epoch [146/200], Step [100/1200], Loss: 0.0000
Epoch [146/200], Step [200/1200], Loss: 0.0185
Epoch [146/200], Step [300/1200], Loss: 0.0002
Epoch [146/200], Step [400/1200], Loss: 0.0003
Epoch [146/200], Step [500/1200], Loss: 0.0085
Epoch [146/200], Step [600/1200], Loss: 0.0007
Epoch [146/200], Step [700/1200], Loss: 0.0000
Epoch [146/200], Step [800/1200], Loss: 0.0002
Epoch [146/200], Step [900/1200], Loss: 0.0052
Epoch [146/200], Step [1000/1200], Loss: 0.0000
Epoch [146/200], Step [1100/1200], Loss: 0.0129
Epoch [146/200], Step [1200/1200], Loss: 0.0005
Epoch [147/200], Step [100/1200], Loss: 0.0000
Epoch [147/200], Step [200/1200], Loss: 0.0000
Epoch [147/200], Step [300/1200], Loss: 0.0000
Epoch [147/200], Step [400/1200], Loss: 0.0000
Epoch [147/200], Step [500/1200], Loss: 0.0000
Epoch [147/200], Step [600/1200], Loss: 0.0000
Epoch [147/200], Step [700/1200], Loss: 0.0067
Epoch [147/200], Step [800/1200], Loss: 0.0892
Epoch [147/200], Step [900/1200], Loss: 0.0000
Epoch [147/200], Step [1000/1200], Loss: 0.0158
Epoch [147/200], Step [1100/1200], Loss: 0.0000
Epoch [147/200], Step [1200/1200], Loss: 0.0000
Epoch [148/200], Step [100/1200], Loss: 0.0000
Epoch [148/200], Step [200/1200], Loss: 0.0000
Epoch [148/200], Step [300/1200], Loss: 0.0016
Epoch [148/200], Step [400/1200], Loss: 0.0043
Epoch [148/200], Step [500/1200], Loss: 0.0001
Epoch [148/200], Step [600/1200], Loss: 0.0112
Epoch [148/200], Step [700/1200], Loss: 0.0007
Epoch [148/200], Step [800/1200], Loss: 0.0059
Epoch [148/200], Step [900/1200], Loss: 0.0000
Epoch [148/200], Step [1000/1200], Loss: 0.0005
Epoch [148/200], Step [1100/1200], Loss: 0.0004
Epoch [148/200], Step [1200/1200], Loss: 0.0004
Epoch [149/200], Step [100/1200], Loss: 0.0000
Epoch [149/200], Step [200/1200], Loss: 0.0000
Epoch [149/200], Step [300/1200], Loss: 0.0000
Epoch [149/200], Step [400/1200], Loss: 0.0000
Epoch [149/200], Step [500/1200], Loss: 0.0000
Epoch [149/200], Step [600/1200], Loss: 0.0003
Epoch [149/200], Step [700/1200], Loss: 0.2010
Epoch [149/200], Step [800/1200], Loss: 0.0000
Epoch [149/200], Step [900/1200], Loss: 0.0002
Epoch [149/200], Step [1000/1200], Loss: 0.0008
Epoch [149/200], Step [1100/1200], Loss: 0.0002
Epoch [149/200], Step [1200/1200], Loss: 0.0013
Epoch [150/200], Step [100/1200], Loss: 0.0007
Epoch [150/200], Step [200/1200], Loss: 0.0002
Epoch [150/200], Step [300/1200], Loss: 0.0003
Epoch [150/200], Step [400/1200], Loss: 0.0006
Epoch [150/200], Step [500/1200], Loss: 0.0001
Epoch [150/200], Step [600/1200], Loss: 0.0007
Epoch [150/200], Step [700/1200], Loss: 0.0016
Epoch [150/200], Step [800/1200], Loss: 0.0000
Epoch [150/200], Step [900/1200], Loss: 0.0261
Epoch [150/200], Step [1000/1200], Loss: 0.0000
Epoch [150/200], Step [1100/1200], Loss: 0.0000
Epoch [150/200], Step [1200/1200], Loss: 0.0000
Epoch [151/200], Step [100/1200], Loss: 0.0000
Epoch [151/200], Step [200/1200], Loss: 0.0083
Epoch [151/200], Step [300/1200], Loss: 0.0000
Epoch [151/200], Step [400/1200], Loss: 0.0002
Epoch [151/200], Step [500/1200], Loss: 0.0012
Epoch [151/200], Step [600/1200], Loss: 0.1034
Epoch [151/200], Step [700/1200], Loss: 0.0001
Epoch [151/200], Step [800/1200], Loss: 0.0000
Epoch [151/200], Step [900/1200], Loss: 0.0000
Epoch [151/200], Step [1000/1200], Loss: 0.0152
Epoch [151/200], Step [1100/1200], Loss: 0.0000
Epoch [151/200], Step [1200/1200], Loss: 0.0000
Epoch [152/200], Step [100/1200], Loss: 0.0001
Epoch [152/200], Step [200/1200], Loss: 0.0000
Epoch [152/200], Step [300/1200], Loss: 0.0000
Epoch [152/200], Step [400/1200], Loss: 0.0016
Epoch [152/200], Step [500/1200], Loss: 0.0001
Epoch [152/200], Step [600/1200], Loss: 0.0001
Epoch [152/200], Step [700/1200], Loss: 0.0000
Epoch [152/200], Step [800/1200], Loss: 0.0005
Epoch [152/200], Step [900/1200], Loss: 0.0000
Epoch [152/200], Step [1000/1200], Loss: 0.0002
Epoch [152/200], Step [1100/1200], Loss: 0.0000
Epoch [152/200], Step [1200/1200], Loss: 0.0025
Epoch [153/200], Step [100/1200], Loss: 0.0000
Epoch [153/200], Step [200/1200], Loss: 0.0000
Epoch [153/200], Step [300/1200], Loss: 0.0000
Epoch [153/200], Step [400/1200], Loss: 0.0000
Epoch [153/200], Step [500/1200], Loss: 0.0000
Epoch [153/200], Step [600/1200], Loss: 0.0052
Epoch [153/200], Step [700/1200], Loss: 0.0000
Epoch [153/200], Step [800/1200], Loss: 0.0009
Epoch [153/200], Step [900/1200], Loss: 0.0000
Epoch [153/200], Step [1000/1200], Loss: 0.0000
Epoch [153/200], Step [1100/1200], Loss: 0.0001
Epoch [153/200], Step [1200/1200], Loss: 0.0001
Epoch [154/200], Step [100/1200], Loss: 0.0003
Epoch [154/200], Step [200/1200], Loss: 0.0119
Epoch [154/200], Step [300/1200], Loss: 0.0064
Epoch [154/200], Step [400/1200], Loss: 0.0020
Epoch [154/200], Step [500/1200], Loss: 0.0000
Epoch [154/200], Step [600/1200], Loss: 0.0011
Epoch [154/200], Step [700/1200], Loss: 0.0001
Epoch [154/200], Step [800/1200], Loss: 0.0000
Epoch [154/200], Step [900/1200], Loss: 0.0015
Epoch [154/200], Step [1000/1200], Loss: 0.0000
Epoch [154/200], Step [1100/1200], Loss: 0.0000
Epoch [154/200], Step [1200/1200], Loss: 0.0000
Epoch [155/200], Step [100/1200], Loss: 0.0165
Epoch [155/200], Step [200/1200], Loss: 0.0000
Epoch [155/200], Step [300/1200], Loss: 0.0001
Epoch [155/200], Step [400/1200], Loss: 0.0001
Epoch [155/200], Step [500/1200], Loss: 0.0000
Epoch [155/200], Step [600/1200], Loss: 0.0002
Epoch [155/200], Step [700/1200], Loss: 0.0000
Epoch [155/200], Step [800/1200], Loss: 0.0001
Epoch [155/200], Step [900/1200], Loss: 0.0000
Epoch [155/200], Step [1000/1200], Loss: 0.0003
Epoch [155/200], Step [1100/1200], Loss: 0.0000
Epoch [155/200], Step [1200/1200], Loss: 0.0013
Epoch [156/200], Step [100/1200], Loss: 0.0447
Epoch [156/200], Step [200/1200], Loss: 0.0000
Epoch [156/200], Step [300/1200], Loss: 0.0000
Epoch [156/200], Step [400/1200], Loss: 0.0003
Epoch [156/200], Step [500/1200], Loss: 0.0000
Epoch [156/200], Step [600/1200], Loss: 0.0000
Epoch [156/200], Step [700/1200], Loss: 0.0000
Epoch [156/200], Step [800/1200], Loss: 0.0001
Epoch [156/200], Step [900/1200], Loss: 0.0000
Epoch [156/200], Step [1000/1200], Loss: 0.0000
Epoch [156/200], Step [1100/1200], Loss: 0.0000
Epoch [156/200], Step [1200/1200], Loss: 0.0001
Epoch [157/200], Step [100/1200], Loss: 0.0023
Epoch [157/200], Step [200/1200], Loss: 0.0000
Epoch [157/200], Step [300/1200], Loss: 0.0044
Epoch [157/200], Step [400/1200], Loss: 0.0002
Epoch [157/200], Step [500/1200], Loss: 0.0142
Epoch [157/200], Step [600/1200], Loss: 0.0000
Epoch [157/200], Step [700/1200], Loss: 0.0002
Epoch [157/200], Step [800/1200], Loss: 0.0000
Epoch [157/200], Step [900/1200], Loss: 0.0000
Epoch [157/200], Step [1000/1200], Loss: 0.0003
Epoch [157/200], Step [1100/1200], Loss: 0.0002
Epoch [157/200], Step [1200/1200], Loss: 0.0000
Epoch [158/200], Step [100/1200], Loss: 0.0000
Epoch [158/200], Step [200/1200], Loss: 0.0000
Epoch [158/200], Step [300/1200], Loss: 0.0000
Epoch [158/200], Step [400/1200], Loss: 0.0035
Epoch [158/200], Step [500/1200], Loss: 0.0043
Epoch [158/200], Step [600/1200], Loss: 0.0000
Epoch [158/200], Step [700/1200], Loss: 0.0000
Epoch [158/200], Step [800/1200], Loss: 0.0001
Epoch [158/200], Step [900/1200], Loss: 0.0000
Epoch [158/200], Step [1000/1200], Loss: 0.0000
Epoch [158/200], Step [1100/1200], Loss: 0.0276
Epoch [158/200], Step [1200/1200], Loss: 0.0000
Epoch [159/200], Step [100/1200], Loss: 0.0058
Epoch [159/200], Step [200/1200], Loss: 0.0000
Epoch [159/200], Step [300/1200], Loss: 0.0000
Epoch [159/200], Step [400/1200], Loss: 0.0073
Epoch [159/200], Step [500/1200], Loss: 0.0150
Epoch [159/200], Step [600/1200], Loss: 0.0001
Epoch [159/200], Step [700/1200], Loss: 0.0005
Epoch [159/200], Step [800/1200], Loss: 0.0013
Epoch [159/200], Step [900/1200], Loss: 0.0000
Epoch [159/200], Step [1000/1200], Loss: 0.0001
Epoch [159/200], Step [1100/1200], Loss: 0.0013
Epoch [159/200], Step [1200/1200], Loss: 0.0001
Epoch [160/200], Step [100/1200], Loss: 0.0000
Epoch [160/200], Step [200/1200], Loss: 0.0000
Epoch [160/200], Step [300/1200], Loss: 0.0001
Epoch [160/200], Step [400/1200], Loss: 0.0000
Epoch [160/200], Step [500/1200], Loss: 0.0000
Epoch [160/200], Step [600/1200], Loss: 0.0001
Epoch [160/200], Step [700/1200], Loss: 0.0000
Epoch [160/200], Step [800/1200], Loss: 0.0001
Epoch [160/200], Step [900/1200], Loss: 0.0000
Epoch [160/200], Step [1000/1200], Loss: 0.0000
Epoch [160/200], Step [1100/1200], Loss: 0.0000
Epoch [160/200], Step [1200/1200], Loss: 0.0080
Epoch [161/200], Step [100/1200], Loss: 0.0000
Epoch [161/200], Step [200/1200], Loss: 0.0014
Epoch [161/200], Step [300/1200], Loss: 0.0009
Epoch [161/200], Step [400/1200], Loss: 0.0001
Epoch [161/200], Step [500/1200], Loss: 0.0000
Epoch [161/200], Step [600/1200], Loss: 0.0000
Epoch [161/200], Step [700/1200], Loss: 0.0002
Epoch [161/200], Step [800/1200], Loss: 0.0000
Epoch [161/200], Step [900/1200], Loss: 0.0000
Epoch [161/200], Step [1000/1200], Loss: 0.0033
Epoch [161/200], Step [1100/1200], Loss: 0.0000
Epoch [161/200], Step [1200/1200], Loss: 0.0002
Epoch [162/200], Step [100/1200], Loss: 0.0417
Epoch [162/200], Step [200/1200], Loss: 0.0000
Epoch [162/200], Step [300/1200], Loss: 0.0000
Epoch [162/200], Step [400/1200], Loss: 0.0001
Epoch [162/200], Step [500/1200], Loss: 0.0156
Epoch [162/200], Step [600/1200], Loss: 0.0000
Epoch [162/200], Step [700/1200], Loss: 0.0001
Epoch [162/200], Step [800/1200], Loss: 0.0000
Epoch [162/200], Step [900/1200], Loss: 0.0008
Epoch [162/200], Step [1000/1200], Loss: 0.0008
Epoch [162/200], Step [1100/1200], Loss: 0.0004
Epoch [162/200], Step [1200/1200], Loss: 0.0000
Epoch [163/200], Step [100/1200], Loss: 0.0000
Epoch [163/200], Step [200/1200], Loss: 0.0001
Epoch [163/200], Step [300/1200], Loss: 0.0000
Epoch [163/200], Step [400/1200], Loss: 0.0000
Epoch [163/200], Step [500/1200], Loss: 0.0003
Epoch [163/200], Step [600/1200], Loss: 0.0000
Epoch [163/200], Step [700/1200], Loss: 0.0057
Epoch [163/200], Step [800/1200], Loss: 0.0000
Epoch [163/200], Step [900/1200], Loss: 0.0009
Epoch [163/200], Step [1000/1200], Loss: 0.0000
Epoch [163/200], Step [1100/1200], Loss: 0.0041
Epoch [163/200], Step [1200/1200], Loss: 0.0004
Epoch [164/200], Step [100/1200], Loss: 0.0000
Epoch [164/200], Step [200/1200], Loss: 0.0000
Epoch [164/200], Step [300/1200], Loss: 0.0002
Epoch [164/200], Step [400/1200], Loss: 0.0000
Epoch [164/200], Step [500/1200], Loss: 0.0000
Epoch [164/200], Step [600/1200], Loss: 0.0000
Epoch [164/200], Step [700/1200], Loss: 0.0006
Epoch [164/200], Step [800/1200], Loss: 0.0014
Epoch [164/200], Step [900/1200], Loss: 0.0002
Epoch [164/200], Step [1000/1200], Loss: 0.0002
Epoch [164/200], Step [1100/1200], Loss: 0.0000
Epoch [164/200], Step [1200/1200], Loss: 0.0000
Epoch [165/200], Step [100/1200], Loss: 0.0002
Epoch [165/200], Step [200/1200], Loss: 0.0107
Epoch [165/200], Step [300/1200], Loss: 0.0000
Epoch [165/200], Step [400/1200], Loss: 0.0002
Epoch [165/200], Step [500/1200], Loss: 0.0001
Epoch [165/200], Step [600/1200], Loss: 0.0000
Epoch [165/200], Step [700/1200], Loss: 0.0140
Epoch [165/200], Step [800/1200], Loss: 0.0000
Epoch [165/200], Step [900/1200], Loss: 0.0000
Epoch [165/200], Step [1000/1200], Loss: 0.0000
Epoch [165/200], Step [1100/1200], Loss: 0.0000
Epoch [165/200], Step [1200/1200], Loss: 0.0000
Epoch [166/200], Step [100/1200], Loss: 0.0000
Epoch [166/200], Step [200/1200], Loss: 0.0001
Epoch [166/200], Step [300/1200], Loss: 0.0000
Epoch [166/200], Step [400/1200], Loss: 0.0000
Epoch [166/200], Step [500/1200], Loss: 0.0001
Epoch [166/200], Step [600/1200], Loss: 0.0000
Epoch [166/200], Step [700/1200], Loss: 0.0000
Epoch [166/200], Step [800/1200], Loss: 0.0000
Epoch [166/200], Step [900/1200], Loss: 0.0000
Epoch [166/200], Step [1000/1200], Loss: 0.0000
Epoch [166/200], Step [1100/1200], Loss: 0.0036
Epoch [166/200], Step [1200/1200], Loss: 0.0003
Epoch [167/200], Step [100/1200], Loss: 0.0042
Epoch [167/200], Step [200/1200], Loss: 0.0000
Epoch [167/200], Step [300/1200], Loss: 0.0000
Epoch [167/200], Step [400/1200], Loss: 0.0024
Epoch [167/200], Step [500/1200], Loss: 0.0000
Epoch [167/200], Step [600/1200], Loss: 0.0000
Epoch [167/200], Step [700/1200], Loss: 0.0014
Epoch [167/200], Step [800/1200], Loss: 0.0000
Epoch [167/200], Step [900/1200], Loss: 0.0301
Epoch [167/200], Step [1000/1200], Loss: 0.0001
Epoch [167/200], Step [1100/1200], Loss: 0.0000
Epoch [167/200], Step [1200/1200], Loss: 0.0003
Epoch [168/200], Step [100/1200], Loss: 0.0000
Epoch [168/200], Step [200/1200], Loss: 0.0001
Epoch [168/200], Step [300/1200], Loss: 0.0000
Epoch [168/200], Step [400/1200], Loss: 0.0001
Epoch [168/200], Step [500/1200], Loss: 0.0000
Epoch [168/200], Step [600/1200], Loss: 0.0000
Epoch [168/200], Step [700/1200], Loss: 0.0080
Epoch [168/200], Step [800/1200], Loss: 0.0000
Epoch [168/200], Step [900/1200], Loss: 0.0000
Epoch [168/200], Step [1000/1200], Loss: 0.0000
Epoch [168/200], Step [1100/1200], Loss: 0.0000
Epoch [168/200], Step [1200/1200], Loss: 0.0000
Epoch [169/200], Step [100/1200], Loss: 0.0000
Epoch [169/200], Step [200/1200], Loss: 0.0001
Epoch [169/200], Step [300/1200], Loss: 0.0023
Epoch [169/200], Step [400/1200], Loss: 0.0013
Epoch [169/200], Step [500/1200], Loss: 0.0000
Epoch [169/200], Step [600/1200], Loss: 0.0002
Epoch [169/200], Step [700/1200], Loss: 0.0000
Epoch [169/200], Step [800/1200], Loss: 0.0001
Epoch [169/200], Step [900/1200], Loss: 0.0000
Epoch [169/200], Step [1000/1200], Loss: 0.0000
Epoch [169/200], Step [1100/1200], Loss: 0.0073
Epoch [169/200], Step [1200/1200], Loss: 0.0000
Epoch [170/200], Step [100/1200], Loss: 0.0402
Epoch [170/200], Step [200/1200], Loss: 0.0002
Epoch [170/200], Step [300/1200], Loss: 0.0005
Epoch [170/200], Step [400/1200], Loss: 0.0001
Epoch [170/200], Step [500/1200], Loss: 0.0008
Epoch [170/200], Step [600/1200], Loss: 0.0039
Epoch [170/200], Step [700/1200], Loss: 0.0022
Epoch [170/200], Step [800/1200], Loss: 0.0000
Epoch [170/200], Step [900/1200], Loss: 0.0000
Epoch [170/200], Step [1000/1200], Loss: 0.0002
Epoch [170/200], Step [1100/1200], Loss: 0.0004
Epoch [170/200], Step [1200/1200], Loss: 0.0000
Epoch [171/200], Step [100/1200], Loss: 0.0000
Epoch [171/200], Step [200/1200], Loss: 0.0001
Epoch [171/200], Step [300/1200], Loss: 0.0030
Epoch [171/200], Step [400/1200], Loss: 0.0000
Epoch [171/200], Step [500/1200], Loss: 0.0000
Epoch [171/200], Step [600/1200], Loss: 0.0056
Epoch [171/200], Step [700/1200], Loss: 0.0002
Epoch [171/200], Step [800/1200], Loss: 0.0021
Epoch [171/200], Step [900/1200], Loss: 0.0329
Epoch [171/200], Step [1000/1200], Loss: 0.0000
Epoch [171/200], Step [1100/1200], Loss: 0.0007
Epoch [171/200], Step [1200/1200], Loss: 0.0009
Epoch [172/200], Step [100/1200], Loss: 0.0000
Epoch [172/200], Step [200/1200], Loss: 0.0000
Epoch [172/200], Step [300/1200], Loss: 0.0002
Epoch [172/200], Step [400/1200], Loss: 0.0004
Epoch [172/200], Step [500/1200], Loss: 0.0002
Epoch [172/200], Step [600/1200], Loss: 0.0817
Epoch [172/200], Step [700/1200], Loss: 0.0000
Epoch [172/200], Step [800/1200], Loss: 0.0001
Epoch [172/200], Step [900/1200], Loss: 0.0000
Epoch [172/200], Step [1000/1200], Loss: 0.0062
Epoch [172/200], Step [1100/1200], Loss: 0.0001
Epoch [172/200], Step [1200/1200], Loss: 0.0001
Epoch [173/200], Step [100/1200], Loss: 0.0003
Epoch [173/200], Step [200/1200], Loss: 0.0000
Epoch [173/200], Step [300/1200], Loss: 0.0000
Epoch [173/200], Step [400/1200], Loss: 0.0001
Epoch [173/200], Step [500/1200], Loss: 0.0002
Epoch [173/200], Step [600/1200], Loss: 0.0061
Epoch [173/200], Step [700/1200], Loss: 0.0000
Epoch [173/200], Step [800/1200], Loss: 0.0001
Epoch [173/200], Step [900/1200], Loss: 0.0070
Epoch [173/200], Step [1000/1200], Loss: 0.0000
Epoch [173/200], Step [1100/1200], Loss: 0.0000
Epoch [173/200], Step [1200/1200], Loss: 0.0000
Epoch [174/200], Step [100/1200], Loss: 0.0000
Epoch [174/200], Step [200/1200], Loss: 0.0000
Epoch [174/200], Step [300/1200], Loss: 0.0001
Epoch [174/200], Step [400/1200], Loss: 0.0000
Epoch [174/200], Step [500/1200], Loss: 0.0001
Epoch [174/200], Step [600/1200], Loss: 0.0000
Epoch [174/200], Step [700/1200], Loss: 0.0001
Epoch [174/200], Step [800/1200], Loss: 0.0000
Epoch [174/200], Step [900/1200], Loss: 0.0047
Epoch [174/200], Step [1000/1200], Loss: 0.0005
Epoch [174/200], Step [1100/1200], Loss: 0.0015
Epoch [174/200], Step [1200/1200], Loss: 0.0000
Epoch [175/200], Step [100/1200], Loss: 0.0004
Epoch [175/200], Step [200/1200], Loss: 0.0000
Epoch [175/200], Step [300/1200], Loss: 0.0003
Epoch [175/200], Step [400/1200], Loss: 0.0012
Epoch [175/200], Step [500/1200], Loss: 0.0000
Epoch [175/200], Step [600/1200], Loss: 0.0001
Epoch [175/200], Step [700/1200], Loss: 0.0000
Epoch [175/200], Step [800/1200], Loss: 0.0004
Epoch [175/200], Step [900/1200], Loss: 0.0001
Epoch [175/200], Step [1000/1200], Loss: 0.0000
Epoch [175/200], Step [1100/1200], Loss: 0.0001
Epoch [175/200], Step [1200/1200], Loss: 0.0012
Epoch [176/200], Step [100/1200], Loss: 0.0000
Epoch [176/200], Step [200/1200], Loss: 0.0002
Epoch [176/200], Step [300/1200], Loss: 0.0000
Epoch [176/200], Step [400/1200], Loss: 0.0000
Epoch [176/200], Step [500/1200], Loss: 0.0000
Epoch [176/200], Step [600/1200], Loss: 0.0000
Epoch [176/200], Step [700/1200], Loss: 0.0000
Epoch [176/200], Step [800/1200], Loss: 0.0012
Epoch [176/200], Step [900/1200], Loss: 0.0002
Epoch [176/200], Step [1000/1200], Loss: 0.0001
Epoch [176/200], Step [1100/1200], Loss: 0.0000
Epoch [176/200], Step [1200/1200], Loss: 0.0009
Epoch [177/200], Step [100/1200], Loss: 0.0000
Epoch [177/200], Step [200/1200], Loss: 0.0025
Epoch [177/200], Step [300/1200], Loss: 0.0000
Epoch [177/200], Step [400/1200], Loss: 0.0005
Epoch [177/200], Step [500/1200], Loss: 0.0000
Epoch [177/200], Step [600/1200], Loss: 0.0001
Epoch [177/200], Step [700/1200], Loss: 0.0000
Epoch [177/200], Step [800/1200], Loss: 0.0060
Epoch [177/200], Step [900/1200], Loss: 0.0008
Epoch [177/200], Step [1000/1200], Loss: 0.0000
Epoch [177/200], Step [1100/1200], Loss: 0.0000
Epoch [177/200], Step [1200/1200], Loss: 0.0002
Epoch [178/200], Step [100/1200], Loss: 0.0000
Epoch [178/200], Step [200/1200], Loss: 0.2007
Epoch [178/200], Step [300/1200], Loss: 0.0064
Epoch [178/200], Step [400/1200], Loss: 0.0023
Epoch [178/200], Step [500/1200], Loss: 0.0001
Epoch [178/200], Step [600/1200], Loss: 0.0001
Epoch [178/200], Step [700/1200], Loss: 0.0000
Epoch [178/200], Step [800/1200], Loss: 0.0001
Epoch [178/200], Step [900/1200], Loss: 0.0000
Epoch [178/200], Step [1000/1200], Loss: 0.0000
Epoch [178/200], Step [1100/1200], Loss: 0.0096
Epoch [178/200], Step [1200/1200], Loss: 0.0003
Epoch [179/200], Step [100/1200], Loss: 0.0000
Epoch [179/200], Step [200/1200], Loss: 0.0000
Epoch [179/200], Step [300/1200], Loss: 0.0029
Epoch [179/200], Step [400/1200], Loss: 0.0007
Epoch [179/200], Step [500/1200], Loss: 0.0000
Epoch [179/200], Step [600/1200], Loss: 0.0000
Epoch [179/200], Step [700/1200], Loss: 0.0001
Epoch [179/200], Step [800/1200], Loss: 0.0000
Epoch [179/200], Step [900/1200], Loss: 0.0000
Epoch [179/200], Step [1000/1200], Loss: 0.0000
Epoch [179/200], Step [1100/1200], Loss: 0.0000
Epoch [179/200], Step [1200/1200], Loss: 0.0346
Epoch [180/200], Step [100/1200], Loss: 0.0001
Epoch [180/200], Step [200/1200], Loss: 0.0011
Epoch [180/200], Step [300/1200], Loss: 0.0001
Epoch [180/200], Step [400/1200], Loss: 0.0000
Epoch [180/200], Step [500/1200], Loss: 0.0001
Epoch [180/200], Step [600/1200], Loss: 0.0000
Epoch [180/200], Step [700/1200], Loss: 0.0000
Epoch [180/200], Step [800/1200], Loss: 0.0000
Epoch [180/200], Step [900/1200], Loss: 0.0001
Epoch [180/200], Step [1000/1200], Loss: 0.0000
Epoch [180/200], Step [1100/1200], Loss: 0.0000
Epoch [180/200], Step [1200/1200], Loss: 0.0001
Epoch [181/200], Step [100/1200], Loss: 0.0731
Epoch [181/200], Step [200/1200], Loss: 0.0000
Epoch [181/200], Step [300/1200], Loss: 0.0001
Epoch [181/200], Step [400/1200], Loss: 0.0001
Epoch [181/200], Step [500/1200], Loss: 0.0005
Epoch [181/200], Step [600/1200], Loss: 0.0000
Epoch [181/200], Step [700/1200], Loss: 0.0000
Epoch [181/200], Step [800/1200], Loss: 0.0000
Epoch [181/200], Step [900/1200], Loss: 0.0000
Epoch [181/200], Step [1000/1200], Loss: 0.0000
Epoch [181/200], Step [1100/1200], Loss: 0.0000
Epoch [181/200], Step [1200/1200], Loss: 0.0000
Epoch [182/200], Step [100/1200], Loss: 0.0019
Epoch [182/200], Step [200/1200], Loss: 0.0000
Epoch [182/200], Step [300/1200], Loss: 0.0000
Epoch [182/200], Step [400/1200], Loss: 0.0003
Epoch [182/200], Step [500/1200], Loss: 0.0000
Epoch [182/200], Step [600/1200], Loss: 0.0000
Epoch [182/200], Step [700/1200], Loss: 0.0000
Epoch [182/200], Step [800/1200], Loss: 0.0010
Epoch [182/200], Step [900/1200], Loss: 0.0006
Epoch [182/200], Step [1000/1200], Loss: 0.0006
Epoch [182/200], Step [1100/1200], Loss: 0.0000
Epoch [182/200], Step [1200/1200], Loss: 0.0000
Epoch [183/200], Step [100/1200], Loss: 0.0000
Epoch [183/200], Step [200/1200], Loss: 0.0000
Epoch [183/200], Step [300/1200], Loss: 0.0000
Epoch [183/200], Step [400/1200], Loss: 0.0005
Epoch [183/200], Step [500/1200], Loss: 0.0294
Epoch [183/200], Step [600/1200], Loss: 0.0002
Epoch [183/200], Step [700/1200], Loss: 0.0005
Epoch [183/200], Step [800/1200], Loss: 0.0000
Epoch [183/200], Step [900/1200], Loss: 0.0015
Epoch [183/200], Step [1000/1200], Loss: 0.0000
Epoch [183/200], Step [1100/1200], Loss: 0.0002
Epoch [183/200], Step [1200/1200], Loss: 0.0001
Epoch [184/200], Step [100/1200], Loss: 0.0002
Epoch [184/200], Step [200/1200], Loss: 0.0000
Epoch [184/200], Step [300/1200], Loss: 0.0091
Epoch [184/200], Step [400/1200], Loss: 0.0000
Epoch [184/200], Step [500/1200], Loss: 0.0000
Epoch [184/200], Step [600/1200], Loss: 0.0001
Epoch [184/200], Step [700/1200], Loss: 0.0012
Epoch [184/200], Step [800/1200], Loss: 0.0000
Epoch [184/200], Step [900/1200], Loss: 0.0023
Epoch [184/200], Step [1000/1200], Loss: 0.0003
Epoch [184/200], Step [1100/1200], Loss: 0.0638
Epoch [184/200], Step [1200/1200], Loss: 0.1007
Epoch [185/200], Step [100/1200], Loss: 0.0057
Epoch [185/200], Step [200/1200], Loss: 0.0000
Epoch [185/200], Step [300/1200], Loss: 0.0008
Epoch [185/200], Step [400/1200], Loss: 0.0000
Epoch [185/200], Step [500/1200], Loss: 0.0004
Epoch [185/200], Step [600/1200], Loss: 0.0000
Epoch [185/200], Step [700/1200], Loss: 0.0000
Epoch [185/200], Step [800/1200], Loss: 0.0051
Epoch [185/200], Step [900/1200], Loss: 0.0023
Epoch [185/200], Step [1000/1200], Loss: 0.0000
Epoch [185/200], Step [1100/1200], Loss: 0.0002
Epoch [185/200], Step [1200/1200], Loss: 0.0000
Epoch [186/200], Step [100/1200], Loss: 0.0000
Epoch [186/200], Step [200/1200], Loss: 0.0001
Epoch [186/200], Step [300/1200], Loss: 0.0004
Epoch [186/200], Step [400/1200], Loss: 0.0000
Epoch [186/200], Step [500/1200], Loss: 0.0000
Epoch [186/200], Step [600/1200], Loss: 0.0001
Epoch [186/200], Step [700/1200], Loss: 0.0000
Epoch [186/200], Step [800/1200], Loss: 0.0001
Epoch [186/200], Step [900/1200], Loss: 0.0060
Epoch [186/200], Step [1000/1200], Loss: 0.0000
Epoch [186/200], Step [1100/1200], Loss: 0.0001
Epoch [186/200], Step [1200/1200], Loss: 0.0002
Epoch [187/200], Step [100/1200], Loss: 0.0000
Epoch [187/200], Step [200/1200], Loss: 0.0000
Epoch [187/200], Step [300/1200], Loss: 0.0000
Epoch [187/200], Step [400/1200], Loss: 0.0000
Epoch [187/200], Step [500/1200], Loss: 0.0015
Epoch [187/200], Step [600/1200], Loss: 0.0001
Epoch [187/200], Step [700/1200], Loss: 0.0000
Epoch [187/200], Step [800/1200], Loss: 0.0001
Epoch [187/200], Step [900/1200], Loss: 0.0000
Epoch [187/200], Step [1000/1200], Loss: 0.0000
Epoch [187/200], Step [1100/1200], Loss: 0.0001
Epoch [187/200], Step [1200/1200], Loss: 0.0000
Epoch [188/200], Step [100/1200], Loss: 0.0000
Epoch [188/200], Step [200/1200], Loss: 0.0002
Epoch [188/200], Step [300/1200], Loss: 0.0012
Epoch [188/200], Step [400/1200], Loss: 0.0000
Epoch [188/200], Step [500/1200], Loss: 0.0000
Epoch [188/200], Step [600/1200], Loss: 0.0024
Epoch [188/200], Step [700/1200], Loss: 0.0000
Epoch [188/200], Step [800/1200], Loss: 0.0000
Epoch [188/200], Step [900/1200], Loss: 0.0005
Epoch [188/200], Step [1000/1200], Loss: 0.0000
Epoch [188/200], Step [1100/1200], Loss: 0.0001
Epoch [188/200], Step [1200/1200], Loss: 0.0003
Epoch [189/200], Step [100/1200], Loss: 0.0000
Epoch [189/200], Step [200/1200], Loss: 0.0006
Epoch [189/200], Step [300/1200], Loss: 0.0001
Epoch [189/200], Step [400/1200], Loss: 0.0000
Epoch [189/200], Step [500/1200], Loss: 0.0002
Epoch [189/200], Step [600/1200], Loss: 0.0000
Epoch [189/200], Step [700/1200], Loss: 0.0001
Epoch [189/200], Step [800/1200], Loss: 0.0004
Epoch [189/200], Step [900/1200], Loss: 0.0000
Epoch [189/200], Step [1000/1200], Loss: 0.0000
Epoch [189/200], Step [1100/1200], Loss: 0.0000
Epoch [189/200], Step [1200/1200], Loss: 0.0000
Epoch [190/200], Step [100/1200], Loss: 0.0000
Epoch [190/200], Step [200/1200], Loss: 0.0000
Epoch [190/200], Step [300/1200], Loss: 0.0000
Epoch [190/200], Step [400/1200], Loss: 0.0000
Epoch [190/200], Step [500/1200], Loss: 0.0000
Epoch [190/200], Step [600/1200], Loss: 0.0000
Epoch [190/200], Step [700/1200], Loss: 0.0000
Epoch [190/200], Step [800/1200], Loss: 0.0000
Epoch [190/200], Step [900/1200], Loss: 0.0000
Epoch [190/200], Step [1000/1200], Loss: 0.0000
Epoch [190/200], Step [1100/1200], Loss: 0.0000
Epoch [190/200], Step [1200/1200], Loss: 0.0006
Epoch [191/200], Step [100/1200], Loss: 0.0000
Epoch [191/200], Step [200/1200], Loss: 0.0000
Epoch [191/200], Step [300/1200], Loss: 0.0001
Epoch [191/200], Step [400/1200], Loss: 0.0000
Epoch [191/200], Step [500/1200], Loss: 0.0000
Epoch [191/200], Step [600/1200], Loss: 0.0059
Epoch [191/200], Step [700/1200], Loss: 0.0000
Epoch [191/200], Step [800/1200], Loss: 0.0002
Epoch [191/200], Step [900/1200], Loss: 0.1724
Epoch [191/200], Step [1000/1200], Loss: 0.0000
Epoch [191/200], Step [1100/1200], Loss: 0.0000
Epoch [191/200], Step [1200/1200], Loss: 0.0000
Epoch [192/200], Step [100/1200], Loss: 0.0000
Epoch [192/200], Step [200/1200], Loss: 0.0000
Epoch [192/200], Step [300/1200], Loss: 0.0000
Epoch [192/200], Step [400/1200], Loss: 0.0000
Epoch [192/200], Step [500/1200], Loss: 0.0000
Epoch [192/200], Step [600/1200], Loss: 0.0000
Epoch [192/200], Step [700/1200], Loss: 0.0001
Epoch [192/200], Step [800/1200], Loss: 0.0000
Epoch [192/200], Step [900/1200], Loss: 0.0001
Epoch [192/200], Step [1000/1200], Loss: 0.0000
Epoch [192/200], Step [1100/1200], Loss: 0.0000
Epoch [192/200], Step [1200/1200], Loss: 0.0019
Epoch [193/200], Step [100/1200], Loss: 0.0000
Epoch [193/200], Step [200/1200], Loss: 0.0002
Epoch [193/200], Step [300/1200], Loss: 0.0000
Epoch [193/200], Step [400/1200], Loss: 0.0020
Epoch [193/200], Step [500/1200], Loss: 0.0000
Epoch [193/200], Step [600/1200], Loss: 0.0000
Epoch [193/200], Step [700/1200], Loss: 0.0000
Epoch [193/200], Step [800/1200], Loss: 0.0096
Epoch [193/200], Step [900/1200], Loss: 0.0615
Epoch [193/200], Step [1000/1200], Loss: 0.0061
Epoch [193/200], Step [1100/1200], Loss: 0.0000
Epoch [193/200], Step [1200/1200], Loss: 0.0001
Epoch [194/200], Step [100/1200], Loss: 0.0005
Epoch [194/200], Step [200/1200], Loss: 0.0003
Epoch [194/200], Step [300/1200], Loss: 0.0008
Epoch [194/200], Step [400/1200], Loss: 0.0001
Epoch [194/200], Step [500/1200], Loss: 0.0000
Epoch [194/200], Step [600/1200], Loss: 0.0000
Epoch [194/200], Step [700/1200], Loss: 0.0002
Epoch [194/200], Step [800/1200], Loss: 0.0000
Epoch [194/200], Step [900/1200], Loss: 0.0000
Epoch [194/200], Step [1000/1200], Loss: 0.0488
Epoch [194/200], Step [1100/1200], Loss: 0.1032
Epoch [194/200], Step [1200/1200], Loss: 0.0001
Epoch [195/200], Step [100/1200], Loss: 0.0000
Epoch [195/200], Step [200/1200], Loss: 0.0000
Epoch [195/200], Step [300/1200], Loss: 0.0021
Epoch [195/200], Step [400/1200], Loss: 0.0000
Epoch [195/200], Step [500/1200], Loss: 0.0000
Epoch [195/200], Step [600/1200], Loss: 0.0006
Epoch [195/200], Step [700/1200], Loss: 0.0000
Epoch [195/200], Step [800/1200], Loss: 0.0410
Epoch [195/200], Step [900/1200], Loss: 0.0000
Epoch [195/200], Step [1000/1200], Loss: 0.0000
Epoch [195/200], Step [1100/1200], Loss: 0.0000
Epoch [195/200], Step [1200/1200], Loss: 0.0057
Epoch [196/200], Step [100/1200], Loss: 0.0364
Epoch [196/200], Step [200/1200], Loss: 0.0000
Epoch [196/200], Step [300/1200], Loss: 0.0000
Epoch [196/200], Step [400/1200], Loss: 0.0069
Epoch [196/200], Step [500/1200], Loss: 0.0000
Epoch [196/200], Step [600/1200], Loss: 0.0002
Epoch [196/200], Step [700/1200], Loss: 0.0000
Epoch [196/200], Step [800/1200], Loss: 0.0000
Epoch [196/200], Step [900/1200], Loss: 0.0026
Epoch [196/200], Step [1000/1200], Loss: 0.0039
Epoch [196/200], Step [1100/1200], Loss: 0.0000
Epoch [196/200], Step [1200/1200], Loss: 0.0000
Epoch [197/200], Step [100/1200], Loss: 0.0034
Epoch [197/200], Step [200/1200], Loss: 0.0001
Epoch [197/200], Step [300/1200], Loss: 0.0005
Epoch [197/200], Step [400/1200], Loss: 0.0000
Epoch [197/200], Step [500/1200], Loss: 0.0000
Epoch [197/200], Step [600/1200], Loss: 0.0000
Epoch [197/200], Step [700/1200], Loss: 0.0002
Epoch [197/200], Step [800/1200], Loss: 0.0000
Epoch [197/200], Step [900/1200], Loss: 0.0008
Epoch [197/200], Step [1000/1200], Loss: 0.0001
Epoch [197/200], Step [1100/1200], Loss: 0.0000
Epoch [197/200], Step [1200/1200], Loss: 0.0000
Epoch [198/200], Step [100/1200], Loss: 0.0002
Epoch [198/200], Step [200/1200], Loss: 0.0000
Epoch [198/200], Step [300/1200], Loss: 0.0000
Epoch [198/200], Step [400/1200], Loss: 0.0001
Epoch [198/200], Step [500/1200], Loss: 0.0000
Epoch [198/200], Step [600/1200], Loss: 0.0000
Epoch [198/200], Step [700/1200], Loss: 0.0523
Epoch [198/200], Step [800/1200], Loss: 0.0001
Epoch [198/200], Step [900/1200], Loss: 0.0019
Epoch [198/200], Step [1000/1200], Loss: 0.0000
Epoch [198/200], Step [1100/1200], Loss: 0.0217
Epoch [198/200], Step [1200/1200], Loss: 0.0003
Epoch [199/200], Step [100/1200], Loss: 0.0160
Epoch [199/200], Step [200/1200], Loss: 0.0024
Epoch [199/200], Step [300/1200], Loss: 0.0000
Epoch [199/200], Step [400/1200], Loss: 0.0001
Epoch [199/200], Step [500/1200], Loss: 0.0000
Epoch [199/200], Step [600/1200], Loss: 0.0000
Epoch [199/200], Step [700/1200], Loss: 0.0000
Epoch [199/200], Step [800/1200], Loss: 0.0240
Epoch [199/200], Step [900/1200], Loss: 0.0001
Epoch [199/200], Step [1000/1200], Loss: 0.0055
Epoch [199/200], Step [1100/1200], Loss: 0.0000
Epoch [199/200], Step [1200/1200], Loss: 0.0005
Epoch [200/200], Step [100/1200], Loss: 0.0146
Epoch [200/200], Step [200/1200], Loss: 0.0000
Epoch [200/200], Step [300/1200], Loss: 0.0001
Epoch [200/200], Step [400/1200], Loss: 0.0022
Epoch [200/200], Step [500/1200], Loss: 0.0110
Epoch [200/200], Step [600/1200], Loss: 0.0000
Epoch [200/200], Step [700/1200], Loss: 0.0000
Epoch [200/200], Step [800/1200], Loss: 0.0000
Epoch [200/200], Step [900/1200], Loss: 0.0000
Epoch [200/200], Step [1000/1200], Loss: 0.0000
Epoch [200/200], Step [1100/1200], Loss: 0.0001
Epoch [200/200], Step [1200/1200], Loss: 0.0001
Test Accuracy of the model on the 10000 test images: 99.04 %